

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 08 13:53:54 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  000D8A                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _motor1
    41  000D8A  0A                 	db	10
    42  000D8B  14                 	db	20
    43                           
    44                           ;initializer for _problem
    45  000D8C  5A                 	db	low STR_1
    46  000D8D  06                 	db	high STR_1
    47                           
    48                           ;initializer for _startup
    49  000D8E  46                 	db	low STR_2
    50  000D8F  06                 	db	high STR_2
    51                           
    52                           	psect	smallconst
    53  000600                     __psmallconst:
    54                           	opt stack 0
    55  000600  00                 	db	0
    56  000601                     _lcd_init:
    57                           	opt stack 0
    58  000601  33                 	db	51
    59  000602  32                 	db	50
    60  000603  2C                 	db	44
    61  000604  06                 	db	6
    62  000605  0C                 	db	12
    63  000606                     __end_of_lcd_init:
    64                           	opt stack 0
    65  000606                     _msg_ary:
    66                           	opt stack 0
    67  000606  44                 	db	68
    68  000607  45                 	db	69
    69  000608  53                 	db	83
    70  000609  49                 	db	73
    71  00060A  52                 	db	82
    72  00060B  45                 	db	69
    73  00060C  44                 	db	68
    74  00060D  00                 	db	0
    75  00060E  00                 	db	0
    76  00060F  00                 	db	0
    77  000610  00                 	db	0
    78  000611  00                 	db	0
    79  000612  00                 	db	0
    80  000613  00                 	db	0
    81  000614  00                 	db	0
    82  000615  00                 	db	0
    83  000616  41                 	db	65
    84  000617  43                 	db	67
    85  000618  54                 	db	84
    86  000619  55                 	db	85
    87  00061A  41                 	db	65
    88  00061B  4C                 	db	76
    89  00061C  00                 	db	0
    90  00061D  00                 	db	0
    91  00061E  00                 	db	0
    92  00061F  00                 	db	0
    93  000620  00                 	db	0
    94  000621  00                 	db	0
    95  000622  00                 	db	0
    96  000623  00                 	db	0
    97  000624  00                 	db	0
    98  000625  00                 	db	0
    99  000626  50                 	db	80
   100  000627  4F                 	db	79
   101  000628  54                 	db	84
   102  000629  00                 	db	0
   103  00062A  00                 	db	0
   104  00062B  00                 	db	0
   105  00062C  00                 	db	0
   106  00062D  00                 	db	0
   107  00062E  00                 	db	0
   108  00062F  00                 	db	0
   109  000630  00                 	db	0
   110  000631  00                 	db	0
   111  000632  00                 	db	0
   112  000633  00                 	db	0
   113  000634  00                 	db	0
   114  000635  00                 	db	0
   115  000636  20                 	db	32
   116  000637  45                 	db	69
   117  000638  4E                 	db	78
   118  000639  54                 	db	84
   119  00063A  45                 	db	69
   120  00063B  52                 	db	82
   121  00063C  00                 	db	0
   122  00063D  00                 	db	0
   123  00063E  00                 	db	0
   124  00063F  00                 	db	0
   125  000640  00                 	db	0
   126  000641  00                 	db	0
   127  000642  00                 	db	0
   128  000643  00                 	db	0
   129  000644  00                 	db	0
   130  000645  00                 	db	0
   131  000646                     __end_of_msg_ary:
   132                           	opt stack 0
   133  0000                     _ADCON1	set	4033
   134  0000                     _INTCONbits	set	4082
   135  0000                     _LATC	set	3979
   136  0000                     _LATCbits	set	3979
   137  0000                     _LATDbits	set	3980
   138  0000                     _OSCCONbits	set	4051
   139  0000                     _PORTB	set	3969
   140  0000                     _PORTCbits	set	3970
   141  0000                     _T0CON	set	4053
   142  0000                     _T0CONbits	set	4053
   143  0000                     _TMR0H	set	4055
   144  0000                     _TMR0L	set	4054
   145  0000                     _TRISB	set	3987
   146  0000                     _TRISC	set	3988
   147  0000                     _TRISD	set	3989
   148  000646                     STR_2:
   149  000646  52                 	db	82	;'R'
   150  000647  65                 	db	101	;'e'
   151  000648  61                 	db	97	;'a'
   152  000649  64                 	db	100	;'d'
   153  00064A  79                 	db	121	;'y'
   154  00064B  20                 	db	32
   155  00064C  74                 	db	116	;'t'
   156  00064D  6F                 	db	111	;'o'
   157  00064E  20                 	db	32
   158  00064F  67                 	db	103	;'g'
   159  000650  6F                 	db	111	;'o'
   160  000651  00                 	db	0
   161  000652                     STR_3:
   162  000652  44                 	db	68	;'D'
   163  000653  45                 	db	69	;'E'
   164  000654  53                 	db	83	;'S'
   165  000655  49                 	db	73	;'I'
   166  000656  52                 	db	82	;'R'
   167  000657  45                 	db	69	;'E'
   168  000658  44                 	db	68	;'D'
   169  000659  00                 	db	0
   170  00065A                     STR_1:
   171  00065A  50                 	db	80	;'P'
   172  00065B  72                 	db	114	;'r'
   173  00065C  6F                 	db	111	;'o'
   174  00065D  62                 	db	98	;'b'
   175  00065E  6C                 	db	108	;'l'
   176  00065F  65                 	db	101	;'e'
   177  000660  6D                 	db	109	;'m'
   178  000661  00                 	db	0
   179  000662                     STR_4:
   180  000662  41                 	db	65	;'A'
   181  000663  43                 	db	67	;'C'
   182  000664  54                 	db	84	;'T'
   183  000665  55                 	db	85	;'U'
   184  000666  41                 	db	65	;'A'
   185  000667  4C                 	db	76	;'L'
   186  000668  00                 	db	0
   187  000669                     STR_8:
   188  000669  45                 	db	69	;'E'
   189  00066A  4E                 	db	78	;'N'
   190  00066B  54                 	db	84	;'T'
   191  00066C  45                 	db	69	;'E'
   192  00066D  52                 	db	82	;'R'
   193  00066E  00                 	db	0
   194  00066F                     STR_7:
   195  00066F  50                 	db	80	;'P'
   196  000670  4F                 	db	79	;'O'
   197  000671  54                 	db	84	;'T'
   198  000672  00                 	db	0
   199  0000                     
   200                           ; #config settings
   201  000673  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           	psect	cinit
   204  000C38                     __pcinit:
   205                           	opt stack 0
   206  000C38                     start_initialization:
   207                           	opt stack 0
   208  000C38                     __initialization:
   209                           	opt stack 0
   210                           
   211                           ; Clear objects allocated to COMRAM (5 bytes)
   212  000C38  6A2C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   213  000C3A  6A2B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   214  000C3C  6A2A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   215  000C3E  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
   216  000C40  6A28               	clrf	__pbssCOMRAM& (0+255),c
   217                           
   218                           ; Initialize objects allocated to COMRAM (6 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220  000C42  0E8A               	movlw	low __pidataCOMRAM
   221  000C44  6EF6               	movwf	tblptrl,c
   222  000C46  0E0D               	movlw	high __pidataCOMRAM
   223  000C48  6EF7               	movwf	tblptrh,c
   224  000C4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225  000C4C  6EF8               	movwf	tblptru,c
   226  000C4E  EE00  F022         	lfsr	0,__pdataCOMRAM
   227  000C52  EE10 F006          	lfsr	1,6
   228  000C56                     copy_data0:
   229  000C56  0009               	tblrd		*+
   230  000C58  CFF5 FFEE          	movff	tablat,postinc0
   231  000C5C  50E5               	movf	postdec1,w,c
   232  000C5E  50E1               	movf	fsr1l,w,c
   233  000C60  E1FA               	bnz	copy_data0
   234  000C62                     end_of_initialization:
   235                           	opt stack 0
   236  000C62                     __end_of__initialization:
   237                           	opt stack 0
   238  000C62  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239  000C64  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240  000C66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  000C68  6EF8               	movwf	tblptru,c
   242  000C6A  0100               	movlb	0
   243  000C6C  EF3A  F003         	goto	_main	;jump to C main() function
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           postdec1	equ	0xFE5
   250                           fsr1l	equ	0xFE1
   251                           
   252                           	psect	bssCOMRAM
   253  000028                     __pbssCOMRAM:
   254                           	opt stack 0
   255  000028                     Find_Button_Press@Button_Count:
   256                           	opt stack 0
   257  000028                     	ds	1
   258  000029                     Find_Button_Press@Button_State:
   259                           	opt stack 0
   260  000029                     	ds	1
   261  00002A                     Find_Button_Press@Temp_Press:
   262                           	opt stack 0
   263  00002A                     	ds	1
   264  00002B                     _Button_Press:
   265                           	opt stack 0
   266  00002B                     	ds	1
   267  00002C                     _count_test:
   268                           	opt stack 0
   269  00002C                     	ds	1
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	dataCOMRAM
   279  000022                     __pdataCOMRAM:
   280                           	opt stack 0
   281  000022                     _motor1:
   282                           	opt stack 0
   283  000022                     	ds	2
   284  000024                     _problem:
   285                           	opt stack 0
   286  000024                     	ds	2
   287  000026                     _startup:
   288                           	opt stack 0
   289  000026                     	ds	2
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	cstackCOMRAM
   299  000001                     __pcstackCOMRAM:
   300                           	opt stack 0
   301  000001                     i2WriteTimer0@timer0:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x0
   305  000001                     	ds	2
   306  000003                     i2WriteTimer0@timer:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x2
   310  000003                     	ds	2
   311  000005                     ??_myIsr:
   312                           
   313                           ; 0 bytes @ 0x4
   314  000005                     	ds	15
   315  000014                     ??_delay_s:
   316  000014                     ?___awdiv:
   317                           	opt stack 0
   318  000014                     ?___awmod:
   319                           	opt stack 0
   320  000014                     lcd_raw_send@RS:
   321                           	opt stack 0
   322  000014                     OpenTimer0@config:
   323                           	opt stack 0
   324  000014                     WriteTimer0@timer0:
   325                           	opt stack 0
   326  000014                     ___awdiv@dividend:
   327                           	opt stack 0
   328  000014                     ___awmod@dividend:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x13
   332  000014                     	ds	1
   333  000015                     ??_lcd_raw_send:
   334  000015                     delay_s@secs:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x14
   338  000015                     	ds	1
   339  000016                     delay_s@j:
   340                           	opt stack 0
   341  000016                     WriteTimer0@timer:
   342                           	opt stack 0
   343  000016                     ___awdiv@divisor:
   344                           	opt stack 0
   345  000016                     ___awmod@divisor:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x15
   349  000016                     	ds	1
   350  000017                     lcd_raw_send@in:
   351                           	opt stack 0
   352  000017                     delay_s@i:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x16
   356  000017                     	ds	1
   357  000018                     lcd_print_ch@in:
   358                           	opt stack 0
   359  000018                     lcd_command@in:
   360                           	opt stack 0
   361  000018                     ___awdiv@counter:
   362                           	opt stack 0
   363  000018                     ___awmod@counter:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x17
   367  000018                     	ds	1
   368  000019                     ??_lcd_clear:
   369  000019                     lcd_cursor@y:
   370                           	opt stack 0
   371  000019                     ___awdiv@sign:
   372                           	opt stack 0
   373  000019                     ___awmod@sign:
   374                           	opt stack 0
   375  000019                     lcd_print@mess:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x18
   379  000019                     	ds	1
   380  00001A                     ??_lcd_start:
   381  00001A                     lcd_cursor@x:
   382                           	opt stack 0
   383  00001A                     ___awdiv@quotient:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x19
   387  00001A                     	ds	1
   388  00001B                     ??_lcd_print:
   389  00001B                     lcd_start@i:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x1A
   393  00001B                     	ds	1
   394  00001C                     lcd_display_value@hunds:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x1B
   398  00001C                     	ds	1
   399  00001D                     lcd_print@i:
   400                           	opt stack 0
   401  00001D                     lcd_display_value@tens:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x1C
   405  00001D                     	ds	1
   406  00001E                     ??_Window:
   407  00001E                     lcd_display_value@units:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1D
   411  00001E                     	ds	1
   412  00001F                     lcd_display_value@value:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1E
   416  00001F                     	ds	1
   417  000020                     Window@num:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x1F
   421  000020                     	ds	1
   422  000021                     main@my_mch_state:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x20
   426  000021                     	ds	1
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 106 in file "Motor_1.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  my_mch_state    1   32[COMRAM] enum E4345
   445 ;; Return value:  Size  Location     Type
   446 ;;		None               void
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   454 ;;      Params:         0       0       0       0       0       0       0
   455 ;;      Locals:         1       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0
   457 ;;      Totals:         1       0       0       0       0       0       0
   458 ;;Total ram usage:        1 bytes
   459 ;; Hardware stack levels required when called:    6
   460 ;; This function calls:
   461 ;;		_HeartBeat
   462 ;;		_Initial
   463 ;;		_Window
   464 ;;		_delay_s
   465 ;;		_lcd_clear
   466 ;;		_lcd_cursor
   467 ;;		_lcd_display_value
   468 ;;		_lcd_print
   469 ;;		_lcd_start
   470 ;; This function is called by:
   471 ;;		Startup code after reset
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text0
   476  000674                     __ptext0:
   477                           	opt stack 0
   478  000674                     _main:
   479                           	opt stack 25
   480                           
   481                           ;Motor_1.c: 112: typedef enum {RUN = 0,UPDATE_DESIRE} states;
   482                           ;Motor_1.c: 113: states my_mch_state = UPDATE_DESIRE;
   483                           
   484                           ;incstack = 0
   485  000674  0E01               	movlw	1
   486  000676  6E21               	movwf	main@my_mch_state,c
   487                           
   488                           ;Motor_1.c: 115: Initial();
   489  000678  EC69  F006         	call	_Initial	;wreg free
   490                           
   491                           ;Motor_1.c: 116: motor1.ACTUAL1 =0;
   492  00067C  0E00               	movlw	0
   493  00067E  6E23               	movwf	_motor1+1,c
   494                           
   495                           ;Motor_1.c: 117: motor1.DESIRED1 =30;
   496  000680  0E1E               	movlw	30
   497  000682  6E22               	movwf	_motor1,c
   498                           
   499                           ;Motor_1.c: 118: HeartBeat();
   500  000684  ECA5  F006         	call	_HeartBeat	;wreg free
   501                           
   502                           ;Motor_1.c: 119: lcd_start ();
   503  000688  ECFB  F005         	call	_lcd_start	;wreg free
   504                           
   505                           ;Motor_1.c: 120: lcd_cursor ( 0, 0 ) ;
   506  00068C  0E00               	movlw	0
   507  00068E  6E19               	movwf	lcd_cursor@y,c
   508  000690  0E00               	movlw	0
   509  000692  EC8F  F006         	call	_lcd_cursor
   510                           
   511                           ;Motor_1.c: 121: lcd_print ( startup ) ;
   512  000696  C026  F019         	movff	_startup,lcd_print@mess
   513  00069A  C027  F01A         	movff	_startup+1,lcd_print@mess+1
   514  00069E  ECD1  F005         	call	_lcd_print	;wreg free
   515                           
   516                           ;Motor_1.c: 123: delay_s(2);
   517  0006A2  0E02               	movlw	2
   518  0006A4  EC38  F006         	call	_delay_s
   519                           
   520                           ;Motor_1.c: 125: Window(0);
   521  0006A8  0E00               	movlw	0
   522  0006AA  EC9E  F005         	call	_Window
   523                           
   524                           ;Motor_1.c: 126: lcd_cursor ( 8, 0 ) ;
   525  0006AE  0E00               	movlw	0
   526  0006B0  6E19               	movwf	lcd_cursor@y,c
   527  0006B2  0E08               	movlw	8
   528  0006B4  EC8F  F006         	call	_lcd_cursor
   529                           
   530                           ;Motor_1.c: 127: lcd_display_value("DESIRED");
   531  0006B8  0E52               	movlw	STR_3& (0+255)
   532  0006BA  ECA0  F004         	call	_lcd_display_value
   533                           
   534                           ;Motor_1.c: 128: lcd_cursor ( 8, 1 ) ;
   535  0006BE  0E01               	movlw	1
   536  0006C0  6E19               	movwf	lcd_cursor@y,c
   537  0006C2  0E08               	movlw	8
   538  0006C4  EC8F  F006         	call	_lcd_cursor
   539                           
   540                           ;Motor_1.c: 129: lcd_display_value("ACTUAL");
   541  0006C8  0E62               	movlw	STR_4& (0+255)
   542  0006CA  ECA0  F004         	call	_lcd_display_value
   543  0006CE                     l1420:
   544  0006CE  502B               	movf	_Button_Press,w,c
   545  0006D0  A4D8               	btfss	status,2,c
   546  0006D2  D019               	goto	l1436
   547  0006D4  D7FC               	goto	l1420
   548  0006D6                     l140:
   549                           
   550                           ;Motor_1.c: 141: if (Button_Press.B0){
   551  0006D6  A02B               	btfss	_Button_Press,0,c
   552  0006D8  D052               	goto	l1454
   553                           
   554                           ;Motor_1.c: 142: my_mch_state = UPDATE_DESIRE;
   555  0006DA  0E01               	movlw	1
   556  0006DC  6E21               	movwf	main@my_mch_state,c
   557                           
   558                           ;Motor_1.c: 143: Window(1);
   559  0006DE  0E01               	movlw	1
   560  0006E0  EC9E  F005         	call	_Window
   561                           
   562                           ;Motor_1.c: 144: }
   563                           ;Motor_1.c: 146: break;
   564  0006E4  D04C               	goto	l1454
   565  0006E6                     l143:
   566                           
   567                           ;Motor_1.c: 148: if (Button_Press.B0){
   568  0006E6  A02B               	btfss	_Button_Press,0,c
   569  0006E8  D04A               	goto	l1454
   570                           
   571                           ;Motor_1.c: 149: my_mch_state = RUN;
   572  0006EA  0E00               	movlw	0
   573  0006EC  6E21               	movwf	main@my_mch_state,c
   574                           
   575                           ;Motor_1.c: 150: Window(0);
   576  0006EE  0E00               	movlw	0
   577  0006F0  EC9E  F005         	call	_Window
   578                           
   579                           ;Motor_1.c: 151: }
   580                           ;Motor_1.c: 152: break;
   581  0006F4  D044               	goto	l1454
   582  0006F6                     l145:
   583                           
   584                           ;Motor_1.c: 154: if (Button_Press.B0){
   585  0006F6  A02B               	btfss	_Button_Press,0,c
   586  0006F8  D042               	goto	l1454
   587                           
   588                           ;Motor_1.c: 155: my_mch_state = RUN;
   589  0006FA  0E00               	movlw	0
   590  0006FC  6E21               	movwf	main@my_mch_state,c
   591                           
   592                           ;Motor_1.c: 156: Window(0);
   593  0006FE  0E00               	movlw	0
   594  000700  EC9E  F005         	call	_Window
   595                           
   596                           ;Motor_1.c: 159: }
   597                           
   598                           ;Motor_1.c: 157: }
   599                           ;Motor_1.c: 158: break;
   600  000704  D03C               	goto	l1454
   601  000706                     l1436:
   602  000706  5021               	movf	main@my_mch_state,w,c
   603                           
   604                           ; Switch size 1, requested type "space"
   605                           ; Number of cases is 2, Range of values is 0 to 1
   606                           ; switch strategies available:
   607                           ; Name         Instructions Cycles
   608                           ; simple_byte            7     4 (average)
   609                           ;	Chosen strategy is simple_byte
   610  000708  0A00               	xorlw	0	; case 0
   611  00070A  B4D8               	btfsc	status,2,c
   612  00070C  D7E4               	goto	l140
   613  00070E  0A01               	xorlw	1	; case 1
   614  000710  B4D8               	btfsc	status,2,c
   615  000712  D7E9               	goto	l143
   616  000714  D7F0               	goto	l145
   617  000716                     l1438:
   618                           
   619                           ;Motor_1.c: 165: lcd_cursor ( 7, 0 ) ;
   620  000716  0E00               	movlw	0
   621  000718  6E19               	movwf	lcd_cursor@y,c
   622  00071A  0E07               	movlw	7
   623  00071C  EC8F  F006         	call	_lcd_cursor
   624                           
   625                           ;Motor_1.c: 166: lcd_display_value("DESIRED");
   626  000720  0E52               	movlw	STR_3& (0+255)
   627  000722  ECA0  F004         	call	_lcd_display_value
   628                           
   629                           ;Motor_1.c: 167: lcd_cursor ( 7, 1 ) ;
   630  000726  0E01               	movlw	1
   631  000728  6E19               	movwf	lcd_cursor@y,c
   632  00072A  0E07               	movlw	7
   633  00072C  EC8F  F006         	call	_lcd_cursor
   634                           
   635                           ;Motor_1.c: 168: lcd_display_value("ACTUAL");
   636  000730  0E62               	movlw	STR_4& (0+255)
   637  000732  ECA0  F004         	call	_lcd_display_value
   638                           
   639                           ;Motor_1.c: 169: LATC = 0x01;
   640  000736  0E01               	movlw	1
   641  000738  D020               	goto	L2
   642  00073A                     l1442:
   643                           
   644                           ;Motor_1.c: 180: lcd_cursor ( 4, 0 ) ;
   645  00073A  0E00               	movlw	0
   646  00073C  6E19               	movwf	lcd_cursor@y,c
   647  00073E  0E04               	movlw	4
   648  000740  EC8F  F006         	call	_lcd_cursor
   649                           
   650                           ;Motor_1.c: 181: lcd_display_value("POT");
   651  000744  0E6F               	movlw	STR_7& (0+255)
   652  000746  ECA0  F004         	call	_lcd_display_value
   653                           
   654                           ;Motor_1.c: 182: lcd_cursor ( 0, 1 ) ;
   655  00074A  0E01               	movlw	1
   656  00074C  6E19               	movwf	lcd_cursor@y,c
   657  00074E  0E00               	movlw	0
   658  000750  EC8F  F006         	call	_lcd_cursor
   659                           
   660                           ;Motor_1.c: 183: lcd_display_value("ENTER");
   661  000754  0E69               	movlw	STR_8& (0+255)
   662  000756  ECA0  F004         	call	_lcd_display_value
   663                           
   664                           ;Motor_1.c: 184: LATC= 0x02;
   665  00075A  0E02               	movlw	2
   666  00075C  D00E               	goto	L2
   667  00075E                     l1446:
   668                           
   669                           ;Motor_1.c: 188: lcd_cursor ( 4, 0 ) ;
   670  00075E  0E00               	movlw	0
   671  000760  6E19               	movwf	lcd_cursor@y,c
   672  000762  0E04               	movlw	4
   673  000764  EC8F  F006         	call	_lcd_cursor
   674                           
   675                           ;Motor_1.c: 189: lcd_clear();
   676  000768  EC52  F006         	call	_lcd_clear	;wreg free
   677                           
   678                           ;Motor_1.c: 190: lcd_print ( problem );
   679  00076C  C024  F019         	movff	_problem,lcd_print@mess
   680  000770  C025  F01A         	movff	_problem+1,lcd_print@mess+1
   681  000774  ECD1  F005         	call	_lcd_print	;wreg free
   682                           
   683                           ;Motor_1.c: 191: LATC = 0x05;
   684  000778  0E05               	movlw	5
   685  00077A                     L2:
   686  00077A  6E8B               	movwf	3979,c	;volatile
   687                           
   688                           ;Motor_1.c: 193: }
   689                           
   690                           ;Motor_1.c: 192: break;
   691  00077C  D008               	goto	l1456
   692  00077E                     l1454:
   693  00077E  5021               	movf	main@my_mch_state,w,c
   694                           
   695                           ; Switch size 1, requested type "space"
   696                           ; Number of cases is 2, Range of values is 0 to 1
   697                           ; switch strategies available:
   698                           ; Name         Instructions Cycles
   699                           ; simple_byte            7     4 (average)
   700                           ;	Chosen strategy is simple_byte
   701  000780  0A00               	xorlw	0	; case 0
   702  000782  B4D8               	btfsc	status,2,c
   703  000784  D7C8               	goto	l1438
   704  000786  0A01               	xorlw	1	; case 1
   705  000788  B4D8               	btfsc	status,2,c
   706  00078A  D7D7               	goto	l1442
   707  00078C  D7E8               	goto	l1446
   708  00078E                     l1456:
   709                           
   710                           ;Motor_1.c: 195: Button_Press.Full = 0;
   711  00078E  0E00               	movlw	0
   712  000790  6E2B               	movwf	_Button_Press,c
   713  000792  D79D               	goto	l1420
   714  000794                     __end_of_main:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           postinc0	equ	0xFEE
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           status	equ	0xFD8
   724                           
   725 ;; *************** function _lcd_start *****************
   726 ;; Defined at:
   727 ;;		line 189 in file "../Repositories/LCD_library/lcdlib_2016.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  i               1   26[COMRAM] unsigned char 
   732 ;;  t               1    0        unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      unsigned char 
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   742 ;;      Params:         0       0       0       0       0       0       0
   743 ;;      Locals:         1       0       0       0       0       0       0
   744 ;;      Temps:          1       0       0       0       0       0       0
   745 ;;      Totals:         2       0       0       0       0       0       0
   746 ;;Total ram usage:        2 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    5
   749 ;; This function calls:
   750 ;;		_lcd_clear
   751 ;;		_lcd_command
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text1
   758  000BF6                     __ptext1:
   759                           	opt stack 0
   760  000BF6                     _lcd_start:
   761                           	opt stack 25
   762                           
   763                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   764                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   765                           
   766                           ;incstack = 0
   767  000BF6  5095               	movf	3989,w,c	;volatile
   768  000BF8  0BC0               	andlw	192
   769  000BFA  6E95               	movwf	3989,c	;volatile
   770                           
   771                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   772  000BFC  0EE0               	movlw	224
   773  000BFE  6E1A               	movwf	??_lcd_start& (0+255),c
   774  000C00  0E6A               	movlw	106
   775  000C02                     u677:
   776  000C02  2EE8               	decfsz	wreg,f,c
   777  000C04  D7FE               	goto	u677
   778  000C06  2E1A               	decfsz	??_lcd_start& (0+255),f,c
   779  000C08  D7FC               	goto	u677
   780                           
   781                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   782  000C0A  0E00               	movlw	0
   783  000C0C  6E1B               	movwf	lcd_start@i,c
   784  000C0E                     l1316:
   785  000C0E  0E04               	movlw	4
   786  000C10  641B               	cpfsgt	lcd_start@i,c
   787  000C12  D001               	goto	l1320
   788  000C14  D00E               	goto	l1326
   789  000C16                     l1320:
   790                           
   791                           ;lcdlib_2016.c: 204: {
   792                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   793  000C16  501B               	movf	lcd_start@i,w,c
   794  000C18  0D01               	mullw	1
   795  000C1A  0E01               	movlw	low _lcd_init
   796  000C1C  24F3               	addwf	prodl,w,c
   797  000C1E  6EF6               	movwf	tblptrl,c
   798  000C20  0E06               	movlw	high _lcd_init
   799  000C22  20F4               	addwfc	prodh,w,c
   800  000C24  6EF7               	movwf	tblptrh,c
   801  000C26                     	if	0	;There are less than 3 active tblptr bytes
   802  000C26                     	endif
   803  000C26  0008               	tblrd		*
   804  000C28  50F5               	movf	tablat,w,c
   805  000C2A  ECBE  F006         	call	_lcd_command
   806  000C2E  2A1B               	incf	lcd_start@i,f,c
   807  000C30  D7EE               	goto	l1316
   808  000C32                     l1326:
   809                           
   810                           ;lcdlib_2016.c: 206: }
   811                           ;lcdlib_2016.c: 207: lcd_clear () ;
   812  000C32  EC52  F006         	call	_lcd_clear	;wreg free
   813  000C36  0012               	return	
   814  000C38                     __end_of_lcd_start:
   815                           	opt stack 0
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           prodh	equ	0xFF4
   821                           prodl	equ	0xFF3
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           postdec1	equ	0xFE5
   825                           fsr1l	equ	0xFE1
   826                           status	equ	0xFD8
   827                           
   828 ;; *************** function _lcd_display_value *****************
   829 ;; Defined at:
   830 ;;		line 244 in file "../Repositories/LCD_library/lcdlib_2016.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  value           1    wreg     unsigned char 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  value           1   30[COMRAM] unsigned char 
   835 ;;  units           1   29[COMRAM] unsigned char 
   836 ;;  tens            1   28[COMRAM] unsigned char 
   837 ;;  hunds           1   27[COMRAM] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;		None               void
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   847 ;;      Params:         0       0       0       0       0       0       0
   848 ;;      Locals:         4       0       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0
   850 ;;      Totals:         4       0       0       0       0       0       0
   851 ;;Total ram usage:        4 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    4
   854 ;; This function calls:
   855 ;;		___awdiv
   856 ;;		___awmod
   857 ;;		_lcd_print_ch
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text2
   864  000940                     __ptext2:
   865                           	opt stack 0
   866  000940                     _lcd_display_value:
   867                           	opt stack 26
   868                           
   869                           ;incstack = 0
   870                           ;lcd_display_value@value stored from wreg
   871  000940  6E1F               	movwf	lcd_display_value@value,c
   872                           
   873                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
   874                           ;lcdlib_2016.c: 250: units = value % 10 ;
   875  000942  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
   876  000946  6A15               	clrf	___awmod@dividend+1,c
   877  000948  0E00               	movlw	0
   878  00094A  6E17               	movwf	___awmod@divisor+1,c
   879  00094C  0E0A               	movlw	10
   880  00094E  6E16               	movwf	___awmod@divisor,c
   881  000950  EC66  F005         	call	___awmod	;wreg free
   882  000954  5014               	movf	?___awmod,w,c
   883  000956  6E1E               	movwf	lcd_display_value@units,c
   884                           
   885                           ;lcdlib_2016.c: 251: value = value / 10 ;
   886  000958  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
   887  00095C  6A15               	clrf	___awdiv@dividend+1,c
   888  00095E  0E00               	movlw	0
   889  000960  6E17               	movwf	___awdiv@divisor+1,c
   890  000962  0E0A               	movlw	10
   891  000964  6E16               	movwf	___awdiv@divisor,c
   892  000966  ECE5  F004         	call	___awdiv	;wreg free
   893  00096A  5014               	movf	?___awdiv,w,c
   894  00096C  6E1F               	movwf	lcd_display_value@value,c
   895                           
   896                           ;lcdlib_2016.c: 252: tens = value % 10 ;
   897  00096E  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
   898  000972  6A15               	clrf	___awmod@dividend+1,c
   899  000974  0E00               	movlw	0
   900  000976  6E17               	movwf	___awmod@divisor+1,c
   901  000978  0E0A               	movlw	10
   902  00097A  6E16               	movwf	___awmod@divisor,c
   903  00097C  EC66  F005         	call	___awmod	;wreg free
   904  000980  5014               	movf	?___awmod,w,c
   905  000982  6E1D               	movwf	lcd_display_value@tens,c
   906                           
   907                           ;lcdlib_2016.c: 253: value = value / 10 ;
   908  000984  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
   909  000988  6A15               	clrf	___awdiv@dividend+1,c
   910  00098A  0E00               	movlw	0
   911  00098C  6E17               	movwf	___awdiv@divisor+1,c
   912  00098E  0E0A               	movlw	10
   913  000990  6E16               	movwf	___awdiv@divisor,c
   914  000992  ECE5  F004         	call	___awdiv	;wreg free
   915  000996  5014               	movf	?___awdiv,w,c
   916  000998  6E1F               	movwf	lcd_display_value@value,c
   917                           
   918                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
   919  00099A  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
   920  00099E  6A15               	clrf	___awmod@dividend+1,c
   921  0009A0  0E00               	movlw	0
   922  0009A2  6E17               	movwf	___awmod@divisor+1,c
   923  0009A4  0E0A               	movlw	10
   924  0009A6  6E16               	movwf	___awmod@divisor,c
   925  0009A8  EC66  F005         	call	___awmod	;wreg free
   926  0009AC  5014               	movf	?___awmod,w,c
   927  0009AE  6E1C               	movwf	lcd_display_value@hunds,c
   928                           
   929                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
   930  0009B0  501C               	movf	lcd_display_value@hunds,w,c
   931  0009B2  0F30               	addlw	48
   932  0009B4  ECB7  F006         	call	_lcd_print_ch
   933                           
   934                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
   935  0009B8  501D               	movf	lcd_display_value@tens,w,c
   936  0009BA  0F30               	addlw	48
   937  0009BC  ECB7  F006         	call	_lcd_print_ch
   938                           
   939                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
   940  0009C0  501E               	movf	lcd_display_value@units,w,c
   941  0009C2  0F30               	addlw	48
   942  0009C4  ECB7  F006         	call	_lcd_print_ch
   943  0009C8  0012               	return		;funcret
   944  0009CA                     __end_of_lcd_display_value:
   945                           	opt stack 0
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           prodh	equ	0xFF4
   951                           prodl	equ	0xFF3
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           postdec1	equ	0xFE5
   955                           fsr1l	equ	0xFE1
   956                           status	equ	0xFD8
   957                           
   958 ;; *************** function ___awmod *****************
   959 ;; Defined at:
   960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  dividend        2   19[COMRAM] int 
   963 ;;  divisor         2   21[COMRAM] int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  sign            1   24[COMRAM] unsigned char 
   966 ;;  counter         1   23[COMRAM] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  2   19[COMRAM] int 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   976 ;;      Params:         4       0       0       0       0       0       0
   977 ;;      Locals:         2       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0
   979 ;;      Totals:         6       0       0       0       0       0       0
   980 ;;Total ram usage:        6 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    2
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_lcd_display_value
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text3
   991  000ACC                     __ptext3:
   992                           	opt stack 0
   993  000ACC                     ___awmod:
   994                           	opt stack 27
   995                           
   996                           ;incstack = 0
   997  000ACC  0E00               	movlw	0
   998  000ACE  6E19               	movwf	___awmod@sign,c
   999  000AD0  AE15               	btfss	___awmod@dividend+1,7,c
  1000  000AD2  D006               	goto	l1282
  1001  000AD4  6C14               	negf	___awmod@dividend,c
  1002  000AD6  1E15               	comf	___awmod@dividend+1,f,c
  1003  000AD8  B0D8               	btfsc	status,0,c
  1004  000ADA  2A15               	incf	___awmod@dividend+1,f,c
  1005  000ADC  0E01               	movlw	1
  1006  000ADE  6E19               	movwf	___awmod@sign,c
  1007  000AE0                     l1282:
  1008  000AE0  AE17               	btfss	___awmod@divisor+1,7,c
  1009  000AE2  D004               	goto	l1286
  1010  000AE4  6C16               	negf	___awmod@divisor,c
  1011  000AE6  1E17               	comf	___awmod@divisor+1,f,c
  1012  000AE8  B0D8               	btfsc	status,0,c
  1013  000AEA  2A17               	incf	___awmod@divisor+1,f,c
  1014  000AEC                     l1286:
  1015  000AEC  5016               	movf	___awmod@divisor,w,c
  1016  000AEE  1017               	iorwf	___awmod@divisor+1,w,c
  1017  000AF0  B4D8               	btfsc	status,2,c
  1018  000AF2  D018               	goto	l1302
  1019  000AF4  0E01               	movlw	1
  1020  000AF6  6E18               	movwf	___awmod@counter,c
  1021  000AF8  D004               	goto	l1292
  1022  000AFA                     l1290:
  1023  000AFA  90D8               	bcf	status,0,c
  1024  000AFC  3616               	rlcf	___awmod@divisor,f,c
  1025  000AFE  3617               	rlcf	___awmod@divisor+1,f,c
  1026  000B00  2A18               	incf	___awmod@counter,f,c
  1027  000B02                     l1292:
  1028  000B02  AE17               	btfss	___awmod@divisor+1,7,c
  1029  000B04  D7FA               	goto	l1290
  1030  000B06                     l1294:
  1031  000B06  5016               	movf	___awmod@divisor,w,c
  1032  000B08  5C14               	subwf	___awmod@dividend,w,c
  1033  000B0A  5017               	movf	___awmod@divisor+1,w,c
  1034  000B0C  5815               	subwfb	___awmod@dividend+1,w,c
  1035  000B0E  A0D8               	btfss	status,0,c
  1036  000B10  D004               	goto	l1298
  1037  000B12  5016               	movf	___awmod@divisor,w,c
  1038  000B14  5E14               	subwf	___awmod@dividend,f,c
  1039  000B16  5017               	movf	___awmod@divisor+1,w,c
  1040  000B18  5A15               	subwfb	___awmod@dividend+1,f,c
  1041  000B1A                     l1298:
  1042  000B1A  90D8               	bcf	status,0,c
  1043  000B1C  3217               	rrcf	___awmod@divisor+1,f,c
  1044  000B1E  3216               	rrcf	___awmod@divisor,f,c
  1045  000B20  2E18               	decfsz	___awmod@counter,f,c
  1046  000B22  D7F1               	goto	l1294
  1047  000B24                     l1302:
  1048  000B24  5019               	movf	___awmod@sign,w,c
  1049  000B26  B4D8               	btfsc	status,2,c
  1050  000B28  D004               	goto	l1306
  1051  000B2A  6C14               	negf	___awmod@dividend,c
  1052  000B2C  1E15               	comf	___awmod@dividend+1,f,c
  1053  000B2E  B0D8               	btfsc	status,0,c
  1054  000B30  2A15               	incf	___awmod@dividend+1,f,c
  1055  000B32                     l1306:
  1056  000B32  C014  F014         	movff	___awmod@dividend,?___awmod
  1057  000B36  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1058  000B3A  0012               	return	
  1059  000B3C                     __end_of___awmod:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           prodh	equ	0xFF4
  1066                           prodl	equ	0xFF3
  1067                           postinc0	equ	0xFEE
  1068                           wreg	equ	0xFE8
  1069                           postdec1	equ	0xFE5
  1070                           fsr1l	equ	0xFE1
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function ___awdiv *****************
  1074 ;; Defined at:
  1075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  dividend        2   19[COMRAM] int 
  1078 ;;  divisor         2   21[COMRAM] int 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  quotient        2   25[COMRAM] int 
  1081 ;;  sign            1   24[COMRAM] unsigned char 
  1082 ;;  counter         1   23[COMRAM] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2   19[COMRAM] int 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1092 ;;      Params:         4       0       0       0       0       0       0
  1093 ;;      Locals:         4       0       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0
  1095 ;;      Totals:         8       0       0       0       0       0       0
  1096 ;;Total ram usage:        8 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    2
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_lcd_display_value
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text4
  1107  0009CA                     __ptext4:
  1108                           	opt stack 0
  1109  0009CA                     ___awdiv:
  1110                           	opt stack 27
  1111                           
  1112                           ;incstack = 0
  1113  0009CA  0E00               	movlw	0
  1114  0009CC  6E19               	movwf	___awdiv@sign,c
  1115  0009CE  AE17               	btfss	___awdiv@divisor+1,7,c
  1116  0009D0  D006               	goto	l1238
  1117  0009D2  6C16               	negf	___awdiv@divisor,c
  1118  0009D4  1E17               	comf	___awdiv@divisor+1,f,c
  1119  0009D6  B0D8               	btfsc	status,0,c
  1120  0009D8  2A17               	incf	___awdiv@divisor+1,f,c
  1121  0009DA  0E01               	movlw	1
  1122  0009DC  6E19               	movwf	___awdiv@sign,c
  1123  0009DE                     l1238:
  1124  0009DE  AE15               	btfss	___awdiv@dividend+1,7,c
  1125  0009E0  D006               	goto	l1244
  1126  0009E2  6C14               	negf	___awdiv@dividend,c
  1127  0009E4  1E15               	comf	___awdiv@dividend+1,f,c
  1128  0009E6  B0D8               	btfsc	status,0,c
  1129  0009E8  2A15               	incf	___awdiv@dividend+1,f,c
  1130  0009EA  0E01               	movlw	1
  1131  0009EC  1A19               	xorwf	___awdiv@sign,f,c
  1132  0009EE                     l1244:
  1133  0009EE  0E00               	movlw	0
  1134  0009F0  6E1B               	movwf	___awdiv@quotient+1,c
  1135  0009F2  0E00               	movlw	0
  1136  0009F4  6E1A               	movwf	___awdiv@quotient,c
  1137  0009F6  5016               	movf	___awdiv@divisor,w,c
  1138  0009F8  1017               	iorwf	___awdiv@divisor+1,w,c
  1139  0009FA  B4D8               	btfsc	status,2,c
  1140  0009FC  D01C               	goto	l1266
  1141  0009FE  0E01               	movlw	1
  1142  000A00  6E18               	movwf	___awdiv@counter,c
  1143  000A02  D004               	goto	l1252
  1144  000A04                     l1250:
  1145  000A04  90D8               	bcf	status,0,c
  1146  000A06  3616               	rlcf	___awdiv@divisor,f,c
  1147  000A08  3617               	rlcf	___awdiv@divisor+1,f,c
  1148  000A0A  2A18               	incf	___awdiv@counter,f,c
  1149  000A0C                     l1252:
  1150  000A0C  AE17               	btfss	___awdiv@divisor+1,7,c
  1151  000A0E  D7FA               	goto	l1250
  1152  000A10                     l1254:
  1153  000A10  90D8               	bcf	status,0,c
  1154  000A12  361A               	rlcf	___awdiv@quotient,f,c
  1155  000A14  361B               	rlcf	___awdiv@quotient+1,f,c
  1156  000A16  5016               	movf	___awdiv@divisor,w,c
  1157  000A18  5C14               	subwf	___awdiv@dividend,w,c
  1158  000A1A  5017               	movf	___awdiv@divisor+1,w,c
  1159  000A1C  5815               	subwfb	___awdiv@dividend+1,w,c
  1160  000A1E  A0D8               	btfss	status,0,c
  1161  000A20  D005               	goto	l1262
  1162  000A22  5016               	movf	___awdiv@divisor,w,c
  1163  000A24  5E14               	subwf	___awdiv@dividend,f,c
  1164  000A26  5017               	movf	___awdiv@divisor+1,w,c
  1165  000A28  5A15               	subwfb	___awdiv@dividend+1,f,c
  1166  000A2A  801A               	bsf	___awdiv@quotient,0,c
  1167  000A2C                     l1262:
  1168  000A2C  90D8               	bcf	status,0,c
  1169  000A2E  3217               	rrcf	___awdiv@divisor+1,f,c
  1170  000A30  3216               	rrcf	___awdiv@divisor,f,c
  1171  000A32  2E18               	decfsz	___awdiv@counter,f,c
  1172  000A34  D7ED               	goto	l1254
  1173  000A36                     l1266:
  1174  000A36  5019               	movf	___awdiv@sign,w,c
  1175  000A38  B4D8               	btfsc	status,2,c
  1176  000A3A  D004               	goto	l1270
  1177  000A3C  6C1A               	negf	___awdiv@quotient,c
  1178  000A3E  1E1B               	comf	___awdiv@quotient+1,f,c
  1179  000A40  B0D8               	btfsc	status,0,c
  1180  000A42  2A1B               	incf	___awdiv@quotient+1,f,c
  1181  000A44                     l1270:
  1182  000A44  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1183  000A48  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1184  000A4C  0012               	return	
  1185  000A4E                     __end_of___awdiv:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec1	equ	0xFE5
  1196                           fsr1l	equ	0xFE1
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _Window *****************
  1200 ;; Defined at:
  1201 ;;		line 219 in file "Motor_1.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  num             1    wreg     unsigned char 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  num             1   31[COMRAM] unsigned char 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;		None               void
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1215 ;;      Params:         0       0       0       0       0       0       0
  1216 ;;      Locals:         1       0       0       0       0       0       0
  1217 ;;      Temps:          2       0       0       0       0       0       0
  1218 ;;      Totals:         3       0       0       0       0       0       0
  1219 ;;Total ram usage:        3 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    5
  1222 ;; This function calls:
  1223 ;;		_lcd_clear
  1224 ;;		_lcd_cursor
  1225 ;;		_lcd_print
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text5
  1232  000B3C                     __ptext5:
  1233                           	opt stack 0
  1234  000B3C                     _Window:
  1235                           	opt stack 25
  1236                           
  1237                           ;incstack = 0
  1238                           ;Window@num stored from wreg
  1239  000B3C  6E20               	movwf	Window@num,c
  1240                           
  1241                           ;Motor_1.c: 221: lcd_clear();
  1242  000B3E  EC52  F006         	call	_lcd_clear	;wreg free
  1243                           
  1244                           ;Motor_1.c: 222: lcd_cursor ( 0, 0 ) ;
  1245  000B42  0E00               	movlw	0
  1246  000B44  6E19               	movwf	lcd_cursor@y,c
  1247  000B46  0E00               	movlw	0
  1248  000B48  EC8F  F006         	call	_lcd_cursor
  1249                           
  1250                           ;Motor_1.c: 223: lcd_print ( msg_ary[num*2]);
  1251  000B4C  5020               	movf	Window@num,w,c
  1252  000B4E  0D20               	mullw	32
  1253  000B50  0E06               	movlw	low _msg_ary
  1254  000B52  24F3               	addwf	prodl,w,c
  1255  000B54  6E19               	movwf	lcd_print@mess,c
  1256  000B56  0E06               	movlw	high _msg_ary
  1257  000B58  20F4               	addwfc	prodh,w,c
  1258  000B5A  6E1A               	movwf	lcd_print@mess+1,c
  1259  000B5C  ECD1  F005         	call	_lcd_print	;wreg free
  1260                           
  1261                           ;Motor_1.c: 224: lcd_cursor ( 0, 1 ) ;
  1262  000B60  0E01               	movlw	1
  1263  000B62  6E19               	movwf	lcd_cursor@y,c
  1264  000B64  0E00               	movlw	0
  1265  000B66  EC8F  F006         	call	_lcd_cursor
  1266                           
  1267                           ;Motor_1.c: 225: lcd_print ( msg_ary[(num*2)+1]);
  1268  000B6A  5020               	movf	Window@num,w,c
  1269  000B6C  6E1E               	movwf	??_Window& (0+255),c
  1270  000B6E  6A1F               	clrf	(??_Window+1)& (0+255),c
  1271  000B70  90D8               	bcf	status,0,c
  1272  000B72  361E               	rlcf	??_Window,f,c
  1273  000B74  361F               	rlcf	??_Window+1,f,c
  1274  000B76  3A1E               	swapf	??_Window,f,c
  1275  000B78  3A1F               	swapf	??_Window+1,f,c
  1276  000B7A  0EF0               	movlw	240
  1277  000B7C  161F               	andwf	??_Window+1,f,c
  1278  000B7E  501E               	movf	??_Window,w,c
  1279  000B80  0B0F               	andlw	15
  1280  000B82  121F               	iorwf	??_Window+1,f,c
  1281  000B84  0EF0               	movlw	240
  1282  000B86  161E               	andwf	??_Window,f,c
  1283  000B88  0E10               	movlw	16
  1284  000B8A  261E               	addwf	??_Window,f,c
  1285  000B8C  0E00               	movlw	0
  1286  000B8E  221F               	addwfc	??_Window+1,f,c
  1287  000B90  0E06               	movlw	low _msg_ary
  1288  000B92  241E               	addwf	??_Window,w,c
  1289  000B94  6E19               	movwf	lcd_print@mess,c
  1290  000B96  0E06               	movlw	high _msg_ary
  1291  000B98  201F               	addwfc	??_Window+1,w,c
  1292  000B9A  6E1A               	movwf	lcd_print@mess+1,c
  1293  000B9C  ECD1  F005         	call	_lcd_print	;wreg free
  1294  000BA0  0012               	return		;funcret
  1295  000BA2                     __end_of_Window:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           prodh	equ	0xFF4
  1302                           prodl	equ	0xFF3
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           postdec1	equ	0xFE5
  1306                           fsr1l	equ	0xFE1
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _lcd_print *****************
  1310 ;; Defined at:
  1311 ;;		line 215 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1314 ;;		 -> msg_ary(64), STR_2(12), STR_1(8), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  i               1   28[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      unsigned char 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1326 ;;      Params:         2       0       0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0       0       0
  1328 ;;      Temps:          2       0       0       0       0       0       0
  1329 ;;      Totals:         5       0       0       0       0       0       0
  1330 ;;Total ram usage:        5 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    4
  1333 ;; This function calls:
  1334 ;;		_lcd_print_ch
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;;		_Window
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text6
  1342  000BA2                     __ptext6:
  1343                           	opt stack 0
  1344  000BA2                     _lcd_print:
  1345                           	opt stack 26
  1346                           
  1347                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1348                           
  1349                           ;incstack = 0
  1350  000BA2  0E00               	movlw	0
  1351  000BA4  6E1D               	movwf	lcd_print@i,c
  1352                           
  1353                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1354  000BA6  D013               	goto	l1226
  1355  000BA8                     l1222:
  1356                           
  1357                           ;lcdlib_2016.c: 225: {
  1358                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1359  000BA8  501D               	movf	lcd_print@i,w,c
  1360  000BAA  0D01               	mullw	1
  1361  000BAC  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1362  000BB0  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1363  000BB4  50F3               	movf	prodl,w,c
  1364  000BB6  261B               	addwf	??_lcd_print,f,c
  1365  000BB8  50F4               	movf	prodh,w,c
  1366  000BBA  221C               	addwfc	??_lcd_print+1,f,c
  1367  000BBC  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1368  000BC0  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1369  000BC4                     	if	0	;tblptru may be non-zero
  1370  000BC4                     	endif
  1371  000BC4                     	if	0	;tblptru may be non-zero
  1372  000BC4                     	endif
  1373  000BC4  0008               	tblrd		*
  1374  000BC6  50F5               	movf	tablat,w,c
  1375  000BC8  ECB7  F006         	call	_lcd_print_ch
  1376                           
  1377                           ;lcdlib_2016.c: 227: i++ ;
  1378  000BCC  2A1D               	incf	lcd_print@i,f,c
  1379  000BCE                     l1226:
  1380  000BCE  501D               	movf	lcd_print@i,w,c
  1381  000BD0  0D01               	mullw	1
  1382  000BD2  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1383  000BD6  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1384  000BDA  50F3               	movf	prodl,w,c
  1385  000BDC  261B               	addwf	??_lcd_print,f,c
  1386  000BDE  50F4               	movf	prodh,w,c
  1387  000BE0  221C               	addwfc	??_lcd_print+1,f,c
  1388  000BE2  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1389  000BE6  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1390  000BEA                     	if	0	;tblptru may be non-zero
  1391  000BEA                     	endif
  1392  000BEA                     	if	0	;tblptru may be non-zero
  1393  000BEA                     	endif
  1394  000BEA  0008               	tblrd		*
  1395  000BEC  50F5               	movf	tablat,w,c
  1396  000BEE  0900               	iorlw	0
  1397  000BF0  B4D8               	btfsc	status,2,c
  1398  000BF2  0012               	return	
  1399  000BF4  D7D9               	goto	l1222
  1400  000BF6                     __end_of_lcd_print:
  1401                           	opt stack 0
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           prodh	equ	0xFF4
  1407                           prodl	equ	0xFF3
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _lcd_print_ch *****************
  1415 ;; Defined at:
  1416 ;;		line 115 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  in              1    wreg     unsigned char 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  in              1   23[COMRAM] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      unsigned char 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1430 ;;      Params:         0       0       0       0       0       0       0
  1431 ;;      Locals:         1       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0
  1433 ;;      Totals:         1       0       0       0       0       0       0
  1434 ;;Total ram usage:        1 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    3
  1437 ;; This function calls:
  1438 ;;		_lcd_raw_send
  1439 ;; This function is called by:
  1440 ;;		_lcd_print
  1441 ;;		_lcd_display_value
  1442 ;;		_lcd_display_int_value
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  000D6E                     __ptext7:
  1448                           	opt stack 0
  1449  000D6E                     _lcd_print_ch:
  1450                           	opt stack 26
  1451                           
  1452                           ;incstack = 0
  1453                           ;lcd_print_ch@in stored from wreg
  1454  000D6E  6E18               	movwf	lcd_print_ch@in,c
  1455                           
  1456                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1457  000D70  0E01               	movlw	1
  1458  000D72  6E14               	movwf	lcd_raw_send@RS,c
  1459  000D74  5018               	movf	lcd_print_ch@in,w,c
  1460  000D76  ECCA  F003         	call	_lcd_raw_send
  1461  000D7A  0012               	return	
  1462  000D7C                     __end_of_lcd_print_ch:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           prodh	equ	0xFF4
  1469                           prodl	equ	0xFF3
  1470                           postinc0	equ	0xFEE
  1471                           wreg	equ	0xFE8
  1472                           postdec1	equ	0xFE5
  1473                           fsr1l	equ	0xFE1
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _lcd_cursor *****************
  1477 ;; Defined at:
  1478 ;;		line 144 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  x               1    wreg     unsigned char 
  1481 ;;  y               1   24[COMRAM] unsigned char 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  x               1   25[COMRAM] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      unsigned char 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         1       0       0       0       0       0       0
  1494 ;;      Locals:         1       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0
  1496 ;;      Totals:         2       0       0       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    4
  1500 ;; This function calls:
  1501 ;;		_lcd_command
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;;		_Window
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text8
  1509  000D1E                     __ptext8:
  1510                           	opt stack 0
  1511  000D1E                     _lcd_cursor:
  1512                           	opt stack 26
  1513                           
  1514                           ;incstack = 0
  1515                           ;lcd_cursor@x stored from wreg
  1516  000D1E  6E1A               	movwf	lcd_cursor@x,c
  1517                           
  1518                           ;lcdlib_2016.c: 153: if ( y==0 )
  1519  000D20  5019               	movf	lcd_cursor@y,w,c
  1520  000D22  A4D8               	btfss	status,2,c
  1521  000D24  D002               	goto	l1214
  1522                           
  1523                           ;lcdlib_2016.c: 154: {
  1524                           ;lcdlib_2016.c: 156: y=0x80 ;
  1525  000D26  0E80               	movlw	128
  1526  000D28  D001               	goto	L3
  1527  000D2A                     l1214:
  1528                           
  1529                           ;lcdlib_2016.c: 158: else
  1530                           ;lcdlib_2016.c: 159: {
  1531                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1532  000D2A  0EC0               	movlw	192
  1533  000D2C                     L3:
  1534  000D2C  6E19               	movwf	lcd_cursor@y,c
  1535                           
  1536                           ;lcdlib_2016.c: 162: }
  1537                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1538  000D2E  5019               	movf	lcd_cursor@y,w,c
  1539  000D30  241A               	addwf	lcd_cursor@x,w,c
  1540  000D32  ECBE  F006         	call	_lcd_command
  1541  000D36  0012               	return	
  1542  000D38                     __end_of_lcd_cursor:
  1543                           	opt stack 0
  1544                           tblptru	equ	0xFF8
  1545                           tblptrh	equ	0xFF7
  1546                           tblptrl	equ	0xFF6
  1547                           tablat	equ	0xFF5
  1548                           prodh	equ	0xFF4
  1549                           prodl	equ	0xFF3
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           postdec1	equ	0xFE5
  1553                           fsr1l	equ	0xFE1
  1554                           status	equ	0xFD8
  1555                           
  1556 ;; *************** function _lcd_clear *****************
  1557 ;; Defined at:
  1558 ;;		line 131 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      unsigned char 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1572 ;;      Params:         0       0       0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0
  1574 ;;      Temps:          1       0       0       0       0       0       0
  1575 ;;      Totals:         1       0       0       0       0       0       0
  1576 ;;Total ram usage:        1 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    4
  1579 ;; This function calls:
  1580 ;;		_lcd_command
  1581 ;; This function is called by:
  1582 ;;		_lcd_start
  1583 ;;		_main
  1584 ;;		_Window
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text9
  1589  000CA4                     __ptext9:
  1590                           	opt stack 0
  1591  000CA4                     _lcd_clear:
  1592                           	opt stack 25
  1593                           
  1594                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1595                           
  1596                           ;incstack = 0
  1597  000CA4  0E01               	movlw	1
  1598  000CA6  ECBE  F006         	call	_lcd_command
  1599                           
  1600                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1601  000CAA  0E0D               	movlw	13
  1602  000CAC  6E19               	movwf	??_lcd_clear& (0+255),c
  1603  000CAE  0EC3               	movlw	195
  1604  000CB0                     u687:
  1605  000CB0  2EE8               	decfsz	wreg,f,c
  1606  000CB2  D7FE               	goto	u687
  1607  000CB4  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1608  000CB6  D7FC               	goto	u687
  1609  000CB8  F000               	nop	
  1610                           
  1611                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1612  000CBA  0E02               	movlw	2
  1613  000CBC  ECBE  F006         	call	_lcd_command
  1614                           
  1615                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1616  000CC0  0E0D               	movlw	13
  1617  000CC2  6E19               	movwf	??_lcd_clear& (0+255),c
  1618  000CC4  0EC3               	movlw	195
  1619  000CC6                     u697:
  1620  000CC6  2EE8               	decfsz	wreg,f,c
  1621  000CC8  D7FE               	goto	u697
  1622  000CCA  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1623  000CCC  D7FC               	goto	u697
  1624  000CCE  F000               	nop	
  1625  000CD0  0012               	return	
  1626  000CD2                     __end_of_lcd_clear:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           prodh	equ	0xFF4
  1633                           prodl	equ	0xFF3
  1634                           postinc0	equ	0xFEE
  1635                           wreg	equ	0xFE8
  1636                           postdec1	equ	0xFE5
  1637                           fsr1l	equ	0xFE1
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _lcd_command *****************
  1641 ;; Defined at:
  1642 ;;		line 123 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  in              1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  in              1   23[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         1       0       0       0       0       0       0
  1660 ;;Total ram usage:        1 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    3
  1663 ;; This function calls:
  1664 ;;		_lcd_raw_send
  1665 ;; This function is called by:
  1666 ;;		_lcd_clear
  1667 ;;		_lcd_cursor
  1668 ;;		_lcd_start
  1669 ;;		_lcd_cursor_on
  1670 ;;		_lcd_cursor_off
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text10
  1675  000D7C                     __ptext10:
  1676                           	opt stack 0
  1677  000D7C                     _lcd_command:
  1678                           	opt stack 26
  1679                           
  1680                           ;incstack = 0
  1681                           ;lcd_command@in stored from wreg
  1682  000D7C  6E18               	movwf	lcd_command@in,c
  1683                           
  1684                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1685  000D7E  0E00               	movlw	0
  1686  000D80  6E14               	movwf	lcd_raw_send@RS,c
  1687  000D82  5018               	movf	lcd_command@in,w,c
  1688  000D84  ECCA  F003         	call	_lcd_raw_send
  1689  000D88  0012               	return		;funcret
  1690  000D8A                     __end_of_lcd_command:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodh	equ	0xFF4
  1697                           prodl	equ	0xFF3
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           postdec1	equ	0xFE5
  1701                           fsr1l	equ	0xFE1
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _lcd_raw_send *****************
  1705 ;; Defined at:
  1706 ;;		line 74 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  in              1    wreg     unsigned char 
  1709 ;;  RS              1   19[COMRAM] unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  in              1   22[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         1       0       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0
  1723 ;;      Temps:          2       0       0       0       0       0       0
  1724 ;;      Totals:         4       0       0       0       0       0       0
  1725 ;;Total ram usage:        4 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    2
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_lcd_print_ch
  1732 ;;		_lcd_command
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text11
  1737  000794                     __ptext11:
  1738                           	opt stack 0
  1739  000794                     _lcd_raw_send:
  1740                           	opt stack 26
  1741                           
  1742                           ;incstack = 0
  1743                           ;lcd_raw_send@in stored from wreg
  1744  000794  6E17               	movwf	lcd_raw_send@in,c
  1745                           
  1746                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1747  000796  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1748  00079A  3A15               	swapf	??_lcd_raw_send,f,c
  1749  00079C  0E0F               	movlw	15
  1750  00079E  1615               	andwf	??_lcd_raw_send,f,c
  1751  0007A0  508C               	movf	3980,w,c	;volatile
  1752  0007A2  1815               	xorwf	??_lcd_raw_send,w,c
  1753  0007A4  0BFE               	andlw	-2
  1754  0007A6  1815               	xorwf	??_lcd_raw_send,w,c
  1755  0007A8  6E8C               	movwf	3980,c	;volatile
  1756                           
  1757                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1758  0007AA  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1759  0007AE  0E05               	movlw	5
  1760  0007B0  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1761  0007B2                     u385:
  1762  0007B2  90D8               	bcf	status,0,c
  1763  0007B4  3215               	rrcf	??_lcd_raw_send,f,c
  1764  0007B6  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1765  0007B8  D7FC               	goto	u385
  1766  0007BA  4615               	rlncf	??_lcd_raw_send,f,c
  1767  0007BC  508C               	movf	3980,w,c	;volatile
  1768  0007BE  1815               	xorwf	??_lcd_raw_send,w,c
  1769  0007C0  0BFD               	andlw	-3
  1770  0007C2  1815               	xorwf	??_lcd_raw_send,w,c
  1771  0007C4  6E8C               	movwf	3980,c	;volatile
  1772                           
  1773                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1774  0007C6  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1775  0007CA  0E06               	movlw	6
  1776  0007CC  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1777  0007CE                     u395:
  1778  0007CE  90D8               	bcf	status,0,c
  1779  0007D0  3215               	rrcf	??_lcd_raw_send,f,c
  1780  0007D2  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1781  0007D4  D7FC               	goto	u395
  1782  0007D6  4615               	rlncf	??_lcd_raw_send,f,c
  1783  0007D8  4615               	rlncf	??_lcd_raw_send,f,c
  1784  0007DA  508C               	movf	3980,w,c	;volatile
  1785  0007DC  1815               	xorwf	??_lcd_raw_send,w,c
  1786  0007DE  0BFB               	andlw	-5
  1787  0007E0  1815               	xorwf	??_lcd_raw_send,w,c
  1788  0007E2  6E8C               	movwf	3980,c	;volatile
  1789                           
  1790                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1791  0007E4  6A15               	clrf	??_lcd_raw_send& (0+255),c
  1792  0007E6  AE17               	btfss	lcd_raw_send@in,7,c
  1793  0007E8  D001               	bra	u405
  1794  0007EA  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  1795  0007EC                     u405:
  1796  0007EC  4615               	rlncf	??_lcd_raw_send,f,c
  1797  0007EE  4615               	rlncf	??_lcd_raw_send,f,c
  1798  0007F0  4615               	rlncf	??_lcd_raw_send,f,c
  1799  0007F2  508C               	movf	3980,w,c	;volatile
  1800  0007F4  1815               	xorwf	??_lcd_raw_send,w,c
  1801  0007F6  0BF7               	andlw	-9
  1802  0007F8  1815               	xorwf	??_lcd_raw_send,w,c
  1803  0007FA  6E8C               	movwf	3980,c	;volatile
  1804                           
  1805                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1806  0007FC  B014               	btfsc	lcd_raw_send@RS,0,c
  1807  0007FE  D002               	bra	u415
  1808  000800  988C               	bcf	3980,4,c	;volatile
  1809  000802  D001               	bra	u416
  1810  000804                     u415:
  1811  000804  888C               	bsf	3980,4,c	;volatile
  1812  000806                     u416:
  1813                           
  1814                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1815  000806  0E03               	movlw	3
  1816  000808                     u707:
  1817  000808  2EE8               	decfsz	wreg,f,c
  1818  00080A  D7FE               	goto	u707
  1819                           
  1820                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1821  00080C  8A8C               	bsf	3980,5,c	;volatile
  1822                           
  1823                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1824  00080E  0E03               	movlw	3
  1825  000810                     u717:
  1826  000810  2EE8               	decfsz	wreg,f,c
  1827  000812  D7FE               	goto	u717
  1828                           
  1829                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  1830  000814  9A8C               	bcf	3980,5,c	;volatile
  1831                           
  1832                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1833  000816  0E51               	movlw	81
  1834  000818                     u727:
  1835  000818  2EE8               	decfsz	wreg,f,c
  1836  00081A  D7FE               	goto	u727
  1837  00081C  D000               	nop2		;nop
  1838                           
  1839                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  1840  00081E  B017               	btfsc	lcd_raw_send@in,0,c
  1841  000820  D002               	bra	u425
  1842  000822  908C               	bcf	3980,0,c	;volatile
  1843  000824  D001               	bra	u426
  1844  000826                     u425:
  1845  000826  808C               	bsf	3980,0,c	;volatile
  1846  000828                     u426:
  1847                           
  1848                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  1849  000828  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1850  00082C  90D8               	bcf	status,0,c
  1851  00082E  3215               	rrcf	??_lcd_raw_send,f,c
  1852  000830  4615               	rlncf	??_lcd_raw_send,f,c
  1853  000832  508C               	movf	3980,w,c	;volatile
  1854  000834  1815               	xorwf	??_lcd_raw_send,w,c
  1855  000836  0BFD               	andlw	-3
  1856  000838  1815               	xorwf	??_lcd_raw_send,w,c
  1857  00083A  6E8C               	movwf	3980,c	;volatile
  1858                           
  1859                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  1860  00083C  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1861  000840  90D8               	bcf	status,0,c
  1862  000842  3215               	rrcf	??_lcd_raw_send,f,c
  1863  000844  90D8               	bcf	status,0,c
  1864  000846  3215               	rrcf	??_lcd_raw_send,f,c
  1865  000848  4615               	rlncf	??_lcd_raw_send,f,c
  1866  00084A  4615               	rlncf	??_lcd_raw_send,f,c
  1867  00084C  508C               	movf	3980,w,c	;volatile
  1868  00084E  1815               	xorwf	??_lcd_raw_send,w,c
  1869  000850  0BFB               	andlw	-5
  1870  000852  1815               	xorwf	??_lcd_raw_send,w,c
  1871  000854  6E8C               	movwf	3980,c	;volatile
  1872                           
  1873                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  1874  000856  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1875  00085A  90D8               	bcf	status,0,c
  1876  00085C  3215               	rrcf	??_lcd_raw_send,f,c
  1877  00085E  90D8               	bcf	status,0,c
  1878  000860  3215               	rrcf	??_lcd_raw_send,f,c
  1879  000862  90D8               	bcf	status,0,c
  1880  000864  3215               	rrcf	??_lcd_raw_send,f,c
  1881  000866  4615               	rlncf	??_lcd_raw_send,f,c
  1882  000868  4615               	rlncf	??_lcd_raw_send,f,c
  1883  00086A  4615               	rlncf	??_lcd_raw_send,f,c
  1884  00086C  508C               	movf	3980,w,c	;volatile
  1885  00086E  1815               	xorwf	??_lcd_raw_send,w,c
  1886  000870  0BF7               	andlw	-9
  1887  000872  1815               	xorwf	??_lcd_raw_send,w,c
  1888  000874  6E8C               	movwf	3980,c	;volatile
  1889                           
  1890                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1891  000876  0E03               	movlw	3
  1892  000878                     u737:
  1893  000878  2EE8               	decfsz	wreg,f,c
  1894  00087A  D7FE               	goto	u737
  1895                           
  1896                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  1897  00087C  8A8C               	bsf	3980,5,c	;volatile
  1898                           
  1899                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1900  00087E  0E03               	movlw	3
  1901  000880                     u747:
  1902  000880  2EE8               	decfsz	wreg,f,c
  1903  000882  D7FE               	goto	u747
  1904                           
  1905                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  1906  000884  9A8C               	bcf	3980,5,c	;volatile
  1907                           
  1908                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1909  000886  0E51               	movlw	81
  1910  000888                     u757:
  1911  000888  2EE8               	decfsz	wreg,f,c
  1912  00088A  D7FE               	goto	u757
  1913  00088C  D000               	nop2		;nop
  1914  00088E  0012               	return		;funcret
  1915  000890                     __end_of_lcd_raw_send:
  1916                           	opt stack 0
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           prodh	equ	0xFF4
  1922                           prodl	equ	0xFF3
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           postdec1	equ	0xFE5
  1926                           fsr1l	equ	0xFE1
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function _Initial *****************
  1930 ;; Defined at:
  1931 ;;		line 202 in file "Motor_1.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1945 ;;      Params:         0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    3
  1952 ;; This function calls:
  1953 ;;		_OpenTimer0
  1954 ;;		_WriteTimer0
  1955 ;;		_delay_s
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text12
  1962  000CD2                     __ptext12:
  1963                           	opt stack 0
  1964  000CD2                     _Initial:
  1965                           	opt stack 27
  1966                           
  1967                           ;Motor_1.c: 204: ADCON1 = 0x0F;
  1968                           
  1969                           ;incstack = 0
  1970  000CD2  0E0F               	movlw	15
  1971  000CD4  6EC1               	movwf	4033,c	;volatile
  1972                           
  1973                           ;Motor_1.c: 205: TRISB = 0xFF;
  1974  000CD6  6893               	setf	3987,c	;volatile
  1975                           
  1976                           ;Motor_1.c: 206: TRISC = 0x00;
  1977  000CD8  0E00               	movlw	0
  1978  000CDA  6E94               	movwf	3988,c	;volatile
  1979                           
  1980                           ;Motor_1.c: 208: LATC = 0xff;
  1981  000CDC  688B               	setf	3979,c	;volatile
  1982                           
  1983                           ;Motor_1.c: 209: delay_s(3);
  1984  000CDE  0E03               	movlw	3
  1985  000CE0  EC38  F006         	call	_delay_s
  1986                           
  1987                           ;Motor_1.c: 210: LATC = 0x00;
  1988  000CE4  0E00               	movlw	0
  1989  000CE6  6E8B               	movwf	3979,c	;volatile
  1990                           
  1991                           ;Motor_1.c: 213: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
  1992  000CE8  0E90               	movlw	144
  1993  000CEA  EC7F  F006         	call	_OpenTimer0
  1994                           
  1995                           ;Motor_1.c: 214: WriteTimer0(45536);
  1996  000CEE  0EB1               	movlw	177
  1997  000CF0  6E15               	movwf	WriteTimer0@timer0+1,c
  1998  000CF2  0EE0               	movlw	224
  1999  000CF4  6E14               	movwf	WriteTimer0@timer0,c
  2000  000CF6  EC9C  F006         	call	_WriteTimer0	;wreg free
  2001                           
  2002                           ;Motor_1.c: 215: (INTCONbits.GIE = 1);
  2003  000CFA  8EF2               	bsf	intcon,7,c	;volatile
  2004  000CFC  0012               	return		;funcret
  2005  000CFE                     __end_of_Initial:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           prodh	equ	0xFF4
  2012                           prodl	equ	0xFF3
  2013                           intcon	equ	0xFF2
  2014                           postinc0	equ	0xFEE
  2015                           wreg	equ	0xFE8
  2016                           postdec1	equ	0xFE5
  2017                           fsr1l	equ	0xFE1
  2018                           status	equ	0xFD8
  2019                           
  2020 ;; *************** function _WriteTimer0 *****************
  2021 ;; Defined at:
  2022 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  timer0          2   19[COMRAM] unsigned int 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  timer           2   21[COMRAM] struct Timers
  2027 ;; Return value:  Size  Location     Type
  2028 ;;		None               void
  2029 ;; Registers used:
  2030 ;;		None
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2036 ;;      Params:         2       0       0       0       0       0       0
  2037 ;;      Locals:         2       0       0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0
  2039 ;;      Totals:         4       0       0       0       0       0       0
  2040 ;;Total ram usage:        4 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    2
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_Initial
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text13
  2051  000D38                     __ptext13:
  2052                           	opt stack 0
  2053  000D38                     _WriteTimer0:
  2054                           	opt stack 27
  2055                           
  2056                           ;incstack = 0
  2057  000D38  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2058  000D3C  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2059  000D40  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2060  000D44  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2061  000D48  0012               	return		;funcret
  2062  000D4A                     __end_of_WriteTimer0:
  2063                           	opt stack 0
  2064                           tblptru	equ	0xFF8
  2065                           tblptrh	equ	0xFF7
  2066                           tblptrl	equ	0xFF6
  2067                           tablat	equ	0xFF5
  2068                           prodh	equ	0xFF4
  2069                           prodl	equ	0xFF3
  2070                           intcon	equ	0xFF2
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postdec1	equ	0xFE5
  2074                           fsr1l	equ	0xFE1
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _OpenTimer0 *****************
  2078 ;; Defined at:
  2079 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  config          1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  config          1   19[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2093 ;;      Params:         0       0       0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0
  2096 ;;      Totals:         1       0       0       0       0       0       0
  2097 ;;Total ram usage:        1 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    2
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_Initial
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text14
  2108  000CFE                     __ptext14:
  2109                           	opt stack 0
  2110  000CFE                     _OpenTimer0:
  2111                           	opt stack 27
  2112                           
  2113                           ;incstack = 0
  2114                           ;OpenTimer0@config stored from wreg
  2115  000CFE  6E14               	movwf	OpenTimer0@config,c
  2116  000D00  5014               	movf	OpenTimer0@config,w,c
  2117  000D02  0B7F               	andlw	127
  2118  000D04  6ED5               	movwf	4053,c	;volatile
  2119  000D06  0E00               	movlw	0
  2120  000D08  6ED7               	movwf	4055,c	;volatile
  2121  000D0A  0E00               	movlw	0
  2122  000D0C  6ED6               	movwf	4054,c	;volatile
  2123  000D0E  94F2               	bcf	intcon,2,c	;volatile
  2124  000D10  AE14               	btfss	OpenTimer0@config,7,c
  2125  000D12  D002               	goto	l187
  2126  000D14  8AF2               	bsf	intcon,5,c	;volatile
  2127  000D16  D001               	goto	l188
  2128  000D18                     l187:
  2129  000D18  9AF2               	bcf	intcon,5,c	;volatile
  2130  000D1A                     l188:
  2131  000D1A  8ED5               	bsf	4053,7,c	;volatile
  2132  000D1C  0012               	return		;funcret
  2133  000D1E                     __end_of_OpenTimer0:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           prodh	equ	0xFF4
  2140                           prodl	equ	0xFF3
  2141                           intcon	equ	0xFF2
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           postdec1	equ	0xFE5
  2145                           fsr1l	equ	0xFE1
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function _HeartBeat *****************
  2149 ;; Defined at:
  2150 ;;		line 248 in file "Motor_1.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;		None               void
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         0       0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    3
  2171 ;; This function calls:
  2172 ;;		_delay_s
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text15
  2179  000D4A                     __ptext15:
  2180                           	opt stack 0
  2181  000D4A                     _HeartBeat:
  2182                           	opt stack 27
  2183                           
  2184                           ;Motor_1.c: 250: LATCbits.LC7 = 1;
  2185                           
  2186                           ;incstack = 0
  2187  000D4A  8E8B               	bsf	3979,7,c	;volatile
  2188                           
  2189                           ;Motor_1.c: 251: delay_s(1);
  2190  000D4C  0E01               	movlw	1
  2191  000D4E  EC38  F006         	call	_delay_s
  2192                           
  2193                           ;Motor_1.c: 252: LATCbits.LC7 = 0;
  2194  000D52  9E8B               	bcf	3979,7,c	;volatile
  2195                           
  2196                           ;Motor_1.c: 253: delay_s(1);
  2197  000D54  0E01               	movlw	1
  2198  000D56  EC38  F006         	call	_delay_s
  2199  000D5A  0012               	return		;funcret
  2200  000D5C                     __end_of_HeartBeat:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodh	equ	0xFF4
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           postdec1	equ	0xFE5
  2212                           fsr1l	equ	0xFE1
  2213                           status	equ	0xFD8
  2214                           
  2215 ;; *************** function _delay_s *****************
  2216 ;; Defined at:
  2217 ;;		line 229 in file "Motor_1.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  secs            1    wreg     unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  secs            1   20[COMRAM] unsigned char 
  2222 ;;  i               1   22[COMRAM] unsigned char 
  2223 ;;  j               1   21[COMRAM] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;		None               void
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         0       0       0       0       0       0       0
  2234 ;;      Locals:         3       0       0       0       0       0       0
  2235 ;;      Temps:          1       0       0       0       0       0       0
  2236 ;;      Totals:         4       0       0       0       0       0       0
  2237 ;;Total ram usage:        4 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;;		_Initial
  2245 ;;		_HeartBeat
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text16
  2250  000C70                     __ptext16:
  2251                           	opt stack 0
  2252  000C70                     _delay_s:
  2253                           	opt stack 28
  2254                           
  2255                           ;incstack = 0
  2256                           ;delay_s@secs stored from wreg
  2257  000C70  6E15               	movwf	delay_s@secs,c
  2258                           
  2259                           ;Motor_1.c: 231: unsigned char i,j;
  2260                           ;Motor_1.c: 232: for(j=0;j<secs;j++)
  2261  000C72  0E00               	movlw	0
  2262  000C74  6E16               	movwf	delay_s@j,c
  2263  000C76  D011               	goto	l892
  2264  000C78                     l880:
  2265                           
  2266                           ;Motor_1.c: 233: {
  2267                           ;Motor_1.c: 234: for (i=0;i<25;i++)
  2268  000C78  0E00               	movlw	0
  2269  000C7A  6E17               	movwf	delay_s@i,c
  2270  000C7C                     l882:
  2271  000C7C  0E18               	movlw	24
  2272  000C7E  6417               	cpfsgt	delay_s@i,c
  2273  000C80  D001               	goto	l886
  2274  000C82  D00A               	goto	l890
  2275  000C84                     l886:
  2276                           
  2277                           ;Motor_1.c: 235: _delay((unsigned long)((40)*(8000000/4000.0)));
  2278  000C84  0E68               	movlw	104
  2279  000C86  6E14               	movwf	??_delay_s& (0+255),c
  2280  000C88  0EE4               	movlw	228
  2281  000C8A                     u767:
  2282  000C8A  2EE8               	decfsz	wreg,f,c
  2283  000C8C  D7FE               	goto	u767
  2284  000C8E  2E14               	decfsz	??_delay_s& (0+255),f,c
  2285  000C90  D7FC               	goto	u767
  2286  000C92  D000               	nop2	
  2287  000C94  2A17               	incf	delay_s@i,f,c
  2288  000C96  D7F2               	goto	l882
  2289  000C98                     l890:
  2290  000C98  2A16               	incf	delay_s@j,f,c
  2291  000C9A                     l892:
  2292  000C9A  5015               	movf	delay_s@secs,w,c
  2293  000C9C  5C16               	subwf	delay_s@j,w,c
  2294  000C9E  B0D8               	btfsc	status,0,c
  2295  000CA0  0012               	return	
  2296  000CA2  D7EA               	goto	l880
  2297  000CA4                     __end_of_delay_s:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           prodh	equ	0xFF4
  2304                           prodl	equ	0xFF3
  2305                           intcon	equ	0xFF2
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           postdec1	equ	0xFE5
  2309                           fsr1l	equ	0xFE1
  2310                           status	equ	0xFD8
  2311                           
  2312 ;; *************** function _myIsr *****************
  2313 ;; Defined at:
  2314 ;;		line 73 in file "Motor_1.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;		None               void
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2328 ;;      Params:         0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0
  2330 ;;      Temps:         15       0       0       0       0       0       0
  2331 ;;      Totals:        15       0       0       0       0       0       0
  2332 ;;Total ram usage:       15 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		_Find_Button_Press
  2337 ;;		i2_WriteTimer0
  2338 ;; This function is called by:
  2339 ;;		Interrupt level 2
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	intcode
  2344  000008                     __pintcode:
  2345                           	opt stack 0
  2346  000008                     _myIsr:
  2347                           	opt stack 25
  2348                           
  2349                           ;incstack = 0
  2350  000008  822D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2351  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2352  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2353  000012  ED48  F004         	call	int_func,f	;refresh shadow registers
  2354                           pclatu	equ	0xFFB
  2355                           pclath	equ	0xFFA
  2356                           tblptru	equ	0xFF8
  2357                           tblptrh	equ	0xFF7
  2358                           tblptrl	equ	0xFF6
  2359                           tablat	equ	0xFF5
  2360                           prodh	equ	0xFF4
  2361                           prodl	equ	0xFF3
  2362                           intcon	equ	0xFF2
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           postdec1	equ	0xFE5
  2366                           fsr1l	equ	0xFE1
  2367                           status	equ	0xFD8
  2368                           
  2369                           	psect	intcode_body
  2370  000890                     __pintcode_body:
  2371                           	opt stack 25
  2372  000890                     int_func:
  2373                           	opt stack 25
  2374  000890  0006               	pop		; remove dummy address from shadow register refresh
  2375  000892  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2376  000896  CFEA F009          	movff	fsr0h,??_myIsr+4
  2377  00089A  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2378  00089E  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2379  0008A2  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2380  0008A6  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2381  0008AA  CFF3 F00E          	movff	prodl,??_myIsr+9
  2382  0008AE  CFF4 F00F          	movff	prodh,??_myIsr+10
  2383  0008B2  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2384  0008B6  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2385  0008BA  CFF8 F012          	movff	tblptru,??_myIsr+13
  2386  0008BE  CFF5 F013          	movff	tablat,??_myIsr+14
  2387                           
  2388                           ;Motor_1.c: 77: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2389  0008C2  BAF2               	btfsc	intcon,5,c	;volatile
  2390  0008C4  A4F2               	btfss	intcon,2,c	;volatile
  2391  0008C6  D01E               	goto	i2l130
  2392                           
  2393                           ;Motor_1.c: 79: Find_Button_Press();
  2394  0008C8  EC27  F005         	call	_Find_Button_Press	;wreg free
  2395                           
  2396                           ;Motor_1.c: 80: WriteTimer0(45536);
  2397  0008CC  0EB1               	movlw	177
  2398  0008CE  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2399  0008D0  0EE0               	movlw	224
  2400  0008D2  6E01               	movwf	i2WriteTimer0@timer0,c
  2401  0008D4  ECAE  F006         	call	i2_WriteTimer0	;wreg free
  2402                           
  2403                           ;Motor_1.c: 81: INTCONbits.TMR0IF = 0;
  2404  0008D8  94F2               	bcf	intcon,2,c	;volatile
  2405                           
  2406                           ;Motor_1.c: 84: count_test++;
  2407  0008DA  2A2C               	incf	_count_test,f,c
  2408                           
  2409                           ;Motor_1.c: 85: if(count_test == 100){
  2410  0008DC  0E64               	movlw	100
  2411  0008DE  182C               	xorwf	_count_test,w,c
  2412  0008E0  A4D8               	btfss	status,2,c
  2413  0008E2  D010               	goto	i2l130
  2414                           
  2415                           ;Motor_1.c: 86: PORTCbits.RC7 = ~PORTCbits.RC7;
  2416  0008E4  AE82               	btfss	3970,7,c	;volatile
  2417  0008E6  D002               	goto	i2u62_40
  2418  0008E8  0E01               	movlw	1
  2419  0008EA  D001               	goto	i2u62_46
  2420  0008EC                     i2u62_40:
  2421  0008EC  0E00               	movlw	0
  2422  0008EE                     i2u62_46:
  2423  0008EE  0AFF               	xorlw	255
  2424  0008F0  6E05               	movwf	??_myIsr& (0+255),c
  2425  0008F2  3205               	rrcf	??_myIsr,f,c
  2426  0008F4  3205               	rrcf	??_myIsr,f,c
  2427  0008F6  5082               	movf	3970,w,c	;volatile
  2428  0008F8  1805               	xorwf	??_myIsr,w,c
  2429  0008FA  0B7F               	andlw	-129
  2430  0008FC  1805               	xorwf	??_myIsr,w,c
  2431  0008FE  6E82               	movwf	3970,c	;volatile
  2432                           
  2433                           ;Motor_1.c: 87: count_test = 0;
  2434  000900  0E00               	movlw	0
  2435  000902  6E2C               	movwf	_count_test,c
  2436  000904                     i2l130:
  2437  000904  C013  FFF5         	movff	??_myIsr+14,tablat
  2438  000908  C012  FFF8         	movff	??_myIsr+13,tblptru
  2439  00090C  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2440  000910  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2441  000914  C00F  FFF4         	movff	??_myIsr+10,prodh
  2442  000918  C00E  FFF3         	movff	??_myIsr+9,prodl
  2443  00091C  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2444  000920  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2445  000924  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2446  000928  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2447  00092C  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2448  000930  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2449  000934  C007  FFFB         	movff	??_myIsr+2,pclatu
  2450  000938  C006  FFFA         	movff	??_myIsr+1,pclath
  2451  00093C  922D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2452  00093E  0011               	retfie		f
  2453  000940                     __end_of_myIsr:
  2454                           	opt stack 0
  2455                           pclatu	equ	0xFFB
  2456                           pclath	equ	0xFFA
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           prodh	equ	0xFF4
  2462                           prodl	equ	0xFF3
  2463                           intcon	equ	0xFF2
  2464                           postinc0	equ	0xFEE
  2465                           fsr0h	equ	0xFEA
  2466                           fsr0l	equ	0xFE9
  2467                           wreg	equ	0xFE8
  2468                           postdec1	equ	0xFE5
  2469                           fsr1h	equ	0xFE2
  2470                           fsr1l	equ	0xFE1
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function i2_WriteTimer0 *****************
  2476 ;; Defined at:
  2477 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  timer0          2    0[COMRAM] unsigned int 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2482 ;; Return value:  Size  Location     Type
  2483 ;;		None               void
  2484 ;; Registers used:
  2485 ;;		None
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2491 ;;      Params:         2       0       0       0       0       0       0
  2492 ;;      Locals:         2       0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0
  2494 ;;      Totals:         4       0       0       0       0       0       0
  2495 ;;Total ram usage:        4 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_myIsr
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text18
  2505  000D5C                     __ptext18:
  2506                           	opt stack 0
  2507  000D5C                     i2_WriteTimer0:
  2508                           	opt stack 25
  2509                           
  2510                           ;incstack = 0
  2511  000D5C  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2512  000D60  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2513  000D64  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2514  000D68  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2515  000D6C  0012               	return		;funcret
  2516  000D6E                     __end_ofi2_WriteTimer0:
  2517                           	opt stack 0
  2518                           pclatu	equ	0xFFB
  2519                           pclath	equ	0xFFA
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon	equ	0xFF2
  2527                           postinc0	equ	0xFEE
  2528                           fsr0h	equ	0xFEA
  2529                           fsr0l	equ	0xFE9
  2530                           wreg	equ	0xFE8
  2531                           postdec1	equ	0xFE5
  2532                           fsr1h	equ	0xFE2
  2533                           fsr1l	equ	0xFE1
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _Find_Button_Press *****************
  2539 ;; Defined at:
  2540 ;;		line 36 in file "../Repositories/Buttons_Debounce_State_Mch/Buttons_Debounce.X/Buttons_Debounce.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;		None               void
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_myIsr
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text19
  2568  000A4E                     __ptext19:
  2569                           	opt stack 0
  2570  000A4E                     _Find_Button_Press:
  2571                           	opt stack 25
  2572                           
  2573                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2574                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2575                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2576                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2577                           
  2578                           ;incstack = 0
  2579  000A4E  D030               	goto	i2l1012
  2580  000A50                     i2l988:
  2581                           
  2582                           ;Buttons_Debounce.c: 46: if(PORTB)
  2583  000A50  5081               	movf	3969,w,c	;volatile
  2584  000A52  B4D8               	btfsc	status,2,c
  2585  000A54  0012               	return	
  2586                           
  2587                           ;Buttons_Debounce.c: 47: {
  2588                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2589  000A56  0E01               	movlw	1
  2590  000A58  6E29               	movwf	Find_Button_Press@Button_State,c
  2591                           
  2592                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2593  000A5A  0E00               	movlw	0
  2594  000A5C  6E28               	movwf	Find_Button_Press@Button_Count,c
  2595                           
  2596                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2597  000A5E  CF81 F02A          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2598                           
  2599                           ;Buttons_Debounce.c: 52: }
  2600                           ;Buttons_Debounce.c: 53: break;
  2601  000A62  0012               	return	
  2602  000A64                     i2l994:
  2603                           
  2604                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2605  000A64  5081               	movf	3969,w,c	;volatile
  2606  000A66  182A               	xorwf	Find_Button_Press@Temp_Press,w,c
  2607  000A68  A4D8               	btfss	status,2,c
  2608  000A6A  D007               	goto	i2l1002
  2609                           
  2610                           ;Buttons_Debounce.c: 56: {
  2611                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2612  000A6C  2A28               	incf	Find_Button_Press@Button_Count,f,c
  2613                           
  2614                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2615  000A6E  0E0A               	movlw	10
  2616  000A70  6428               	cpfsgt	Find_Button_Press@Button_Count,c
  2617  000A72  0012               	return	
  2618                           
  2619                           ;Buttons_Debounce.c: 59: {
  2620                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2621  000A74  0E02               	movlw	2
  2622  000A76  6E29               	movwf	Find_Button_Press@Button_State,c
  2623                           
  2624                           ;Buttons_Debounce.c: 61: }
  2625                           ;Buttons_Debounce.c: 62: }
  2626  000A78  0012               	return	
  2627  000A7A                     i2l1002:
  2628                           
  2629                           ;Buttons_Debounce.c: 63: else
  2630                           ;Buttons_Debounce.c: 64: {
  2631                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2632  000A7A  0E00               	movlw	0
  2633  000A7C  6E29               	movwf	Find_Button_Press@Button_State,c
  2634                           
  2635                           ;Buttons_Debounce.c: 66: }
  2636                           ;Buttons_Debounce.c: 67: break;
  2637  000A7E  0012               	return	
  2638  000A80                     i2l1004:
  2639                           
  2640                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2641  000A80  5081               	movf	3969,w,c	;volatile
  2642  000A82  A4D8               	btfss	status,2,c
  2643  000A84  0012               	return	
  2644                           
  2645                           ;Buttons_Debounce.c: 70: {
  2646                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2647  000A86  0E03               	movlw	3
  2648  000A88  6E29               	movwf	Find_Button_Press@Button_State,c
  2649                           
  2650                           ;Buttons_Debounce.c: 72: }
  2651                           ;Buttons_Debounce.c: 73: break;
  2652  000A8A  0012               	return	
  2653  000A8C                     i2l23:
  2654                           
  2655                           ;Buttons_Debounce.c: 75: {
  2656                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2657  000A8C  C02A  F02B         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2658                           
  2659                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2660  000A90  0E00               	movlw	0
  2661  000A92  6E29               	movwf	Find_Button_Press@Button_State,c
  2662                           
  2663                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2664  000A94  0E00               	movlw	0
  2665  000A96  6E28               	movwf	Find_Button_Press@Button_Count,c
  2666                           
  2667                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2668  000A98  0E00               	movlw	0
  2669  000A9A  6E2A               	movwf	Find_Button_Press@Temp_Press,c
  2670                           
  2671                           ;Buttons_Debounce.c: 80: }
  2672                           ;Buttons_Debounce.c: 81: break;
  2673  000A9C  0012               	return	
  2674  000A9E                     i2l1010:
  2675                           
  2676                           ;Buttons_Debounce.c: 83: {
  2677                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2678  000A9E  0E00               	movlw	0
  2679  000AA0  6E29               	movwf	Find_Button_Press@Button_State,c
  2680                           
  2681                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2682  000AA2  0E00               	movlw	0
  2683  000AA4  6E28               	movwf	Find_Button_Press@Button_Count,c
  2684                           
  2685                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2686  000AA6  0E00               	movlw	0
  2687  000AA8  6E2A               	movwf	Find_Button_Press@Temp_Press,c
  2688                           
  2689                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2690  000AAA  0E00               	movlw	0
  2691  000AAC  6E2B               	movwf	_Button_Press,c
  2692                           
  2693                           ;Buttons_Debounce.c: 88: }
  2694                           ;Buttons_Debounce.c: 89: }
  2695  000AAE  0012               	return	
  2696  000AB0                     i2l1012:
  2697  000AB0  5029               	movf	Find_Button_Press@Button_State,w,c
  2698                           
  2699                           ; Switch size 1, requested type "space"
  2700                           ; Number of cases is 4, Range of values is 0 to 3
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte           13     7 (average)
  2704                           ;	Chosen strategy is simple_byte
  2705  000AB2  0A00               	xorlw	0	; case 0
  2706  000AB4  B4D8               	btfsc	status,2,c
  2707  000AB6  D7CC               	goto	i2l988
  2708  000AB8  0A01               	xorlw	1	; case 1
  2709  000ABA  B4D8               	btfsc	status,2,c
  2710  000ABC  D7D3               	goto	i2l994
  2711  000ABE  0A03               	xorlw	3	; case 2
  2712  000AC0  B4D8               	btfsc	status,2,c
  2713  000AC2  D7DE               	goto	i2l1004
  2714  000AC4  0A01               	xorlw	1	; case 3
  2715  000AC6  B4D8               	btfsc	status,2,c
  2716  000AC8  D7E1               	goto	i2l23
  2717  000ACA  D7E9               	goto	i2l1010
  2718  000ACC                     __end_of_Find_Button_Press:
  2719                           	opt stack 0
  2720                           pclatu	equ	0xFFB
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           fsr0h	equ	0xFEA
  2731                           fsr0l	equ	0xFE9
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           fsr1h	equ	0xFE2
  2735                           fsr1l	equ	0xFE1
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           pclatu	equ	0xFFB
  2740                           pclath	equ	0xFFA
  2741                           tblptru	equ	0xFF8
  2742                           tblptrh	equ	0xFF7
  2743                           tblptrl	equ	0xFF6
  2744                           tablat	equ	0xFF5
  2745                           prodh	equ	0xFF4
  2746                           prodl	equ	0xFF3
  2747                           intcon	equ	0xFF2
  2748                           postinc0	equ	0xFEE
  2749                           fsr0h	equ	0xFEA
  2750                           fsr0l	equ	0xFE9
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1h	equ	0xFE2
  2754                           fsr1l	equ	0xFE1
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8
  2758                           
  2759                           	psect	rparam
  2760  0000                     pclatu	equ	0xFFB
  2761                           pclath	equ	0xFFA
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           intcon	equ	0xFF2
  2769                           postinc0	equ	0xFEE
  2770                           fsr0h	equ	0xFEA
  2771                           fsr0l	equ	0xFE9
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780                           	psect	temp
  2781  00002D                     btemp:
  2782                           	opt stack 0
  2783  00002D                     	ds	1
  2784  0000                     int$flags	set	btemp
  2785                           pclatu	equ	0xFFB
  2786                           pclath	equ	0xFFA
  2787                           tblptru	equ	0xFF8
  2788                           tblptrh	equ	0xFF7
  2789                           tblptrl	equ	0xFF6
  2790                           tablat	equ	0xFF5
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           intcon	equ	0xFF2
  2794                           postinc0	equ	0xFEE
  2795                           fsr0h	equ	0xFEA
  2796                           fsr0l	equ	0xFE9
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1h	equ	0xFE2
  2800                           fsr1l	equ	0xFE1
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8


Data Sizes:
    Strings     45
    Constant    69
    Data        6
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     33      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 64
		 -> msg_ary(CODE[64]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s
    _HeartBeat->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7894
                                             32 COMRAM     1     1      0
                          _HeartBeat
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2382
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1200
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     285
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _HeartBeat                                            0     0      0      60
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      60
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HeartBeat
     _delay_s
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     21      2C       1       34.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      15        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 08 13:53:54 2018

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l140 06D6                            l143 06E6                            l145 06F6  
                          l187 0D18                            l188 0D1A                            l880 0C78  
                          l890 0C98                            l882 0C7C                            l892 0C9A  
                          l886 0C84                   __CFG_CPB$OFF 000000                            u405 07EC  
                          u415 0804                            u416 0806                            u425 0826  
                          u426 0828                   __CFG_CPD$OFF 000000                            u385 07B2  
                          u707 0808                            u395 07CE                            u717 0810  
                          u727 0818                            u737 0878                            u747 0880  
                          u757 0888                            u677 0C02                            u767 0C8A  
                          u687 0CB0                            u697 0CC6           __size_of_WriteTimer0 0012  
                 ___awmod@sign 0019                            prod 000FF3                            wreg 000FE8  
                  lcd_cursor@x 001A                    lcd_cursor@y 0019                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l1214 0D2A                           l1222 0BA8  
                         l1302 0B24                           l1320 0C16                           l1226 0BCE  
                         l1250 0A04                           l1306 0B32                           l1252 0A0C  
                         l1244 09EE                           l1316 0C0E                           l1420 06CE  
                         l1270 0A44                           l1262 0A2C                           l1254 0A10  
                         l1238 09DE                           l1326 0C32                           l1266 0A36  
                         l1290 0AFA                           l1282 0AE0                           l1442 073A  
                         l1292 0B02                           l1436 0706                           l1294 0B06  
                         l1286 0AEC                           l1446 075E                           l1438 0716  
                         l1454 077E                           l1456 078E                           l1298 0B1A  
                         STR_1 065A                           STR_2 0646                           STR_3 0652  
                         STR_4 0662                           STR_5 0652                           STR_6 0662  
                         STR_7 066F                           STR_8 0669                           _LATC 000F8B  
                         i2l23 0A8C                           _main 0674                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 002D  
       __size_ofi2_WriteTimer0 0012                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0016                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015                   ___param_bank 000010  
              __end_of_Initial 0CFE                 ??_lcd_print_ch 0018                  lcd_command@in 0018  
                        ?_main 0001                __end_of___awdiv 0A4E                __end_of___awmod 0B3C  
                        _T0CON 000FD5                ___awdiv@divisor 0016                          i2l130 0904  
              ___awdiv@counter 0018                          i2l994 0A64                          i2l988 0A50  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _PORTB 000F81  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                __end_of_delay_s 0CA4                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _myIsr 0008                __end_of_msg_ary 0646                          tablat 000FF5  
                        status 000FD8                __initialization 0C38                   __end_of_main 0794  
                       ??_main 0021                  i2_WriteTimer0 0D5C                  __activetblptr 000002  
           __size_of_HeartBeat 0012                         _ADCON1 000FC1                         ?_myIsr 0001  
             ___awdiv@dividend 0014                         i2l1010 0A9E                         i2l1002 0A7A  
                       i2l1004 0A80                         i2l1012 0AB0                     _OpenTimer0 0CFE  
                    ??_Initial 0018                 __CFG_XINST$OFF 000000                  lcd_print@mess 0019  
             __end_of_lcd_init 0606           __size_of_lcd_command 000E                         _Window 0B3C  
                    ??___awdiv 0018                 __CFG_STVREN$ON 000000                      ??___awmod 0018  
             OpenTimer0@config 0014               ___awdiv@quotient 001A                ___awmod@divisor 0016  
                    ??_delay_s 0014                         _motor1 0022                 ?i2_WriteTimer0 0001  
              ___awmod@counter 0018                   __pdataCOMRAM 0022                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __end_of_lcd_raw_send 0890           __end_of_lcd_print_ch 0D7C                     __accesstop 0080  
      __end_of__initialization 0C62                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
            __end_of_HeartBeat 0D5C                 __pcstackCOMRAM 0001                  __end_of_myIsr 0940  
           __size_of_lcd_clear 002E             __size_of_lcd_print 0054             __size_of_lcd_start 0042  
                      ??_myIsr 0005                    ?_OpenTimer0 0001                 lcd_raw_send@RS 0014  
               lcd_raw_send@in 0017                        ?_Window 0001          lcd_display_value@tens 001D  
              ??i2_WriteTimer0 0003               WriteTimer0@timer 0016                  ??_WriteTimer0 0016  
                   _lcd_cursor 0D1E                        i2u62_40 08EC                        i2u62_46 08EE  
          i2WriteTimer0@timer0 0001                        _Initial 0CD2                     _count_test 002C  
                      __Hparam 0000                        __Lparam 0000              __end_of_lcd_clear 0CD2  
  Find_Button_Press@Temp_Press 002A                __size_of_Window 0066              __end_of_lcd_print 0BF6  
            __end_of_lcd_start 0C38                 lcd_print_ch@in 0018                        ___awdiv 09CA  
                      ___awmod 0ACC                   __psmallconst 0600                        __pcinit 0C38  
                      _delay_s 0C70                        __ramtop 0600            __size_of_OpenTimer0 0020  
                      __ptext0 0674                        __ptext1 0BF6                        __ptext2 0940  
                      __ptext3 0ACC                        __ptext4 09CA                        __ptext5 0B3C  
                      __ptext6 0BA2                        __ptext7 0D6E                        __ptext8 0D1E  
                      __ptext9 0CA4                      _T0CONbits 000FD5          __size_of_lcd_raw_send 00FC  
             ___awmod@dividend 0014                        _msg_ary 0606            __end_of_WriteTimer0 0D4A  
        __size_of_lcd_print_ch 000E                        _problem 0024                        _startup 0026  
               __pintcode_body 0890           end_of_initialization 0C62                  __Lmediumconst 0000  
                      int_func 0890              _Find_Button_Press 0A4E             ?_Find_Button_Press 0001  
                      postdec1 000FE5                        postinc0 000FEE                   _lcd_raw_send 0794  
          ??_Find_Button_Press 0001                   _lcd_print_ch 0D6E                      _PORTCbits 000F82  
                  ?_lcd_cursor 0019      __end_of_Find_Button_Press 0ACC                  ??_lcd_command 0018  
                   lcd_print@i 001D                     lcd_start@i 001B              _lcd_display_value 0940  
                    _HeartBeat 0D4A                 __end_of_Window 0BA2             ?_lcd_display_value 0001  
                __pidataCOMRAM 0D8A                    _WriteTimer0 0D38            ??_lcd_display_value 001C  
          start_initialization 0C38                   _Button_Press 002B                   ??_OpenTimer0 0014  
    __end_of_lcd_display_value 09CA                       ??_Window 001E            __size_of_lcd_cursor 001A  
                   ?_HeartBeat 0001            __end_of_lcd_command 0D8A               __CFG_LPT1OSC$OFF 000000  
           __end_of_OpenTimer0 0D1E                    __pbssCOMRAM 0028                      Window@num 0020  
   __size_of_Find_Button_Press 007E                       ?_Initial 0001              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008                       ?___awdiv 0014                       ?___awmod 0014  
                    _lcd_clear 0CA4                       ?_delay_s 0001          __end_ofi2_WriteTimer0 0D6E  
                    _lcd_print 0BA2         lcd_display_value@hunds 001C                      _lcd_start 0BF6  
       lcd_display_value@value 001F         lcd_display_value@units 001E                    __smallconst 0600  
            WriteTimer0@timer0 0014             i2WriteTimer0@timer 0003                 __size_of_myIsr 0938  
                     _LATCbits 000F8B                       _LATDbits 000F8C                    _lcd_command 0D7C  
   __size_of_lcd_display_value 008A               main@my_mch_state 0021               __CFG_WDTPS$32768 000000  
                  ??_HeartBeat 0018                     ?_lcd_clear 0001                     ?_lcd_print 0019  
                   ?_lcd_start 0001                   ??_lcd_cursor 001A                      copy_data0 0C56  
                     __Hrparam 0000               __size_of_Initial 002C                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 0D38               __size_of___awdiv 0084  
             __size_of___awmod 0070                   ?_WriteTimer0 0014               __size_of_delay_s 0034  
                     __ptext10 0D7C                       __ptext11 0794                       __ptext12 0CD2  
                     __ptext13 0D38                       __ptext14 0CFE                       __ptext15 0D4A  
                     __ptext16 0C70                       __ptext18 0D5C                       __ptext19 0A4E  
                     _lcd_init 0601                  __size_of_main 0120                       delay_s@i 0017  
                     delay_s@j 0016                       int$flags 002D                    ??_lcd_clear 0019  
                  delay_s@secs 0015                    ??_lcd_print 001B                    ??_lcd_start 001A  
                   _INTCONbits 000FF2                       intlevel2 0000                     _OSCCONbits 000FD3  
Find_Button_Press@Button_Count 0028  Find_Button_Press@Button_State 0029                   ?_lcd_command 0001  
