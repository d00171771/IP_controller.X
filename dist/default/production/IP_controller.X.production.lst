

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 08 12:07:14 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000DC4                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _problem
    40  000DC4  B2                 	db	low STR_1
    41  000DC5  06                 	db	high STR_1
    42                           
    43                           ;initializer for _startup
    44  000DC6  A6                 	db	low STR_2
    45  000DC7  06                 	db	high STR_2
    46                           
    47                           	psect	smallconst
    48  000600                     __psmallconst:
    49                           	opt stack 0
    50  000600  00                 	db	0
    51  000601                     _lcd_init:
    52                           	opt stack 0
    53  000601  33                 	db	51
    54  000602  32                 	db	50
    55  000603  2C                 	db	44
    56  000604  06                 	db	6
    57  000605  0C                 	db	12
    58  000606                     __end_of_lcd_init:
    59                           	opt stack 0
    60  000606                     _msg_ary:
    61                           	opt stack 0
    62  000606  41                 	db	65
    63  000607  20                 	db	32
    64  000608  56                 	db	86
    65  000609  61                 	db	97
    66  00060A  6C                 	db	108
    67  00060B  75                 	db	117
    68  00060C  65                 	db	101
    69  00060D  3E                 	db	62
    70  00060E  20                 	db	32
    71  00060F  00                 	db	0
    72  000610  00                 	db	0
    73  000611  00                 	db	0
    74  000612  00                 	db	0
    75  000613  00                 	db	0
    76  000614  00                 	db	0
    77  000615  00                 	db	0
    78  000616  42                 	db	66
    79  000617  20                 	db	32
    80  000618  56                 	db	86
    81  000619  61                 	db	97
    82  00061A  6C                 	db	108
    83  00061B  75                 	db	117
    84  00061C  65                 	db	101
    85  00061D  3E                 	db	62
    86  00061E  20                 	db	32
    87  00061F  00                 	db	0
    88  000620  00                 	db	0
    89  000621  00                 	db	0
    90  000622  00                 	db	0
    91  000623  00                 	db	0
    92  000624  00                 	db	0
    93  000625  00                 	db	0
    94  000626  41                 	db	65
    95  000627  20                 	db	32
    96  000628  56                 	db	86
    97  000629  61                 	db	97
    98  00062A  6C                 	db	108
    99  00062B  75                 	db	117
   100  00062C  65                 	db	101
   101  00062D  3E                 	db	62
   102  00062E  20                 	db	32
   103  00062F  00                 	db	0
   104  000630  00                 	db	0
   105  000631  00                 	db	0
   106  000632  00                 	db	0
   107  000633  00                 	db	0
   108  000634  00                 	db	0
   109  000635  00                 	db	0
   110  000636  4E                 	db	78
   111  000637  65                 	db	101
   112  000638  77                 	db	119
   113  000639  20                 	db	32
   114  00063A  41                 	db	65
   115  00063B  3F                 	db	63
   116  00063C  3E                 	db	62
   117  00063D  20                 	db	32
   118  00063E  00                 	db	0
   119  00063F  00                 	db	0
   120  000640  00                 	db	0
   121  000641  00                 	db	0
   122  000642  00                 	db	0
   123  000643  00                 	db	0
   124  000644  00                 	db	0
   125  000645  00                 	db	0
   126  000646  42                 	db	66
   127  000647  20                 	db	32
   128  000648  56                 	db	86
   129  000649  61                 	db	97
   130  00064A  6C                 	db	108
   131  00064B  75                 	db	117
   132  00064C  65                 	db	101
   133  00064D  3E                 	db	62
   134  00064E  20                 	db	32
   135  00064F  00                 	db	0
   136  000650  00                 	db	0
   137  000651  00                 	db	0
   138  000652  00                 	db	0
   139  000653  00                 	db	0
   140  000654  00                 	db	0
   141  000655  00                 	db	0
   142  000656  4E                 	db	78
   143  000657  65                 	db	101
   144  000658  77                 	db	119
   145  000659  20                 	db	32
   146  00065A  42                 	db	66
   147  00065B  3F                 	db	63
   148  00065C  3E                 	db	62
   149  00065D  20                 	db	32
   150  00065E  00                 	db	0
   151  00065F  00                 	db	0
   152  000660  00                 	db	0
   153  000661  00                 	db	0
   154  000662  00                 	db	0
   155  000663  00                 	db	0
   156  000664  00                 	db	0
   157  000665  00                 	db	0
   158  000666  43                 	db	67
   159  000667  20                 	db	32
   160  000668  56                 	db	86
   161  000669  61                 	db	97
   162  00066A  6C                 	db	108
   163  00066B  75                 	db	117
   164  00066C  65                 	db	101
   165  00066D  3E                 	db	62
   166  00066E  20                 	db	32
   167  00066F  00                 	db	0
   168  000670  00                 	db	0
   169  000671  00                 	db	0
   170  000672  00                 	db	0
   171  000673  00                 	db	0
   172  000674  00                 	db	0
   173  000675  00                 	db	0
   174  000676  4E                 	db	78
   175  000677  65                 	db	101
   176  000678  77                 	db	119
   177  000679  20                 	db	32
   178  00067A  43                 	db	67
   179  00067B  3F                 	db	63
   180  00067C  3E                 	db	62
   181  00067D  20                 	db	32
   182  00067E  00                 	db	0
   183  00067F  00                 	db	0
   184  000680  00                 	db	0
   185  000681  00                 	db	0
   186  000682  00                 	db	0
   187  000683  00                 	db	0
   188  000684  00                 	db	0
   189  000685  00                 	db	0
   190  000686  00                 	db	0
   191  000687  00                 	db	0
   192  000688  00                 	db	0
   193  000689  00                 	db	0
   194  00068A  00                 	db	0
   195  00068B  00                 	db	0
   196  00068C  00                 	db	0
   197  00068D  00                 	db	0
   198  00068E  00                 	db	0
   199  00068F  00                 	db	0
   200  000690  00                 	db	0
   201  000691  00                 	db	0
   202  000692  00                 	db	0
   203  000693  00                 	db	0
   204  000694  00                 	db	0
   205  000695  00                 	db	0
   206  000696  00                 	db	0
   207  000697  00                 	db	0
   208  000698  00                 	db	0
   209  000699  00                 	db	0
   210  00069A  00                 	db	0
   211  00069B  00                 	db	0
   212  00069C  00                 	db	0
   213  00069D  00                 	db	0
   214  00069E  00                 	db	0
   215  00069F  00                 	db	0
   216  0006A0  00                 	db	0
   217  0006A1  00                 	db	0
   218  0006A2  00                 	db	0
   219  0006A3  00                 	db	0
   220  0006A4  00                 	db	0
   221  0006A5  00                 	db	0
   222  0006A6                     __end_of_msg_ary:
   223                           	opt stack 0
   224  0000                     _ADCON1	set	4033
   225  0000                     _INTCONbits	set	4082
   226  0000                     _LATC	set	3979
   227  0000                     _LATDbits	set	3980
   228  0000                     _OSCCONbits	set	4051
   229  0000                     _PORTB	set	3969
   230  0000                     _PORTCbits	set	3970
   231  0000                     _T0CON	set	4053
   232  0000                     _T0CONbits	set	4053
   233  0000                     _TMR0H	set	4055
   234  0000                     _TMR0L	set	4054
   235  0000                     _TRISB	set	3987
   236  0000                     _TRISC	set	3988
   237  0000                     _TRISD	set	3989
   238  0006A6                     STR_2:
   239  0006A6  52                 	db	82	;'R'
   240  0006A7  65                 	db	101	;'e'
   241  0006A8  61                 	db	97	;'a'
   242  0006A9  64                 	db	100	;'d'
   243  0006AA  79                 	db	121	;'y'
   244  0006AB  20                 	db	32
   245  0006AC  74                 	db	116	;'t'
   246  0006AD  6F                 	db	111	;'o'
   247  0006AE  20                 	db	32
   248  0006AF  67                 	db	103	;'g'
   249  0006B0  6F                 	db	111	;'o'
   250  0006B1  00                 	db	0
   251  0006B2                     STR_1:
   252  0006B2  50                 	db	80	;'P'
   253  0006B3  72                 	db	114	;'r'
   254  0006B4  6F                 	db	111	;'o'
   255  0006B5  62                 	db	98	;'b'
   256  0006B6  6C                 	db	108	;'l'
   257  0006B7  65                 	db	101	;'e'
   258  0006B8  6D                 	db	109	;'m'
   259  0006B9  00                 	db	0
   260                           
   261                           ; #config settings
   262  0006BA  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	cinit
   265  000C84                     __pcinit:
   266                           	opt stack 0
   267  000C84                     start_initialization:
   268                           	opt stack 0
   269  000C84                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Clear objects allocated to COMRAM (5 bytes)
   273  000C84  6A2A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   274  000C86  6A29               	clrf	(__pbssCOMRAM+3)& (0+255),c
   275  000C88  6A28               	clrf	(__pbssCOMRAM+2)& (0+255),c
   276  000C8A  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
   277  000C8C  6A26               	clrf	__pbssCOMRAM& (0+255),c
   278                           
   279                           ; Initialize objects allocated to COMRAM (4 bytes)
   280                           ; load TBLPTR registers with __pidataCOMRAM
   281  000C8E  0EC4               	movlw	low __pidataCOMRAM
   282  000C90  6EF6               	movwf	tblptrl,c
   283  000C92  0E0D               	movlw	high __pidataCOMRAM
   284  000C94  6EF7               	movwf	tblptrh,c
   285  000C96  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   286  000C98  6EF8               	movwf	tblptru,c
   287  000C9A  EE00  F02B         	lfsr	0,__pdataCOMRAM
   288  000C9E  EE10 F004          	lfsr	1,4
   289  000CA2                     copy_data0:
   290  000CA2  0009               	tblrd		*+
   291  000CA4  CFF5 FFEE          	movff	tablat,postinc0
   292  000CA8  50E5               	movf	postdec1,w,c
   293  000CAA  50E1               	movf	fsr1l,w,c
   294  000CAC  E1FA               	bnz	copy_data0
   295  000CAE                     end_of_initialization:
   296                           	opt stack 0
   297  000CAE                     __end_of__initialization:
   298                           	opt stack 0
   299  000CAE  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300  000CB0  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301  000CB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   302  000CB4  6EF8               	movwf	tblptru,c
   303  000CB6  0100               	movlb	0
   304  000CB8  EF5E  F003         	goto	_main	;jump to C main() function
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssCOMRAM
   314  000026                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000026                     Find_Button_Press@Button_Count:
   317                           	opt stack 0
   318  000026                     	ds	1
   319  000027                     Find_Button_Press@Button_State:
   320                           	opt stack 0
   321  000027                     	ds	1
   322  000028                     Find_Button_Press@Temp_Press:
   323                           	opt stack 0
   324  000028                     	ds	1
   325  000029                     _Button_Press:
   326                           	opt stack 0
   327  000029                     	ds	1
   328  00002A                     _count_test:
   329                           	opt stack 0
   330  00002A                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           	psect	dataCOMRAM
   340  00002B                     __pdataCOMRAM:
   341                           	opt stack 0
   342  00002B                     _problem:
   343                           	opt stack 0
   344  00002B                     	ds	2
   345  00002D                     _startup:
   346                           	opt stack 0
   347  00002D                     	ds	2
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     i2WriteTimer0@timer0:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x0
   363  000001                     	ds	2
   364  000003                     i2WriteTimer0@timer:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	2
   369  000005                     ??_myIsr:
   370                           
   371                           ; 0 bytes @ 0x4
   372  000005                     	ds	15
   373  000014                     ??_delay_s:
   374  000014                     ?___awdiv:
   375                           	opt stack 0
   376  000014                     ?___awmod:
   377                           	opt stack 0
   378  000014                     lcd_raw_send@RS:
   379                           	opt stack 0
   380  000014                     OpenTimer0@config:
   381                           	opt stack 0
   382  000014                     WriteTimer0@timer0:
   383                           	opt stack 0
   384  000014                     ___awdiv@dividend:
   385                           	opt stack 0
   386  000014                     ___awmod@dividend:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x13
   390  000014                     	ds	1
   391  000015                     ??_lcd_raw_send:
   392  000015                     delay_s@secs:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x14
   396  000015                     	ds	1
   397  000016                     delay_s@j:
   398                           	opt stack 0
   399  000016                     WriteTimer0@timer:
   400                           	opt stack 0
   401  000016                     ___awdiv@divisor:
   402                           	opt stack 0
   403  000016                     ___awmod@divisor:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x15
   407  000016                     	ds	1
   408  000017                     lcd_raw_send@in:
   409                           	opt stack 0
   410  000017                     delay_s@i:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x16
   414  000017                     	ds	1
   415  000018                     lcd_print_ch@in:
   416                           	opt stack 0
   417  000018                     lcd_command@in:
   418                           	opt stack 0
   419  000018                     ___awdiv@counter:
   420                           	opt stack 0
   421  000018                     ___awmod@counter:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x17
   425  000018                     	ds	1
   426  000019                     ??_lcd_clear:
   427  000019                     lcd_cursor@y:
   428                           	opt stack 0
   429  000019                     ___awdiv@sign:
   430                           	opt stack 0
   431  000019                     ___awmod@sign:
   432                           	opt stack 0
   433  000019                     lcd_print@mess:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x18
   437  000019                     	ds	1
   438  00001A                     ??_lcd_start:
   439  00001A                     lcd_cursor@x:
   440                           	opt stack 0
   441  00001A                     ___awdiv@quotient:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x19
   445  00001A                     	ds	1
   446  00001B                     ??_lcd_print:
   447  00001B                     lcd_start@i:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1A
   451  00001B                     	ds	1
   452  00001C                     lcd_display_value@hunds:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x1B
   456  00001C                     	ds	1
   457  00001D                     lcd_print@i:
   458                           	opt stack 0
   459  00001D                     lcd_display_value@tens:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x1C
   463  00001D                     	ds	1
   464  00001E                     ??_Window:
   465  00001E                     lcd_display_value@units:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x1D
   469  00001E                     	ds	1
   470  00001F                     lcd_display_value@value:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x1E
   474  00001F                     	ds	1
   475  000020                     Window@num:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1F
   479  000020                     	ds	1
   480  000021                     main@C:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x20
   484  000021                     	ds	1
   485  000022                     main@Temp_Value:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x21
   489  000022                     	ds	1
   490  000023                     main@B:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x22
   494  000023                     	ds	1
   495  000024                     main@my_mch_state:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x23
   499  000024                     	ds	1
   500  000025                     main@A:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x24
   504  000025                     	ds	1
   505                           tblptru	equ	0xFF8
   506                           tblptrh	equ	0xFF7
   507                           tblptrl	equ	0xFF6
   508                           tablat	equ	0xFF5
   509                           postinc0	equ	0xFEE
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 100 in file "Motor_1.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  A               1   36[COMRAM] unsigned char 
   523 ;;  my_mch_state    1   35[COMRAM] enum E4342
   524 ;;  B               1   34[COMRAM] unsigned char 
   525 ;;  Temp_Value      1   33[COMRAM] unsigned char 
   526 ;;  C               1   32[COMRAM] unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;		None               void
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   536 ;;      Params:         0       0       0       0       0       0       0
   537 ;;      Locals:         5       0       0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0
   539 ;;      Totals:         5       0       0       0       0       0       0
   540 ;;Total ram usage:        5 bytes
   541 ;; Hardware stack levels required when called:    6
   542 ;; This function calls:
   543 ;;		_Initial
   544 ;;		_Window
   545 ;;		_delay_s
   546 ;;		_lcd_clear
   547 ;;		_lcd_cursor
   548 ;;		_lcd_display_value
   549 ;;		_lcd_print
   550 ;;		_lcd_start
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text0
   557  0006BC                     __ptext0:
   558                           	opt stack 0
   559  0006BC                     _main:
   560                           	opt stack 25
   561                           
   562                           ;Motor_1.c: 102: unsigned char A = 20;
   563                           
   564                           ;incstack = 0
   565  0006BC  0E14               	movlw	20
   566  0006BE  6E25               	movwf	main@A,c
   567                           
   568                           ;Motor_1.c: 103: unsigned char B = 30;
   569  0006C0  0E1E               	movlw	30
   570  0006C2  6E23               	movwf	main@B,c
   571                           
   572                           ;Motor_1.c: 104: unsigned char C = 40;
   573  0006C4  0E28               	movlw	40
   574  0006C6  6E21               	movwf	main@C,c
   575                           
   576                           ;Motor_1.c: 105: unsigned char Temp_Value = 0;
   577  0006C8  0E00               	movlw	0
   578  0006CA  6E22               	movwf	main@Temp_Value,c
   579                           
   580                           ;Motor_1.c: 107: typedef enum {RUN = 0,UPDATE_DESIRE} states;
   581                           ;Motor_1.c: 108: states my_mch_state = UPDATE_DESIRE;
   582  0006CC  0E01               	movlw	1
   583  0006CE  6E24               	movwf	main@my_mch_state,c
   584                           
   585                           ;Motor_1.c: 110: Initial();
   586  0006D0  EC8F  F006         	call	_Initial	;wreg free
   587                           
   588                           ;Motor_1.c: 111: lcd_start ();
   589  0006D4  EC21  F006         	call	_lcd_start	;wreg free
   590                           
   591                           ;Motor_1.c: 112: lcd_cursor ( 0, 0 ) ;
   592  0006D8  0E00               	movlw	0
   593  0006DA  6E19               	movwf	lcd_cursor@y,c
   594  0006DC  0E00               	movlw	0
   595  0006DE  ECB5  F006         	call	_lcd_cursor
   596                           
   597                           ;Motor_1.c: 113: lcd_print ( startup ) ;
   598  0006E2  C02D  F019         	movff	_startup,lcd_print@mess
   599  0006E6  C02E  F01A         	movff	_startup+1,lcd_print@mess+1
   600  0006EA  ECF7  F005         	call	_lcd_print	;wreg free
   601                           
   602                           ;Motor_1.c: 115: delay_s(2);
   603  0006EE  0E02               	movlw	2
   604  0006F0  EC5E  F006         	call	_delay_s
   605                           
   606                           ;Motor_1.c: 117: Window(0);
   607  0006F4  0E00               	movlw	0
   608  0006F6  ECC4  F005         	call	_Window
   609                           
   610                           ;Motor_1.c: 118: lcd_cursor ( 10, 0 ) ;
   611  0006FA  0E00               	movlw	0
   612  0006FC  6E19               	movwf	lcd_cursor@y,c
   613  0006FE  0E0A               	movlw	10
   614  000700  ECB5  F006         	call	_lcd_cursor
   615                           
   616                           ;Motor_1.c: 119: lcd_display_value(A);
   617  000704  5025               	movf	main@A,w,c
   618  000706  ECC6  F004         	call	_lcd_display_value
   619                           
   620                           ;Motor_1.c: 120: lcd_cursor ( 10, 1 ) ;
   621  00070A  0E01               	movlw	1
   622  00070C  6E19               	movwf	lcd_cursor@y,c
   623  00070E  0E0A               	movlw	10
   624  000710  ECB5  F006         	call	_lcd_cursor
   625                           
   626                           ;Motor_1.c: 121: lcd_display_value(B);
   627  000714  5023               	movf	main@B,w,c
   628  000716  ECC6  F004         	call	_lcd_display_value
   629  00071A                     l1393:
   630  00071A  5029               	movf	_Button_Press,w,c
   631  00071C  A4D8               	btfss	status,2,c
   632  00071E  D019               	goto	l1409
   633  000720  D7FC               	goto	l1393
   634  000722                     l134:
   635                           
   636                           ;Motor_1.c: 133: if (Button_Press.B0){
   637  000722  A029               	btfss	_Button_Press,0,c
   638  000724  D052               	goto	l1427
   639                           
   640                           ;Motor_1.c: 134: my_mch_state = UPDATE_DESIRE;
   641  000726  0E01               	movlw	1
   642  000728  6E24               	movwf	main@my_mch_state,c
   643                           
   644                           ;Motor_1.c: 135: Window(1);
   645  00072A  0E01               	movlw	1
   646  00072C  ECC4  F005         	call	_Window
   647                           
   648                           ;Motor_1.c: 136: }
   649                           ;Motor_1.c: 138: break;
   650  000730  D04C               	goto	l1427
   651  000732                     l137:
   652                           
   653                           ;Motor_1.c: 140: if (Button_Press.B0){
   654  000732  A029               	btfss	_Button_Press,0,c
   655  000734  D04A               	goto	l1427
   656                           
   657                           ;Motor_1.c: 141: my_mch_state = RUN;
   658  000736  0E00               	movlw	0
   659  000738  6E24               	movwf	main@my_mch_state,c
   660                           
   661                           ;Motor_1.c: 142: Window(2);
   662  00073A  0E02               	movlw	2
   663  00073C  ECC4  F005         	call	_Window
   664                           
   665                           ;Motor_1.c: 143: }
   666                           ;Motor_1.c: 144: break;
   667  000740  D044               	goto	l1427
   668  000742                     l139:
   669                           
   670                           ;Motor_1.c: 146: if (Button_Press.B0){
   671  000742  A029               	btfss	_Button_Press,0,c
   672  000744  D042               	goto	l1427
   673                           
   674                           ;Motor_1.c: 147: my_mch_state = RUN;
   675  000746  0E00               	movlw	0
   676  000748  6E24               	movwf	main@my_mch_state,c
   677                           
   678                           ;Motor_1.c: 148: Window(0);
   679  00074A  0E00               	movlw	0
   680  00074C  ECC4  F005         	call	_Window
   681                           
   682                           ;Motor_1.c: 151: }
   683                           
   684                           ;Motor_1.c: 149: }
   685                           ;Motor_1.c: 150: break;
   686  000750  D03C               	goto	l1427
   687  000752                     l1409:
   688  000752  5024               	movf	main@my_mch_state,w,c
   689                           
   690                           ; Switch size 1, requested type "space"
   691                           ; Number of cases is 2, Range of values is 0 to 1
   692                           ; switch strategies available:
   693                           ; Name         Instructions Cycles
   694                           ; simple_byte            7     4 (average)
   695                           ;	Chosen strategy is simple_byte
   696  000754  0A00               	xorlw	0	; case 0
   697  000756  B4D8               	btfsc	status,2,c
   698  000758  D7E4               	goto	l134
   699  00075A  0A01               	xorlw	1	; case 1
   700  00075C  B4D8               	btfsc	status,2,c
   701  00075E  D7E9               	goto	l137
   702  000760  D7F0               	goto	l139
   703  000762                     l1411:
   704                           
   705                           ;Motor_1.c: 157: lcd_cursor ( 10, 0 ) ;
   706  000762  0E00               	movlw	0
   707  000764  6E19               	movwf	lcd_cursor@y,c
   708  000766  0E0A               	movlw	10
   709  000768  ECB5  F006         	call	_lcd_cursor
   710                           
   711                           ;Motor_1.c: 158: lcd_display_value(A);
   712  00076C  5025               	movf	main@A,w,c
   713  00076E  ECC6  F004         	call	_lcd_display_value
   714                           
   715                           ;Motor_1.c: 159: lcd_cursor ( 10, 1 ) ;
   716  000772  0E01               	movlw	1
   717  000774  6E19               	movwf	lcd_cursor@y,c
   718  000776  0E0A               	movlw	10
   719  000778  ECB5  F006         	call	_lcd_cursor
   720                           
   721                           ;Motor_1.c: 160: lcd_display_value(B);
   722  00077C  5023               	movf	main@B,w,c
   723  00077E  ECC6  F004         	call	_lcd_display_value
   724                           
   725                           ;Motor_1.c: 161: LATC = 0x01;
   726  000782  0E01               	movlw	1
   727  000784  D020               	goto	L2
   728  000786                     l1415:
   729                           
   730                           ;Motor_1.c: 172: lcd_cursor ( 10, 0 ) ;
   731  000786  0E00               	movlw	0
   732  000788  6E19               	movwf	lcd_cursor@y,c
   733  00078A  0E0A               	movlw	10
   734  00078C  ECB5  F006         	call	_lcd_cursor
   735                           
   736                           ;Motor_1.c: 173: lcd_display_value(A);
   737  000790  5025               	movf	main@A,w,c
   738  000792  ECC6  F004         	call	_lcd_display_value
   739                           
   740                           ;Motor_1.c: 174: lcd_cursor ( 10, 1 ) ;
   741  000796  0E01               	movlw	1
   742  000798  6E19               	movwf	lcd_cursor@y,c
   743  00079A  0E0A               	movlw	10
   744  00079C  ECB5  F006         	call	_lcd_cursor
   745                           
   746                           ;Motor_1.c: 175: lcd_display_value(Temp_Value);
   747  0007A0  5022               	movf	main@Temp_Value,w,c
   748  0007A2  ECC6  F004         	call	_lcd_display_value
   749                           
   750                           ;Motor_1.c: 176: LATC= 0x02;
   751  0007A6  0E02               	movlw	2
   752  0007A8  D00E               	goto	L2
   753  0007AA                     l1419:
   754                           
   755                           ;Motor_1.c: 180: lcd_cursor ( 0, 0 ) ;
   756  0007AA  0E00               	movlw	0
   757  0007AC  6E19               	movwf	lcd_cursor@y,c
   758  0007AE  0E00               	movlw	0
   759  0007B0  ECB5  F006         	call	_lcd_cursor
   760                           
   761                           ;Motor_1.c: 181: lcd_clear();
   762  0007B4  EC78  F006         	call	_lcd_clear	;wreg free
   763                           
   764                           ;Motor_1.c: 182: lcd_print ( problem );
   765  0007B8  C02B  F019         	movff	_problem,lcd_print@mess
   766  0007BC  C02C  F01A         	movff	_problem+1,lcd_print@mess+1
   767  0007C0  ECF7  F005         	call	_lcd_print	;wreg free
   768                           
   769                           ;Motor_1.c: 183: LATC = 0x05;
   770  0007C4  0E05               	movlw	5
   771  0007C6                     L2:
   772  0007C6  6E8B               	movwf	3979,c	;volatile
   773                           
   774                           ;Motor_1.c: 185: }
   775                           
   776                           ;Motor_1.c: 184: break;
   777  0007C8  D008               	goto	l1429
   778  0007CA                     l1427:
   779  0007CA  5024               	movf	main@my_mch_state,w,c
   780                           
   781                           ; Switch size 1, requested type "space"
   782                           ; Number of cases is 2, Range of values is 0 to 1
   783                           ; switch strategies available:
   784                           ; Name         Instructions Cycles
   785                           ; simple_byte            7     4 (average)
   786                           ;	Chosen strategy is simple_byte
   787  0007CC  0A00               	xorlw	0	; case 0
   788  0007CE  B4D8               	btfsc	status,2,c
   789  0007D0  D7C8               	goto	l1411
   790  0007D2  0A01               	xorlw	1	; case 1
   791  0007D4  B4D8               	btfsc	status,2,c
   792  0007D6  D7D7               	goto	l1415
   793  0007D8  D7E8               	goto	l1419
   794  0007DA                     l1429:
   795                           
   796                           ;Motor_1.c: 187: Button_Press.Full = 0;
   797  0007DA  0E00               	movlw	0
   798  0007DC  6E29               	movwf	_Button_Press,c
   799  0007DE  D79D               	goto	l1393
   800  0007E0                     __end_of_main:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           postdec1	equ	0xFE5
   808                           fsr1l	equ	0xFE1
   809                           status	equ	0xFD8
   810                           
   811 ;; *************** function _lcd_start *****************
   812 ;; Defined at:
   813 ;;		line 189 in file "../Repositories/LCD_library/lcdlib_2016.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  i               1   26[COMRAM] unsigned char 
   818 ;;  t               1    0        unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      unsigned char 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   828 ;;      Params:         0       0       0       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0       0       0
   830 ;;      Temps:          1       0       0       0       0       0       0
   831 ;;      Totals:         2       0       0       0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    5
   835 ;; This function calls:
   836 ;;		_lcd_clear
   837 ;;		_lcd_command
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text1
   844  000C42                     __ptext1:
   845                           	opt stack 0
   846  000C42                     _lcd_start:
   847                           	opt stack 25
   848                           
   849                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   850                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   851                           
   852                           ;incstack = 0
   853  000C42  5095               	movf	3989,w,c	;volatile
   854  000C44  0BC0               	andlw	192
   855  000C46  6E95               	movwf	3989,c	;volatile
   856                           
   857                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   858  000C48  0EE0               	movlw	224
   859  000C4A  6E1A               	movwf	??_lcd_start& (0+255),c
   860  000C4C  0E6A               	movlw	106
   861  000C4E                     u677:
   862  000C4E  2EE8               	decfsz	wreg,f,c
   863  000C50  D7FE               	goto	u677
   864  000C52  2E1A               	decfsz	??_lcd_start& (0+255),f,c
   865  000C54  D7FC               	goto	u677
   866                           
   867                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   868  000C56  0E00               	movlw	0
   869  000C58  6E1B               	movwf	lcd_start@i,c
   870  000C5A                     l1295:
   871  000C5A  0E04               	movlw	4
   872  000C5C  641B               	cpfsgt	lcd_start@i,c
   873  000C5E  D001               	goto	l1299
   874  000C60  D00E               	goto	l1305
   875  000C62                     l1299:
   876                           
   877                           ;lcdlib_2016.c: 204: {
   878                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   879  000C62  501B               	movf	lcd_start@i,w,c
   880  000C64  0D01               	mullw	1
   881  000C66  0E01               	movlw	low _lcd_init
   882  000C68  24F3               	addwf	prodl,w,c
   883  000C6A  6EF6               	movwf	tblptrl,c
   884  000C6C  0E06               	movlw	high _lcd_init
   885  000C6E  20F4               	addwfc	prodh,w,c
   886  000C70  6EF7               	movwf	tblptrh,c
   887  000C72                     	if	0	;There are less than 3 active tblptr bytes
   888  000C72                     	endif
   889  000C72  0008               	tblrd		*
   890  000C74  50F5               	movf	tablat,w,c
   891  000C76  ECDB  F006         	call	_lcd_command
   892  000C7A  2A1B               	incf	lcd_start@i,f,c
   893  000C7C  D7EE               	goto	l1295
   894  000C7E                     l1305:
   895                           
   896                           ;lcdlib_2016.c: 206: }
   897                           ;lcdlib_2016.c: 207: lcd_clear () ;
   898  000C7E  EC78  F006         	call	_lcd_clear	;wreg free
   899  000C82  0012               	return	
   900  000C84                     __end_of_lcd_start:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           prodh	equ	0xFF4
   907                           prodl	equ	0xFF3
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1l	equ	0xFE1
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _lcd_display_value *****************
   915 ;; Defined at:
   916 ;;		line 244 in file "../Repositories/LCD_library/lcdlib_2016.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  value           1    wreg     unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  value           1   30[COMRAM] unsigned char 
   921 ;;  units           1   29[COMRAM] unsigned char 
   922 ;;  tens            1   28[COMRAM] unsigned char 
   923 ;;  hunds           1   27[COMRAM] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   933 ;;      Params:         0       0       0       0       0       0       0
   934 ;;      Locals:         4       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		___awdiv
   942 ;;		___awmod
   943 ;;		_lcd_print_ch
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text2
   950  00098C                     __ptext2:
   951                           	opt stack 0
   952  00098C                     _lcd_display_value:
   953                           	opt stack 26
   954                           
   955                           ;incstack = 0
   956                           ;lcd_display_value@value stored from wreg
   957  00098C  6E1F               	movwf	lcd_display_value@value,c
   958                           
   959                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
   960                           ;lcdlib_2016.c: 250: units = value % 10 ;
   961  00098E  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
   962  000992  6A15               	clrf	___awmod@dividend+1,c
   963  000994  0E00               	movlw	0
   964  000996  6E17               	movwf	___awmod@divisor+1,c
   965  000998  0E0A               	movlw	10
   966  00099A  6E16               	movwf	___awmod@divisor,c
   967  00099C  EC8C  F005         	call	___awmod	;wreg free
   968  0009A0  5014               	movf	?___awmod,w,c
   969  0009A2  6E1E               	movwf	lcd_display_value@units,c
   970                           
   971                           ;lcdlib_2016.c: 251: value = value / 10 ;
   972  0009A4  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
   973  0009A8  6A15               	clrf	___awdiv@dividend+1,c
   974  0009AA  0E00               	movlw	0
   975  0009AC  6E17               	movwf	___awdiv@divisor+1,c
   976  0009AE  0E0A               	movlw	10
   977  0009B0  6E16               	movwf	___awdiv@divisor,c
   978  0009B2  EC0B  F005         	call	___awdiv	;wreg free
   979  0009B6  5014               	movf	?___awdiv,w,c
   980  0009B8  6E1F               	movwf	lcd_display_value@value,c
   981                           
   982                           ;lcdlib_2016.c: 252: tens = value % 10 ;
   983  0009BA  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
   984  0009BE  6A15               	clrf	___awmod@dividend+1,c
   985  0009C0  0E00               	movlw	0
   986  0009C2  6E17               	movwf	___awmod@divisor+1,c
   987  0009C4  0E0A               	movlw	10
   988  0009C6  6E16               	movwf	___awmod@divisor,c
   989  0009C8  EC8C  F005         	call	___awmod	;wreg free
   990  0009CC  5014               	movf	?___awmod,w,c
   991  0009CE  6E1D               	movwf	lcd_display_value@tens,c
   992                           
   993                           ;lcdlib_2016.c: 253: value = value / 10 ;
   994  0009D0  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
   995  0009D4  6A15               	clrf	___awdiv@dividend+1,c
   996  0009D6  0E00               	movlw	0
   997  0009D8  6E17               	movwf	___awdiv@divisor+1,c
   998  0009DA  0E0A               	movlw	10
   999  0009DC  6E16               	movwf	___awdiv@divisor,c
  1000  0009DE  EC0B  F005         	call	___awdiv	;wreg free
  1001  0009E2  5014               	movf	?___awdiv,w,c
  1002  0009E4  6E1F               	movwf	lcd_display_value@value,c
  1003                           
  1004                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1005  0009E6  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1006  0009EA  6A15               	clrf	___awmod@dividend+1,c
  1007  0009EC  0E00               	movlw	0
  1008  0009EE  6E17               	movwf	___awmod@divisor+1,c
  1009  0009F0  0E0A               	movlw	10
  1010  0009F2  6E16               	movwf	___awmod@divisor,c
  1011  0009F4  EC8C  F005         	call	___awmod	;wreg free
  1012  0009F8  5014               	movf	?___awmod,w,c
  1013  0009FA  6E1C               	movwf	lcd_display_value@hunds,c
  1014                           
  1015                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1016  0009FC  501C               	movf	lcd_display_value@hunds,w,c
  1017  0009FE  0F30               	addlw	48
  1018  000A00  ECD4  F006         	call	_lcd_print_ch
  1019                           
  1020                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1021  000A04  501D               	movf	lcd_display_value@tens,w,c
  1022  000A06  0F30               	addlw	48
  1023  000A08  ECD4  F006         	call	_lcd_print_ch
  1024                           
  1025                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1026  000A0C  501E               	movf	lcd_display_value@units,w,c
  1027  000A0E  0F30               	addlw	48
  1028  000A10  ECD4  F006         	call	_lcd_print_ch
  1029  000A14  0012               	return		;funcret
  1030  000A16                     __end_of_lcd_display_value:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           prodh	equ	0xFF4
  1037                           prodl	equ	0xFF3
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           fsr1l	equ	0xFE1
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function ___awmod *****************
  1045 ;; Defined at:
  1046 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  dividend        2   19[COMRAM] int 
  1049 ;;  divisor         2   21[COMRAM] int 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  sign            1   24[COMRAM] unsigned char 
  1052 ;;  counter         1   23[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2   19[COMRAM] int 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         4       0       0       0       0       0       0
  1063 ;;      Locals:         2       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         6       0       0       0       0       0       0
  1066 ;;Total ram usage:        6 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    2
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_lcd_display_value
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text3
  1077  000B18                     __ptext3:
  1078                           	opt stack 0
  1079  000B18                     ___awmod:
  1080                           	opt stack 27
  1081                           
  1082                           ;incstack = 0
  1083  000B18  0E00               	movlw	0
  1084  000B1A  6E19               	movwf	___awmod@sign,c
  1085  000B1C  AE15               	btfss	___awmod@dividend+1,7,c
  1086  000B1E  D006               	goto	l1261
  1087  000B20  6C14               	negf	___awmod@dividend,c
  1088  000B22  1E15               	comf	___awmod@dividend+1,f,c
  1089  000B24  B0D8               	btfsc	status,0,c
  1090  000B26  2A15               	incf	___awmod@dividend+1,f,c
  1091  000B28  0E01               	movlw	1
  1092  000B2A  6E19               	movwf	___awmod@sign,c
  1093  000B2C                     l1261:
  1094  000B2C  AE17               	btfss	___awmod@divisor+1,7,c
  1095  000B2E  D004               	goto	l1265
  1096  000B30  6C16               	negf	___awmod@divisor,c
  1097  000B32  1E17               	comf	___awmod@divisor+1,f,c
  1098  000B34  B0D8               	btfsc	status,0,c
  1099  000B36  2A17               	incf	___awmod@divisor+1,f,c
  1100  000B38                     l1265:
  1101  000B38  5016               	movf	___awmod@divisor,w,c
  1102  000B3A  1017               	iorwf	___awmod@divisor+1,w,c
  1103  000B3C  B4D8               	btfsc	status,2,c
  1104  000B3E  D018               	goto	l1281
  1105  000B40  0E01               	movlw	1
  1106  000B42  6E18               	movwf	___awmod@counter,c
  1107  000B44  D004               	goto	l1271
  1108  000B46                     l1269:
  1109  000B46  90D8               	bcf	status,0,c
  1110  000B48  3616               	rlcf	___awmod@divisor,f,c
  1111  000B4A  3617               	rlcf	___awmod@divisor+1,f,c
  1112  000B4C  2A18               	incf	___awmod@counter,f,c
  1113  000B4E                     l1271:
  1114  000B4E  AE17               	btfss	___awmod@divisor+1,7,c
  1115  000B50  D7FA               	goto	l1269
  1116  000B52                     l1273:
  1117  000B52  5016               	movf	___awmod@divisor,w,c
  1118  000B54  5C14               	subwf	___awmod@dividend,w,c
  1119  000B56  5017               	movf	___awmod@divisor+1,w,c
  1120  000B58  5815               	subwfb	___awmod@dividend+1,w,c
  1121  000B5A  A0D8               	btfss	status,0,c
  1122  000B5C  D004               	goto	l1277
  1123  000B5E  5016               	movf	___awmod@divisor,w,c
  1124  000B60  5E14               	subwf	___awmod@dividend,f,c
  1125  000B62  5017               	movf	___awmod@divisor+1,w,c
  1126  000B64  5A15               	subwfb	___awmod@dividend+1,f,c
  1127  000B66                     l1277:
  1128  000B66  90D8               	bcf	status,0,c
  1129  000B68  3217               	rrcf	___awmod@divisor+1,f,c
  1130  000B6A  3216               	rrcf	___awmod@divisor,f,c
  1131  000B6C  2E18               	decfsz	___awmod@counter,f,c
  1132  000B6E  D7F1               	goto	l1273
  1133  000B70                     l1281:
  1134  000B70  5019               	movf	___awmod@sign,w,c
  1135  000B72  B4D8               	btfsc	status,2,c
  1136  000B74  D004               	goto	l1285
  1137  000B76  6C14               	negf	___awmod@dividend,c
  1138  000B78  1E15               	comf	___awmod@dividend+1,f,c
  1139  000B7A  B0D8               	btfsc	status,0,c
  1140  000B7C  2A15               	incf	___awmod@dividend+1,f,c
  1141  000B7E                     l1285:
  1142  000B7E  C014  F014         	movff	___awmod@dividend,?___awmod
  1143  000B82  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1144  000B86  0012               	return	
  1145  000B88                     __end_of___awmod:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           prodh	equ	0xFF4
  1152                           prodl	equ	0xFF3
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           postdec1	equ	0xFE5
  1156                           fsr1l	equ	0xFE1
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function ___awdiv *****************
  1160 ;; Defined at:
  1161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  dividend        2   19[COMRAM] int 
  1164 ;;  divisor         2   21[COMRAM] int 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  quotient        2   25[COMRAM] int 
  1167 ;;  sign            1   24[COMRAM] unsigned char 
  1168 ;;  counter         1   23[COMRAM] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  2   19[COMRAM] int 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1178 ;;      Params:         4       0       0       0       0       0       0
  1179 ;;      Locals:         4       0       0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0
  1181 ;;      Totals:         8       0       0       0       0       0       0
  1182 ;;Total ram usage:        8 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    2
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_lcd_display_value
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text4
  1193  000A16                     __ptext4:
  1194                           	opt stack 0
  1195  000A16                     ___awdiv:
  1196                           	opt stack 27
  1197                           
  1198                           ;incstack = 0
  1199  000A16  0E00               	movlw	0
  1200  000A18  6E19               	movwf	___awdiv@sign,c
  1201  000A1A  AE17               	btfss	___awdiv@divisor+1,7,c
  1202  000A1C  D006               	goto	l1217
  1203  000A1E  6C16               	negf	___awdiv@divisor,c
  1204  000A20  1E17               	comf	___awdiv@divisor+1,f,c
  1205  000A22  B0D8               	btfsc	status,0,c
  1206  000A24  2A17               	incf	___awdiv@divisor+1,f,c
  1207  000A26  0E01               	movlw	1
  1208  000A28  6E19               	movwf	___awdiv@sign,c
  1209  000A2A                     l1217:
  1210  000A2A  AE15               	btfss	___awdiv@dividend+1,7,c
  1211  000A2C  D006               	goto	l1223
  1212  000A2E  6C14               	negf	___awdiv@dividend,c
  1213  000A30  1E15               	comf	___awdiv@dividend+1,f,c
  1214  000A32  B0D8               	btfsc	status,0,c
  1215  000A34  2A15               	incf	___awdiv@dividend+1,f,c
  1216  000A36  0E01               	movlw	1
  1217  000A38  1A19               	xorwf	___awdiv@sign,f,c
  1218  000A3A                     l1223:
  1219  000A3A  0E00               	movlw	0
  1220  000A3C  6E1B               	movwf	___awdiv@quotient+1,c
  1221  000A3E  0E00               	movlw	0
  1222  000A40  6E1A               	movwf	___awdiv@quotient,c
  1223  000A42  5016               	movf	___awdiv@divisor,w,c
  1224  000A44  1017               	iorwf	___awdiv@divisor+1,w,c
  1225  000A46  B4D8               	btfsc	status,2,c
  1226  000A48  D01C               	goto	l1245
  1227  000A4A  0E01               	movlw	1
  1228  000A4C  6E18               	movwf	___awdiv@counter,c
  1229  000A4E  D004               	goto	l1231
  1230  000A50                     l1229:
  1231  000A50  90D8               	bcf	status,0,c
  1232  000A52  3616               	rlcf	___awdiv@divisor,f,c
  1233  000A54  3617               	rlcf	___awdiv@divisor+1,f,c
  1234  000A56  2A18               	incf	___awdiv@counter,f,c
  1235  000A58                     l1231:
  1236  000A58  AE17               	btfss	___awdiv@divisor+1,7,c
  1237  000A5A  D7FA               	goto	l1229
  1238  000A5C                     l1233:
  1239  000A5C  90D8               	bcf	status,0,c
  1240  000A5E  361A               	rlcf	___awdiv@quotient,f,c
  1241  000A60  361B               	rlcf	___awdiv@quotient+1,f,c
  1242  000A62  5016               	movf	___awdiv@divisor,w,c
  1243  000A64  5C14               	subwf	___awdiv@dividend,w,c
  1244  000A66  5017               	movf	___awdiv@divisor+1,w,c
  1245  000A68  5815               	subwfb	___awdiv@dividend+1,w,c
  1246  000A6A  A0D8               	btfss	status,0,c
  1247  000A6C  D005               	goto	l1241
  1248  000A6E  5016               	movf	___awdiv@divisor,w,c
  1249  000A70  5E14               	subwf	___awdiv@dividend,f,c
  1250  000A72  5017               	movf	___awdiv@divisor+1,w,c
  1251  000A74  5A15               	subwfb	___awdiv@dividend+1,f,c
  1252  000A76  801A               	bsf	___awdiv@quotient,0,c
  1253  000A78                     l1241:
  1254  000A78  90D8               	bcf	status,0,c
  1255  000A7A  3217               	rrcf	___awdiv@divisor+1,f,c
  1256  000A7C  3216               	rrcf	___awdiv@divisor,f,c
  1257  000A7E  2E18               	decfsz	___awdiv@counter,f,c
  1258  000A80  D7ED               	goto	l1233
  1259  000A82                     l1245:
  1260  000A82  5019               	movf	___awdiv@sign,w,c
  1261  000A84  B4D8               	btfsc	status,2,c
  1262  000A86  D004               	goto	l1249
  1263  000A88  6C1A               	negf	___awdiv@quotient,c
  1264  000A8A  1E1B               	comf	___awdiv@quotient+1,f,c
  1265  000A8C  B0D8               	btfsc	status,0,c
  1266  000A8E  2A1B               	incf	___awdiv@quotient+1,f,c
  1267  000A90                     l1249:
  1268  000A90  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1269  000A94  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1270  000A98  0012               	return	
  1271  000A9A                     __end_of___awdiv:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           prodh	equ	0xFF4
  1278                           prodl	equ	0xFF3
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1l	equ	0xFE1
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _Window *****************
  1286 ;; Defined at:
  1287 ;;		line 211 in file "Motor_1.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  num             1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  num             1   31[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;		None               void
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1301 ;;      Params:         0       0       0       0       0       0       0
  1302 ;;      Locals:         1       0       0       0       0       0       0
  1303 ;;      Temps:          2       0       0       0       0       0       0
  1304 ;;      Totals:         3       0       0       0       0       0       0
  1305 ;;Total ram usage:        3 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    5
  1308 ;; This function calls:
  1309 ;;		_lcd_clear
  1310 ;;		_lcd_cursor
  1311 ;;		_lcd_print
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text5
  1318  000B88                     __ptext5:
  1319                           	opt stack 0
  1320  000B88                     _Window:
  1321                           	opt stack 25
  1322                           
  1323                           ;incstack = 0
  1324                           ;Window@num stored from wreg
  1325  000B88  6E20               	movwf	Window@num,c
  1326                           
  1327                           ;Motor_1.c: 213: lcd_clear();
  1328  000B8A  EC78  F006         	call	_lcd_clear	;wreg free
  1329                           
  1330                           ;Motor_1.c: 214: lcd_cursor ( 0, 0 ) ;
  1331  000B8E  0E00               	movlw	0
  1332  000B90  6E19               	movwf	lcd_cursor@y,c
  1333  000B92  0E00               	movlw	0
  1334  000B94  ECB5  F006         	call	_lcd_cursor
  1335                           
  1336                           ;Motor_1.c: 215: lcd_print ( msg_ary[num*2]);
  1337  000B98  5020               	movf	Window@num,w,c
  1338  000B9A  0D20               	mullw	32
  1339  000B9C  0E06               	movlw	low _msg_ary
  1340  000B9E  24F3               	addwf	prodl,w,c
  1341  000BA0  6E19               	movwf	lcd_print@mess,c
  1342  000BA2  0E06               	movlw	high _msg_ary
  1343  000BA4  20F4               	addwfc	prodh,w,c
  1344  000BA6  6E1A               	movwf	lcd_print@mess+1,c
  1345  000BA8  ECF7  F005         	call	_lcd_print	;wreg free
  1346                           
  1347                           ;Motor_1.c: 216: lcd_cursor ( 0, 1 ) ;
  1348  000BAC  0E01               	movlw	1
  1349  000BAE  6E19               	movwf	lcd_cursor@y,c
  1350  000BB0  0E00               	movlw	0
  1351  000BB2  ECB5  F006         	call	_lcd_cursor
  1352                           
  1353                           ;Motor_1.c: 217: lcd_print ( msg_ary[(num*2)+1]);
  1354  000BB6  5020               	movf	Window@num,w,c
  1355  000BB8  6E1E               	movwf	??_Window& (0+255),c
  1356  000BBA  6A1F               	clrf	(??_Window+1)& (0+255),c
  1357  000BBC  90D8               	bcf	status,0,c
  1358  000BBE  361E               	rlcf	??_Window,f,c
  1359  000BC0  361F               	rlcf	??_Window+1,f,c
  1360  000BC2  3A1E               	swapf	??_Window,f,c
  1361  000BC4  3A1F               	swapf	??_Window+1,f,c
  1362  000BC6  0EF0               	movlw	240
  1363  000BC8  161F               	andwf	??_Window+1,f,c
  1364  000BCA  501E               	movf	??_Window,w,c
  1365  000BCC  0B0F               	andlw	15
  1366  000BCE  121F               	iorwf	??_Window+1,f,c
  1367  000BD0  0EF0               	movlw	240
  1368  000BD2  161E               	andwf	??_Window,f,c
  1369  000BD4  0E10               	movlw	16
  1370  000BD6  261E               	addwf	??_Window,f,c
  1371  000BD8  0E00               	movlw	0
  1372  000BDA  221F               	addwfc	??_Window+1,f,c
  1373  000BDC  0E06               	movlw	low _msg_ary
  1374  000BDE  241E               	addwf	??_Window,w,c
  1375  000BE0  6E19               	movwf	lcd_print@mess,c
  1376  000BE2  0E06               	movlw	high _msg_ary
  1377  000BE4  201F               	addwfc	??_Window+1,w,c
  1378  000BE6  6E1A               	movwf	lcd_print@mess+1,c
  1379  000BE8  ECF7  F005         	call	_lcd_print	;wreg free
  1380  000BEC  0012               	return		;funcret
  1381  000BEE                     __end_of_Window:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           prodh	equ	0xFF4
  1388                           prodl	equ	0xFF3
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           postdec1	equ	0xFE5
  1392                           fsr1l	equ	0xFE1
  1393                           status	equ	0xFD8
  1394                           
  1395 ;; *************** function _lcd_print *****************
  1396 ;; Defined at:
  1397 ;;		line 215 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1400 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  i               1   28[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      unsigned char 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1412 ;;      Params:         2       0       0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0       0       0
  1415 ;;      Totals:         5       0       0       0       0       0       0
  1416 ;;Total ram usage:        5 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    4
  1419 ;; This function calls:
  1420 ;;		_lcd_print_ch
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;;		_Window
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text6
  1428  000BEE                     __ptext6:
  1429                           	opt stack 0
  1430  000BEE                     _lcd_print:
  1431                           	opt stack 26
  1432                           
  1433                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1434                           
  1435                           ;incstack = 0
  1436  000BEE  0E00               	movlw	0
  1437  000BF0  6E1D               	movwf	lcd_print@i,c
  1438                           
  1439                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1440  000BF2  D013               	goto	l1205
  1441  000BF4                     l1201:
  1442                           
  1443                           ;lcdlib_2016.c: 225: {
  1444                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1445  000BF4  501D               	movf	lcd_print@i,w,c
  1446  000BF6  0D01               	mullw	1
  1447  000BF8  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1448  000BFC  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1449  000C00  50F3               	movf	prodl,w,c
  1450  000C02  261B               	addwf	??_lcd_print,f,c
  1451  000C04  50F4               	movf	prodh,w,c
  1452  000C06  221C               	addwfc	??_lcd_print+1,f,c
  1453  000C08  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1454  000C0C  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1455  000C10                     	if	0	;tblptru may be non-zero
  1456  000C10                     	endif
  1457  000C10                     	if	0	;tblptru may be non-zero
  1458  000C10                     	endif
  1459  000C10  0008               	tblrd		*
  1460  000C12  50F5               	movf	tablat,w,c
  1461  000C14  ECD4  F006         	call	_lcd_print_ch
  1462                           
  1463                           ;lcdlib_2016.c: 227: i++ ;
  1464  000C18  2A1D               	incf	lcd_print@i,f,c
  1465  000C1A                     l1205:
  1466  000C1A  501D               	movf	lcd_print@i,w,c
  1467  000C1C  0D01               	mullw	1
  1468  000C1E  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1469  000C22  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1470  000C26  50F3               	movf	prodl,w,c
  1471  000C28  261B               	addwf	??_lcd_print,f,c
  1472  000C2A  50F4               	movf	prodh,w,c
  1473  000C2C  221C               	addwfc	??_lcd_print+1,f,c
  1474  000C2E  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1475  000C32  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1476  000C36                     	if	0	;tblptru may be non-zero
  1477  000C36                     	endif
  1478  000C36                     	if	0	;tblptru may be non-zero
  1479  000C36                     	endif
  1480  000C36  0008               	tblrd		*
  1481  000C38  50F5               	movf	tablat,w,c
  1482  000C3A  0900               	iorlw	0
  1483  000C3C  B4D8               	btfsc	status,2,c
  1484  000C3E  0012               	return	
  1485  000C40  D7D9               	goto	l1201
  1486  000C42                     __end_of_lcd_print:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           prodh	equ	0xFF4
  1493                           prodl	equ	0xFF3
  1494                           postinc0	equ	0xFEE
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           fsr1l	equ	0xFE1
  1498                           status	equ	0xFD8
  1499                           
  1500 ;; *************** function _lcd_print_ch *****************
  1501 ;; Defined at:
  1502 ;;		line 115 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  in              1    wreg     unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  in              1   23[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      unsigned char 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         0       0       0       0       0       0       0
  1517 ;;      Locals:         1       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0
  1519 ;;      Totals:         1       0       0       0       0       0       0
  1520 ;;Total ram usage:        1 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    3
  1523 ;; This function calls:
  1524 ;;		_lcd_raw_send
  1525 ;; This function is called by:
  1526 ;;		_lcd_print
  1527 ;;		_lcd_display_value
  1528 ;;		_lcd_display_int_value
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text7
  1533  000DA8                     __ptext7:
  1534                           	opt stack 0
  1535  000DA8                     _lcd_print_ch:
  1536                           	opt stack 26
  1537                           
  1538                           ;incstack = 0
  1539                           ;lcd_print_ch@in stored from wreg
  1540  000DA8  6E18               	movwf	lcd_print_ch@in,c
  1541                           
  1542                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1543  000DAA  0E01               	movlw	1
  1544  000DAC  6E14               	movwf	lcd_raw_send@RS,c
  1545  000DAE  5018               	movf	lcd_print_ch@in,w,c
  1546  000DB0  ECF0  F003         	call	_lcd_raw_send
  1547  000DB4  0012               	return	
  1548  000DB6                     __end_of_lcd_print_ch:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           prodh	equ	0xFF4
  1555                           prodl	equ	0xFF3
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           postdec1	equ	0xFE5
  1559                           fsr1l	equ	0xFE1
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function _lcd_cursor *****************
  1563 ;; Defined at:
  1564 ;;		line 144 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  x               1    wreg     unsigned char 
  1567 ;;  y               1   24[COMRAM] unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  x               1   25[COMRAM] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      unsigned char 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1579 ;;      Params:         1       0       0       0       0       0       0
  1580 ;;      Locals:         1       0       0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0
  1582 ;;      Totals:         2       0       0       0       0       0       0
  1583 ;;Total ram usage:        2 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    4
  1586 ;; This function calls:
  1587 ;;		_lcd_command
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;;		_Window
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text8
  1595  000D6A                     __ptext8:
  1596                           	opt stack 0
  1597  000D6A                     _lcd_cursor:
  1598                           	opt stack 26
  1599                           
  1600                           ;incstack = 0
  1601                           ;lcd_cursor@x stored from wreg
  1602  000D6A  6E1A               	movwf	lcd_cursor@x,c
  1603                           
  1604                           ;lcdlib_2016.c: 153: if ( y==0 )
  1605  000D6C  5019               	movf	lcd_cursor@y,w,c
  1606  000D6E  A4D8               	btfss	status,2,c
  1607  000D70  D002               	goto	l1193
  1608                           
  1609                           ;lcdlib_2016.c: 154: {
  1610                           ;lcdlib_2016.c: 156: y=0x80 ;
  1611  000D72  0E80               	movlw	128
  1612  000D74  D001               	goto	L3
  1613  000D76                     l1193:
  1614                           
  1615                           ;lcdlib_2016.c: 158: else
  1616                           ;lcdlib_2016.c: 159: {
  1617                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1618  000D76  0EC0               	movlw	192
  1619  000D78                     L3:
  1620  000D78  6E19               	movwf	lcd_cursor@y,c
  1621                           
  1622                           ;lcdlib_2016.c: 162: }
  1623                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1624  000D7A  5019               	movf	lcd_cursor@y,w,c
  1625  000D7C  241A               	addwf	lcd_cursor@x,w,c
  1626  000D7E  ECDB  F006         	call	_lcd_command
  1627  000D82  0012               	return	
  1628  000D84                     __end_of_lcd_cursor:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postdec1	equ	0xFE5
  1639                           fsr1l	equ	0xFE1
  1640                           status	equ	0xFD8
  1641                           
  1642 ;; *************** function _lcd_clear *****************
  1643 ;; Defined at:
  1644 ;;		line 131 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      unsigned char 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1658 ;;      Params:         0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0
  1660 ;;      Temps:          1       0       0       0       0       0       0
  1661 ;;      Totals:         1       0       0       0       0       0       0
  1662 ;;Total ram usage:        1 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    4
  1665 ;; This function calls:
  1666 ;;		_lcd_command
  1667 ;; This function is called by:
  1668 ;;		_lcd_start
  1669 ;;		_main
  1670 ;;		_Window
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text9
  1675  000CF0                     __ptext9:
  1676                           	opt stack 0
  1677  000CF0                     _lcd_clear:
  1678                           	opt stack 25
  1679                           
  1680                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1681                           
  1682                           ;incstack = 0
  1683  000CF0  0E01               	movlw	1
  1684  000CF2  ECDB  F006         	call	_lcd_command
  1685                           
  1686                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1687  000CF6  0E0D               	movlw	13
  1688  000CF8  6E19               	movwf	??_lcd_clear& (0+255),c
  1689  000CFA  0EC3               	movlw	195
  1690  000CFC                     u687:
  1691  000CFC  2EE8               	decfsz	wreg,f,c
  1692  000CFE  D7FE               	goto	u687
  1693  000D00  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1694  000D02  D7FC               	goto	u687
  1695  000D04  F000               	nop	
  1696                           
  1697                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1698  000D06  0E02               	movlw	2
  1699  000D08  ECDB  F006         	call	_lcd_command
  1700                           
  1701                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1702  000D0C  0E0D               	movlw	13
  1703  000D0E  6E19               	movwf	??_lcd_clear& (0+255),c
  1704  000D10  0EC3               	movlw	195
  1705  000D12                     u697:
  1706  000D12  2EE8               	decfsz	wreg,f,c
  1707  000D14  D7FE               	goto	u697
  1708  000D16  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1709  000D18  D7FC               	goto	u697
  1710  000D1A  F000               	nop	
  1711  000D1C  0012               	return	
  1712  000D1E                     __end_of_lcd_clear:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           prodh	equ	0xFF4
  1719                           prodl	equ	0xFF3
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           postdec1	equ	0xFE5
  1723                           fsr1l	equ	0xFE1
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _lcd_command *****************
  1727 ;; Defined at:
  1728 ;;		line 123 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  in              1    wreg     unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  in              1   23[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;		None               void
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1742 ;;      Params:         0       0       0       0       0       0       0
  1743 ;;      Locals:         1       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0
  1745 ;;      Totals:         1       0       0       0       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    3
  1749 ;; This function calls:
  1750 ;;		_lcd_raw_send
  1751 ;; This function is called by:
  1752 ;;		_lcd_clear
  1753 ;;		_lcd_cursor
  1754 ;;		_lcd_start
  1755 ;;		_lcd_cursor_on
  1756 ;;		_lcd_cursor_off
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text10
  1761  000DB6                     __ptext10:
  1762                           	opt stack 0
  1763  000DB6                     _lcd_command:
  1764                           	opt stack 26
  1765                           
  1766                           ;incstack = 0
  1767                           ;lcd_command@in stored from wreg
  1768  000DB6  6E18               	movwf	lcd_command@in,c
  1769                           
  1770                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1771  000DB8  0E00               	movlw	0
  1772  000DBA  6E14               	movwf	lcd_raw_send@RS,c
  1773  000DBC  5018               	movf	lcd_command@in,w,c
  1774  000DBE  ECF0  F003         	call	_lcd_raw_send
  1775  000DC2  0012               	return		;funcret
  1776  000DC4                     __end_of_lcd_command:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           prodh	equ	0xFF4
  1783                           prodl	equ	0xFF3
  1784                           postinc0	equ	0xFEE
  1785                           wreg	equ	0xFE8
  1786                           postdec1	equ	0xFE5
  1787                           fsr1l	equ	0xFE1
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _lcd_raw_send *****************
  1791 ;; Defined at:
  1792 ;;		line 74 in file "../Repositories/LCD_library/lcdlib_2016.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  in              1    wreg     unsigned char 
  1795 ;;  RS              1   19[COMRAM] unsigned char 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  in              1   22[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;		None               void
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1807 ;;      Params:         1       0       0       0       0       0       0
  1808 ;;      Locals:         1       0       0       0       0       0       0
  1809 ;;      Temps:          2       0       0       0       0       0       0
  1810 ;;      Totals:         4       0       0       0       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    2
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_lcd_print_ch
  1818 ;;		_lcd_command
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text11
  1823  0007E0                     __ptext11:
  1824                           	opt stack 0
  1825  0007E0                     _lcd_raw_send:
  1826                           	opt stack 26
  1827                           
  1828                           ;incstack = 0
  1829                           ;lcd_raw_send@in stored from wreg
  1830  0007E0  6E17               	movwf	lcd_raw_send@in,c
  1831                           
  1832                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1833  0007E2  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1834  0007E6  3A15               	swapf	??_lcd_raw_send,f,c
  1835  0007E8  0E0F               	movlw	15
  1836  0007EA  1615               	andwf	??_lcd_raw_send,f,c
  1837  0007EC  508C               	movf	3980,w,c	;volatile
  1838  0007EE  1815               	xorwf	??_lcd_raw_send,w,c
  1839  0007F0  0BFE               	andlw	-2
  1840  0007F2  1815               	xorwf	??_lcd_raw_send,w,c
  1841  0007F4  6E8C               	movwf	3980,c	;volatile
  1842                           
  1843                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1844  0007F6  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1845  0007FA  0E05               	movlw	5
  1846  0007FC  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1847  0007FE                     u385:
  1848  0007FE  90D8               	bcf	status,0,c
  1849  000800  3215               	rrcf	??_lcd_raw_send,f,c
  1850  000802  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1851  000804  D7FC               	goto	u385
  1852  000806  4615               	rlncf	??_lcd_raw_send,f,c
  1853  000808  508C               	movf	3980,w,c	;volatile
  1854  00080A  1815               	xorwf	??_lcd_raw_send,w,c
  1855  00080C  0BFD               	andlw	-3
  1856  00080E  1815               	xorwf	??_lcd_raw_send,w,c
  1857  000810  6E8C               	movwf	3980,c	;volatile
  1858                           
  1859                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1860  000812  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1861  000816  0E06               	movlw	6
  1862  000818  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1863  00081A                     u395:
  1864  00081A  90D8               	bcf	status,0,c
  1865  00081C  3215               	rrcf	??_lcd_raw_send,f,c
  1866  00081E  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1867  000820  D7FC               	goto	u395
  1868  000822  4615               	rlncf	??_lcd_raw_send,f,c
  1869  000824  4615               	rlncf	??_lcd_raw_send,f,c
  1870  000826  508C               	movf	3980,w,c	;volatile
  1871  000828  1815               	xorwf	??_lcd_raw_send,w,c
  1872  00082A  0BFB               	andlw	-5
  1873  00082C  1815               	xorwf	??_lcd_raw_send,w,c
  1874  00082E  6E8C               	movwf	3980,c	;volatile
  1875                           
  1876                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1877  000830  6A15               	clrf	??_lcd_raw_send& (0+255),c
  1878  000832  AE17               	btfss	lcd_raw_send@in,7,c
  1879  000834  D001               	bra	u405
  1880  000836  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  1881  000838                     u405:
  1882  000838  4615               	rlncf	??_lcd_raw_send,f,c
  1883  00083A  4615               	rlncf	??_lcd_raw_send,f,c
  1884  00083C  4615               	rlncf	??_lcd_raw_send,f,c
  1885  00083E  508C               	movf	3980,w,c	;volatile
  1886  000840  1815               	xorwf	??_lcd_raw_send,w,c
  1887  000842  0BF7               	andlw	-9
  1888  000844  1815               	xorwf	??_lcd_raw_send,w,c
  1889  000846  6E8C               	movwf	3980,c	;volatile
  1890                           
  1891                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1892  000848  B014               	btfsc	lcd_raw_send@RS,0,c
  1893  00084A  D002               	bra	u415
  1894  00084C  988C               	bcf	3980,4,c	;volatile
  1895  00084E  D001               	bra	u416
  1896  000850                     u415:
  1897  000850  888C               	bsf	3980,4,c	;volatile
  1898  000852                     u416:
  1899                           
  1900                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1901  000852  0E03               	movlw	3
  1902  000854                     u707:
  1903  000854  2EE8               	decfsz	wreg,f,c
  1904  000856  D7FE               	goto	u707
  1905                           
  1906                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1907  000858  8A8C               	bsf	3980,5,c	;volatile
  1908                           
  1909                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1910  00085A  0E03               	movlw	3
  1911  00085C                     u717:
  1912  00085C  2EE8               	decfsz	wreg,f,c
  1913  00085E  D7FE               	goto	u717
  1914                           
  1915                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  1916  000860  9A8C               	bcf	3980,5,c	;volatile
  1917                           
  1918                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1919  000862  0E51               	movlw	81
  1920  000864                     u727:
  1921  000864  2EE8               	decfsz	wreg,f,c
  1922  000866  D7FE               	goto	u727
  1923  000868  D000               	nop2		;nop
  1924                           
  1925                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  1926  00086A  B017               	btfsc	lcd_raw_send@in,0,c
  1927  00086C  D002               	bra	u425
  1928  00086E  908C               	bcf	3980,0,c	;volatile
  1929  000870  D001               	bra	u426
  1930  000872                     u425:
  1931  000872  808C               	bsf	3980,0,c	;volatile
  1932  000874                     u426:
  1933                           
  1934                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  1935  000874  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1936  000878  90D8               	bcf	status,0,c
  1937  00087A  3215               	rrcf	??_lcd_raw_send,f,c
  1938  00087C  4615               	rlncf	??_lcd_raw_send,f,c
  1939  00087E  508C               	movf	3980,w,c	;volatile
  1940  000880  1815               	xorwf	??_lcd_raw_send,w,c
  1941  000882  0BFD               	andlw	-3
  1942  000884  1815               	xorwf	??_lcd_raw_send,w,c
  1943  000886  6E8C               	movwf	3980,c	;volatile
  1944                           
  1945                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  1946  000888  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1947  00088C  90D8               	bcf	status,0,c
  1948  00088E  3215               	rrcf	??_lcd_raw_send,f,c
  1949  000890  90D8               	bcf	status,0,c
  1950  000892  3215               	rrcf	??_lcd_raw_send,f,c
  1951  000894  4615               	rlncf	??_lcd_raw_send,f,c
  1952  000896  4615               	rlncf	??_lcd_raw_send,f,c
  1953  000898  508C               	movf	3980,w,c	;volatile
  1954  00089A  1815               	xorwf	??_lcd_raw_send,w,c
  1955  00089C  0BFB               	andlw	-5
  1956  00089E  1815               	xorwf	??_lcd_raw_send,w,c
  1957  0008A0  6E8C               	movwf	3980,c	;volatile
  1958                           
  1959                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  1960  0008A2  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1961  0008A6  90D8               	bcf	status,0,c
  1962  0008A8  3215               	rrcf	??_lcd_raw_send,f,c
  1963  0008AA  90D8               	bcf	status,0,c
  1964  0008AC  3215               	rrcf	??_lcd_raw_send,f,c
  1965  0008AE  90D8               	bcf	status,0,c
  1966  0008B0  3215               	rrcf	??_lcd_raw_send,f,c
  1967  0008B2  4615               	rlncf	??_lcd_raw_send,f,c
  1968  0008B4  4615               	rlncf	??_lcd_raw_send,f,c
  1969  0008B6  4615               	rlncf	??_lcd_raw_send,f,c
  1970  0008B8  508C               	movf	3980,w,c	;volatile
  1971  0008BA  1815               	xorwf	??_lcd_raw_send,w,c
  1972  0008BC  0BF7               	andlw	-9
  1973  0008BE  1815               	xorwf	??_lcd_raw_send,w,c
  1974  0008C0  6E8C               	movwf	3980,c	;volatile
  1975                           
  1976                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1977  0008C2  0E03               	movlw	3
  1978  0008C4                     u737:
  1979  0008C4  2EE8               	decfsz	wreg,f,c
  1980  0008C6  D7FE               	goto	u737
  1981                           
  1982                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  1983  0008C8  8A8C               	bsf	3980,5,c	;volatile
  1984                           
  1985                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1986  0008CA  0E03               	movlw	3
  1987  0008CC                     u747:
  1988  0008CC  2EE8               	decfsz	wreg,f,c
  1989  0008CE  D7FE               	goto	u747
  1990                           
  1991                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  1992  0008D0  9A8C               	bcf	3980,5,c	;volatile
  1993                           
  1994                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1995  0008D2  0E51               	movlw	81
  1996  0008D4                     u757:
  1997  0008D4  2EE8               	decfsz	wreg,f,c
  1998  0008D6  D7FE               	goto	u757
  1999  0008D8  D000               	nop2		;nop
  2000  0008DA  0012               	return		;funcret
  2001  0008DC                     __end_of_lcd_raw_send:
  2002                           	opt stack 0
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           prodh	equ	0xFF4
  2008                           prodl	equ	0xFF3
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           postdec1	equ	0xFE5
  2012                           fsr1l	equ	0xFE1
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function _Initial *****************
  2016 ;; Defined at:
  2017 ;;		line 194 in file "Motor_1.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;		None               void
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         0       0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    3
  2038 ;; This function calls:
  2039 ;;		_OpenTimer0
  2040 ;;		_WriteTimer0
  2041 ;;		_delay_s
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text12
  2048  000D1E                     __ptext12:
  2049                           	opt stack 0
  2050  000D1E                     _Initial:
  2051                           	opt stack 27
  2052                           
  2053                           ;Motor_1.c: 196: ADCON1 = 0x0F;
  2054                           
  2055                           ;incstack = 0
  2056  000D1E  0E0F               	movlw	15
  2057  000D20  6EC1               	movwf	4033,c	;volatile
  2058                           
  2059                           ;Motor_1.c: 197: TRISB = 0xFF;
  2060  000D22  6893               	setf	3987,c	;volatile
  2061                           
  2062                           ;Motor_1.c: 198: TRISC = 0x00;
  2063  000D24  0E00               	movlw	0
  2064  000D26  6E94               	movwf	3988,c	;volatile
  2065                           
  2066                           ;Motor_1.c: 200: LATC = 0xff;
  2067  000D28  688B               	setf	3979,c	;volatile
  2068                           
  2069                           ;Motor_1.c: 201: delay_s(3);
  2070  000D2A  0E03               	movlw	3
  2071  000D2C  EC5E  F006         	call	_delay_s
  2072                           
  2073                           ;Motor_1.c: 202: LATC = 0x00;
  2074  000D30  0E00               	movlw	0
  2075  000D32  6E8B               	movwf	3979,c	;volatile
  2076                           
  2077                           ;Motor_1.c: 205: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110000);
  2078  000D34  0E90               	movlw	144
  2079  000D36  ECA5  F006         	call	_OpenTimer0
  2080                           
  2081                           ;Motor_1.c: 206: WriteTimer0(45536);
  2082  000D3A  0EB1               	movlw	177
  2083  000D3C  6E15               	movwf	WriteTimer0@timer0+1,c
  2084  000D3E  0EE0               	movlw	224
  2085  000D40  6E14               	movwf	WriteTimer0@timer0,c
  2086  000D42  ECC2  F006         	call	_WriteTimer0	;wreg free
  2087                           
  2088                           ;Motor_1.c: 207: (INTCONbits.GIE = 1);
  2089  000D46  8EF2               	bsf	intcon,7,c	;volatile
  2090  000D48  0012               	return		;funcret
  2091  000D4A                     __end_of_Initial:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           tblptrh	equ	0xFF7
  2095                           tblptrl	equ	0xFF6
  2096                           tablat	equ	0xFF5
  2097                           prodh	equ	0xFF4
  2098                           prodl	equ	0xFF3
  2099                           intcon	equ	0xFF2
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           postdec1	equ	0xFE5
  2103                           fsr1l	equ	0xFE1
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _delay_s *****************
  2107 ;; Defined at:
  2108 ;;		line 221 in file "Motor_1.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  secs            1    wreg     unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  secs            1   20[COMRAM] unsigned char 
  2113 ;;  i               1   22[COMRAM] unsigned char 
  2114 ;;  j               1   21[COMRAM] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2124 ;;      Params:         0       0       0       0       0       0       0
  2125 ;;      Locals:         3       0       0       0       0       0       0
  2126 ;;      Temps:          1       0       0       0       0       0       0
  2127 ;;      Totals:         4       0       0       0       0       0       0
  2128 ;;Total ram usage:        4 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    2
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;;		_Initial
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text13
  2140  000CBC                     __ptext13:
  2141                           	opt stack 0
  2142  000CBC                     _delay_s:
  2143                           	opt stack 28
  2144                           
  2145                           ;incstack = 0
  2146                           ;delay_s@secs stored from wreg
  2147  000CBC  6E15               	movwf	delay_s@secs,c
  2148                           
  2149                           ;Motor_1.c: 223: unsigned char i,j;
  2150                           ;Motor_1.c: 224: for(j=0;j<secs;j++)
  2151  000CBE  0E00               	movlw	0
  2152  000CC0  6E16               	movwf	delay_s@j,c
  2153  000CC2  D011               	goto	l883
  2154  000CC4                     l871:
  2155                           
  2156                           ;Motor_1.c: 225: {
  2157                           ;Motor_1.c: 226: for (i=0;i<25;i++)
  2158  000CC4  0E00               	movlw	0
  2159  000CC6  6E17               	movwf	delay_s@i,c
  2160  000CC8                     l873:
  2161  000CC8  0E18               	movlw	24
  2162  000CCA  6417               	cpfsgt	delay_s@i,c
  2163  000CCC  D001               	goto	l877
  2164  000CCE  D00A               	goto	l881
  2165  000CD0                     l877:
  2166                           
  2167                           ;Motor_1.c: 227: _delay((unsigned long)((40)*(8000000/4000.0)));
  2168  000CD0  0E68               	movlw	104
  2169  000CD2  6E14               	movwf	??_delay_s& (0+255),c
  2170  000CD4  0EE4               	movlw	228
  2171  000CD6                     u767:
  2172  000CD6  2EE8               	decfsz	wreg,f,c
  2173  000CD8  D7FE               	goto	u767
  2174  000CDA  2E14               	decfsz	??_delay_s& (0+255),f,c
  2175  000CDC  D7FC               	goto	u767
  2176  000CDE  D000               	nop2	
  2177  000CE0  2A17               	incf	delay_s@i,f,c
  2178  000CE2  D7F2               	goto	l873
  2179  000CE4                     l881:
  2180  000CE4  2A16               	incf	delay_s@j,f,c
  2181  000CE6                     l883:
  2182  000CE6  5015               	movf	delay_s@secs,w,c
  2183  000CE8  5C16               	subwf	delay_s@j,w,c
  2184  000CEA  B0D8               	btfsc	status,0,c
  2185  000CEC  0012               	return	
  2186  000CEE  D7EA               	goto	l871
  2187  000CF0                     __end_of_delay_s:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           intcon	equ	0xFF2
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1l	equ	0xFE1
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function _WriteTimer0 *****************
  2203 ;; Defined at:
  2204 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  timer0          2   19[COMRAM] unsigned int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  timer           2   21[COMRAM] struct Timers
  2209 ;; Return value:  Size  Location     Type
  2210 ;;		None               void
  2211 ;; Registers used:
  2212 ;;		None
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2218 ;;      Params:         2       0       0       0       0       0       0
  2219 ;;      Locals:         2       0       0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0
  2221 ;;      Totals:         4       0       0       0       0       0       0
  2222 ;;Total ram usage:        4 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    2
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_Initial
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text14
  2233  000D84                     __ptext14:
  2234                           	opt stack 0
  2235  000D84                     _WriteTimer0:
  2236                           	opt stack 27
  2237                           
  2238                           ;incstack = 0
  2239  000D84  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2240  000D88  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2241  000D8C  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2242  000D90  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2243  000D94  0012               	return		;funcret
  2244  000D96                     __end_of_WriteTimer0:
  2245                           	opt stack 0
  2246                           tblptru	equ	0xFF8
  2247                           tblptrh	equ	0xFF7
  2248                           tblptrl	equ	0xFF6
  2249                           tablat	equ	0xFF5
  2250                           prodh	equ	0xFF4
  2251                           prodl	equ	0xFF3
  2252                           intcon	equ	0xFF2
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1l	equ	0xFE1
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _OpenTimer0 *****************
  2260 ;; Defined at:
  2261 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  config          1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  config          1   19[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         0       0       0       0       0       0       0
  2276 ;;      Locals:         1       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0
  2278 ;;      Totals:         1       0       0       0       0       0       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    2
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_Initial
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text15
  2290  000D4A                     __ptext15:
  2291                           	opt stack 0
  2292  000D4A                     _OpenTimer0:
  2293                           	opt stack 27
  2294                           
  2295                           ;incstack = 0
  2296                           ;OpenTimer0@config stored from wreg
  2297  000D4A  6E14               	movwf	OpenTimer0@config,c
  2298  000D4C  5014               	movf	OpenTimer0@config,w,c
  2299  000D4E  0B7F               	andlw	127
  2300  000D50  6ED5               	movwf	4053,c	;volatile
  2301  000D52  0E00               	movlw	0
  2302  000D54  6ED7               	movwf	4055,c	;volatile
  2303  000D56  0E00               	movlw	0
  2304  000D58  6ED6               	movwf	4054,c	;volatile
  2305  000D5A  94F2               	bcf	intcon,2,c	;volatile
  2306  000D5C  AE14               	btfss	OpenTimer0@config,7,c
  2307  000D5E  D002               	goto	l178
  2308  000D60  8AF2               	bsf	intcon,5,c	;volatile
  2309  000D62  D001               	goto	l179
  2310  000D64                     l178:
  2311  000D64  9AF2               	bcf	intcon,5,c	;volatile
  2312  000D66                     l179:
  2313  000D66  8ED5               	bsf	4053,7,c	;volatile
  2314  000D68  0012               	return		;funcret
  2315  000D6A                     __end_of_OpenTimer0:
  2316                           	opt stack 0
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1l	equ	0xFE1
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _myIsr *****************
  2331 ;; Defined at:
  2332 ;;		line 67 in file "Motor_1.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;		None               void
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2346 ;;      Params:         0       0       0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0
  2348 ;;      Temps:         15       0       0       0       0       0       0
  2349 ;;      Totals:        15       0       0       0       0       0       0
  2350 ;;Total ram usage:       15 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    1
  2353 ;; This function calls:
  2354 ;;		_Find_Button_Press
  2355 ;;		i2_WriteTimer0
  2356 ;; This function is called by:
  2357 ;;		Interrupt level 2
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	intcode
  2362  000008                     __pintcode:
  2363                           	opt stack 0
  2364  000008                     _myIsr:
  2365                           	opt stack 25
  2366                           
  2367                           ;incstack = 0
  2368  000008  822F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2369  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2370  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2371  000012  ED6E  F004         	call	int_func,f	;refresh shadow registers
  2372                           pclatu	equ	0xFFB
  2373                           pclath	equ	0xFFA
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           prodh	equ	0xFF4
  2379                           prodl	equ	0xFF3
  2380                           intcon	equ	0xFF2
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           postdec1	equ	0xFE5
  2384                           fsr1l	equ	0xFE1
  2385                           status	equ	0xFD8
  2386                           
  2387                           	psect	intcode_body
  2388  0008DC                     __pintcode_body:
  2389                           	opt stack 25
  2390  0008DC                     int_func:
  2391                           	opt stack 25
  2392  0008DC  0006               	pop		; remove dummy address from shadow register refresh
  2393  0008DE  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2394  0008E2  CFEA F009          	movff	fsr0h,??_myIsr+4
  2395  0008E6  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2396  0008EA  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2397  0008EE  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2398  0008F2  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2399  0008F6  CFF3 F00E          	movff	prodl,??_myIsr+9
  2400  0008FA  CFF4 F00F          	movff	prodh,??_myIsr+10
  2401  0008FE  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2402  000902  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2403  000906  CFF8 F012          	movff	tblptru,??_myIsr+13
  2404  00090A  CFF5 F013          	movff	tablat,??_myIsr+14
  2405                           
  2406                           ;Motor_1.c: 71: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  2407  00090E  BAF2               	btfsc	intcon,5,c	;volatile
  2408  000910  A4F2               	btfss	intcon,2,c	;volatile
  2409  000912  D01E               	goto	i2l124
  2410                           
  2411                           ;Motor_1.c: 73: Find_Button_Press();
  2412  000914  EC4D  F005         	call	_Find_Button_Press	;wreg free
  2413                           
  2414                           ;Motor_1.c: 74: WriteTimer0(40960);
  2415  000918  0EA0               	movlw	160
  2416  00091A  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2417  00091C  0E00               	movlw	0
  2418  00091E  6E01               	movwf	i2WriteTimer0@timer0,c
  2419  000920  ECCB  F006         	call	i2_WriteTimer0	;wreg free
  2420                           
  2421                           ;Motor_1.c: 75: INTCONbits.TMR0IF = 0;
  2422  000924  94F2               	bcf	intcon,2,c	;volatile
  2423                           
  2424                           ;Motor_1.c: 78: count_test++;
  2425  000926  2A2A               	incf	_count_test,f,c
  2426                           
  2427                           ;Motor_1.c: 79: if(count_test == 100){
  2428  000928  0E64               	movlw	100
  2429  00092A  182A               	xorwf	_count_test,w,c
  2430  00092C  A4D8               	btfss	status,2,c
  2431  00092E  D010               	goto	i2l124
  2432                           
  2433                           ;Motor_1.c: 80: PORTCbits.RC7 = ~PORTCbits.RC7;
  2434  000930  AE82               	btfss	3970,7,c	;volatile
  2435  000932  D002               	goto	i2u62_40
  2436  000934  0E01               	movlw	1
  2437  000936  D001               	goto	i2u62_46
  2438  000938                     i2u62_40:
  2439  000938  0E00               	movlw	0
  2440  00093A                     i2u62_46:
  2441  00093A  0AFF               	xorlw	255
  2442  00093C  6E05               	movwf	??_myIsr& (0+255),c
  2443  00093E  3205               	rrcf	??_myIsr,f,c
  2444  000940  3205               	rrcf	??_myIsr,f,c
  2445  000942  5082               	movf	3970,w,c	;volatile
  2446  000944  1805               	xorwf	??_myIsr,w,c
  2447  000946  0B7F               	andlw	-129
  2448  000948  1805               	xorwf	??_myIsr,w,c
  2449  00094A  6E82               	movwf	3970,c	;volatile
  2450                           
  2451                           ;Motor_1.c: 81: count_test = 0;
  2452  00094C  0E00               	movlw	0
  2453  00094E  6E2A               	movwf	_count_test,c
  2454  000950                     i2l124:
  2455  000950  C013  FFF5         	movff	??_myIsr+14,tablat
  2456  000954  C012  FFF8         	movff	??_myIsr+13,tblptru
  2457  000958  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2458  00095C  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2459  000960  C00F  FFF4         	movff	??_myIsr+10,prodh
  2460  000964  C00E  FFF3         	movff	??_myIsr+9,prodl
  2461  000968  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2462  00096C  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2463  000970  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2464  000974  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2465  000978  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2466  00097C  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2467  000980  C007  FFFB         	movff	??_myIsr+2,pclatu
  2468  000984  C006  FFFA         	movff	??_myIsr+1,pclath
  2469  000988  922F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2470  00098A  0011               	retfie		f
  2471  00098C                     __end_of_myIsr:
  2472                           	opt stack 0
  2473                           pclatu	equ	0xFFB
  2474                           pclath	equ	0xFFA
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           intcon	equ	0xFF2
  2482                           postinc0	equ	0xFEE
  2483                           fsr0h	equ	0xFEA
  2484                           fsr0l	equ	0xFE9
  2485                           wreg	equ	0xFE8
  2486                           postdec1	equ	0xFE5
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function i2_WriteTimer0 *****************
  2494 ;; Defined at:
  2495 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  timer0          2    0[COMRAM] unsigned int 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2500 ;; Return value:  Size  Location     Type
  2501 ;;		None               void
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2509 ;;      Params:         2       0       0       0       0       0       0
  2510 ;;      Locals:         2       0       0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0
  2512 ;;      Totals:         4       0       0       0       0       0       0
  2513 ;;Total ram usage:        4 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_myIsr
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text17
  2523  000D96                     __ptext17:
  2524                           	opt stack 0
  2525  000D96                     i2_WriteTimer0:
  2526                           	opt stack 25
  2527                           
  2528                           ;incstack = 0
  2529  000D96  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2530  000D9A  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2531  000D9E  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2532  000DA2  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2533  000DA6  0012               	return		;funcret
  2534  000DA8                     __end_ofi2_WriteTimer0:
  2535                           	opt stack 0
  2536                           pclatu	equ	0xFFB
  2537                           pclath	equ	0xFFA
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           prodh	equ	0xFF4
  2543                           prodl	equ	0xFF3
  2544                           intcon	equ	0xFF2
  2545                           postinc0	equ	0xFEE
  2546                           fsr0h	equ	0xFEA
  2547                           fsr0l	equ	0xFE9
  2548                           wreg	equ	0xFE8
  2549                           postdec1	equ	0xFE5
  2550                           fsr1h	equ	0xFE2
  2551                           fsr1l	equ	0xFE1
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _Find_Button_Press *****************
  2557 ;; Defined at:
  2558 ;;		line 36 in file "../Repositories/Buttons_Debounce_State_Mch/Buttons_Debounce.X/Buttons_Debounce.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2572 ;;      Params:         0       0       0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_myIsr
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text18
  2586  000A9A                     __ptext18:
  2587                           	opt stack 0
  2588  000A9A                     _Find_Button_Press:
  2589                           	opt stack 25
  2590                           
  2591                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2592                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2593                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2594                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2595                           
  2596                           ;incstack = 0
  2597  000A9A  D030               	goto	i2l1003
  2598  000A9C                     i2l979:
  2599                           
  2600                           ;Buttons_Debounce.c: 46: if(PORTB)
  2601  000A9C  5081               	movf	3969,w,c	;volatile
  2602  000A9E  B4D8               	btfsc	status,2,c
  2603  000AA0  0012               	return	
  2604                           
  2605                           ;Buttons_Debounce.c: 47: {
  2606                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2607  000AA2  0E01               	movlw	1
  2608  000AA4  6E27               	movwf	Find_Button_Press@Button_State,c
  2609                           
  2610                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2611  000AA6  0E00               	movlw	0
  2612  000AA8  6E26               	movwf	Find_Button_Press@Button_Count,c
  2613                           
  2614                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2615  000AAA  CF81 F028          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2616                           
  2617                           ;Buttons_Debounce.c: 52: }
  2618                           ;Buttons_Debounce.c: 53: break;
  2619  000AAE  0012               	return	
  2620  000AB0                     i2l985:
  2621                           
  2622                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2623  000AB0  5081               	movf	3969,w,c	;volatile
  2624  000AB2  1828               	xorwf	Find_Button_Press@Temp_Press,w,c
  2625  000AB4  A4D8               	btfss	status,2,c
  2626  000AB6  D007               	goto	i2l993
  2627                           
  2628                           ;Buttons_Debounce.c: 56: {
  2629                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2630  000AB8  2A26               	incf	Find_Button_Press@Button_Count,f,c
  2631                           
  2632                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2633  000ABA  0E0A               	movlw	10
  2634  000ABC  6426               	cpfsgt	Find_Button_Press@Button_Count,c
  2635  000ABE  0012               	return	
  2636                           
  2637                           ;Buttons_Debounce.c: 59: {
  2638                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2639  000AC0  0E02               	movlw	2
  2640  000AC2  6E27               	movwf	Find_Button_Press@Button_State,c
  2641                           
  2642                           ;Buttons_Debounce.c: 61: }
  2643                           ;Buttons_Debounce.c: 62: }
  2644  000AC4  0012               	return	
  2645  000AC6                     i2l993:
  2646                           
  2647                           ;Buttons_Debounce.c: 63: else
  2648                           ;Buttons_Debounce.c: 64: {
  2649                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2650  000AC6  0E00               	movlw	0
  2651  000AC8  6E27               	movwf	Find_Button_Press@Button_State,c
  2652                           
  2653                           ;Buttons_Debounce.c: 66: }
  2654                           ;Buttons_Debounce.c: 67: break;
  2655  000ACA  0012               	return	
  2656  000ACC                     i2l995:
  2657                           
  2658                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2659  000ACC  5081               	movf	3969,w,c	;volatile
  2660  000ACE  A4D8               	btfss	status,2,c
  2661  000AD0  0012               	return	
  2662                           
  2663                           ;Buttons_Debounce.c: 70: {
  2664                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2665  000AD2  0E03               	movlw	3
  2666  000AD4  6E27               	movwf	Find_Button_Press@Button_State,c
  2667                           
  2668                           ;Buttons_Debounce.c: 72: }
  2669                           ;Buttons_Debounce.c: 73: break;
  2670  000AD6  0012               	return	
  2671  000AD8                     i2l23:
  2672                           
  2673                           ;Buttons_Debounce.c: 75: {
  2674                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2675  000AD8  C028  F029         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2676                           
  2677                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2678  000ADC  0E00               	movlw	0
  2679  000ADE  6E27               	movwf	Find_Button_Press@Button_State,c
  2680                           
  2681                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2682  000AE0  0E00               	movlw	0
  2683  000AE2  6E26               	movwf	Find_Button_Press@Button_Count,c
  2684                           
  2685                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2686  000AE4  0E00               	movlw	0
  2687  000AE6  6E28               	movwf	Find_Button_Press@Temp_Press,c
  2688                           
  2689                           ;Buttons_Debounce.c: 80: }
  2690                           ;Buttons_Debounce.c: 81: break;
  2691  000AE8  0012               	return	
  2692  000AEA                     i2l1001:
  2693                           
  2694                           ;Buttons_Debounce.c: 83: {
  2695                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2696  000AEA  0E00               	movlw	0
  2697  000AEC  6E27               	movwf	Find_Button_Press@Button_State,c
  2698                           
  2699                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2700  000AEE  0E00               	movlw	0
  2701  000AF0  6E26               	movwf	Find_Button_Press@Button_Count,c
  2702                           
  2703                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2704  000AF2  0E00               	movlw	0
  2705  000AF4  6E28               	movwf	Find_Button_Press@Temp_Press,c
  2706                           
  2707                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2708  000AF6  0E00               	movlw	0
  2709  000AF8  6E29               	movwf	_Button_Press,c
  2710                           
  2711                           ;Buttons_Debounce.c: 88: }
  2712                           ;Buttons_Debounce.c: 89: }
  2713  000AFA  0012               	return	
  2714  000AFC                     i2l1003:
  2715  000AFC  5027               	movf	Find_Button_Press@Button_State,w,c
  2716                           
  2717                           ; Switch size 1, requested type "space"
  2718                           ; Number of cases is 4, Range of values is 0 to 3
  2719                           ; switch strategies available:
  2720                           ; Name         Instructions Cycles
  2721                           ; simple_byte           13     7 (average)
  2722                           ;	Chosen strategy is simple_byte
  2723  000AFE  0A00               	xorlw	0	; case 0
  2724  000B00  B4D8               	btfsc	status,2,c
  2725  000B02  D7CC               	goto	i2l979
  2726  000B04  0A01               	xorlw	1	; case 1
  2727  000B06  B4D8               	btfsc	status,2,c
  2728  000B08  D7D3               	goto	i2l985
  2729  000B0A  0A03               	xorlw	3	; case 2
  2730  000B0C  B4D8               	btfsc	status,2,c
  2731  000B0E  D7DE               	goto	i2l995
  2732  000B10  0A01               	xorlw	1	; case 3
  2733  000B12  B4D8               	btfsc	status,2,c
  2734  000B14  D7E1               	goto	i2l23
  2735  000B16  D7E9               	goto	i2l1001
  2736  000B18                     __end_of_Find_Button_Press:
  2737                           	opt stack 0
  2738                           pclatu	equ	0xFFB
  2739                           pclath	equ	0xFFA
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           prodh	equ	0xFF4
  2745                           prodl	equ	0xFF3
  2746                           intcon	equ	0xFF2
  2747                           postinc0	equ	0xFEE
  2748                           fsr0h	equ	0xFEA
  2749                           fsr0l	equ	0xFE9
  2750                           wreg	equ	0xFE8
  2751                           postdec1	equ	0xFE5
  2752                           fsr1h	equ	0xFE2
  2753                           fsr1l	equ	0xFE1
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           pclatu	equ	0xFFB
  2758                           pclath	equ	0xFFA
  2759                           tblptru	equ	0xFF8
  2760                           tblptrh	equ	0xFF7
  2761                           tblptrl	equ	0xFF6
  2762                           tablat	equ	0xFF5
  2763                           prodh	equ	0xFF4
  2764                           prodl	equ	0xFF3
  2765                           intcon	equ	0xFF2
  2766                           postinc0	equ	0xFEE
  2767                           fsr0h	equ	0xFEA
  2768                           fsr0l	equ	0xFE9
  2769                           wreg	equ	0xFE8
  2770                           postdec1	equ	0xFE5
  2771                           fsr1h	equ	0xFE2
  2772                           fsr1l	equ	0xFE1
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777                           	psect	rparam
  2778  0000                     pclatu	equ	0xFFB
  2779                           pclath	equ	0xFFA
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           intcon	equ	0xFF2
  2787                           postinc0	equ	0xFEE
  2788                           fsr0h	equ	0xFEA
  2789                           fsr0l	equ	0xFE9
  2790                           wreg	equ	0xFE8
  2791                           postdec1	equ	0xFE5
  2792                           fsr1h	equ	0xFE2
  2793                           fsr1l	equ	0xFE1
  2794                           fsr2h	equ	0xFDA
  2795                           fsr2l	equ	0xFD9
  2796                           status	equ	0xFD8
  2797                           
  2798                           	psect	temp
  2799  00002F                     btemp:
  2800                           	opt stack 0
  2801  00002F                     	ds	1
  2802  0000                     int$flags	set	btemp
  2803                           pclatu	equ	0xFFB
  2804                           pclath	equ	0xFFA
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           intcon	equ	0xFF2
  2812                           postinc0	equ	0xFEE
  2813                           fsr0h	equ	0xFEA
  2814                           fsr0l	equ	0xFE9
  2815                           wreg	equ	0xFE8
  2816                           postdec1	equ	0xFE5
  2817                           fsr1h	equ	0xFE2
  2818                           fsr1l	equ	0xFE1
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        4
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     37      46
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7970
                                             32 COMRAM     5     5      0
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2382
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1200
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     285
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      60
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     25      2E       1       36.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      15        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 08 12:07:14 2018

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l134 0722                            l137 0732                            l139 0742  
                          l178 0D64                            l179 0D66                            l871 0CC4  
                          l881 0CE4                            l873 0CC8                            l883 0CE6  
                          l877 0CD0                   __CFG_CPB$OFF 000000                            u405 0838  
                          u415 0850                            u416 0852                            u425 0872  
                          u426 0874                   __CFG_CPD$OFF 000000                            u385 07FE  
                          u707 0854                            u395 081A                            u717 085C  
                          u727 0864                            u737 08C4                            u747 08CC  
                          u757 08D4                            u677 0C4E                            u767 0CD6  
                          u687 0CFC                            u697 0D12           __size_of_WriteTimer0 0012  
                 ___awmod@sign 0019                            prod 000FF3                            wreg 000FE8  
                  lcd_cursor@x 001A                    lcd_cursor@y 0019                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l1201 0BF4                           l1205 0C1A  
                         l1231 0A58                           l1223 0A3A                           l1241 0A78  
                         l1233 0A5C                           l1217 0A2A                           l1305 0C7E  
                         l1411 0762                           l1229 0A50                           l1245 0A82  
                         l1261 0B2C                           l1271 0B4E                           l1415 0786  
                         l1193 0D76                           l1249 0A90                           l1273 0B52  
                         l1281 0B70                           l1265 0B38                           l1409 0752  
                         l1419 07AA                           l1427 07CA                           l1285 0B7E  
                         l1277 0B66                           l1269 0B46                           l1429 07DA  
                         l1295 0C5A                           l1393 071A                           l1299 0C62  
                         STR_1 06B2                           STR_2 06A6                           _LATC 000F8B  
                         i2l23 0AD8                           _main 06BC                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 002F  
       __size_ofi2_WriteTimer0 0012                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0016                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015                   ___param_bank 000010  
              __end_of_Initial 0D4A                 ??_lcd_print_ch 0018                  lcd_command@in 0018  
                        ?_main 0001                __end_of___awdiv 0A9A                __end_of___awmod 0B88  
                        _T0CON 000FD5                ___awdiv@divisor 0016                          i2l124 0950  
              ___awdiv@counter 0018                          i2l993 0AC6                          i2l985 0AB0  
                        i2l995 0ACC                          i2l979 0A9C                          _TMR0H 000FD7  
                        _TMR0L 000FD6                          _PORTB 000F81                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
              __end_of_delay_s 0CF0                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000                          _myIsr 0008  
                        main@A 0025                          main@B 0023                          main@C 0021  
              __end_of_msg_ary 06A6                          tablat 000FF5                          status 000FD8  
              __initialization 0C84                   __end_of_main 07E0                         ??_main 0021  
                i2_WriteTimer0 0D96                  __activetblptr 000002                 main@Temp_Value 0022  
                       _ADCON1 000FC1                         ?_myIsr 0001               ___awdiv@dividend 0014  
                       i2l1001 0AEA                         i2l1003 0AFC                     _OpenTimer0 0D4A  
                    ??_Initial 0018                 __CFG_XINST$OFF 000000                  lcd_print@mess 0019  
             __end_of_lcd_init 0606           __size_of_lcd_command 000E                         _Window 0B88  
                    ??___awdiv 0018                 __CFG_STVREN$ON 000000                      ??___awmod 0018  
             OpenTimer0@config 0014               ___awdiv@quotient 001A                ___awmod@divisor 0016  
                    ??_delay_s 0014                 ?i2_WriteTimer0 0001                ___awmod@counter 0018  
                 __pdataCOMRAM 002B                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8           __end_of_lcd_raw_send 08DC  
         __end_of_lcd_print_ch 0DB6                     __accesstop 0080        __end_of__initialization 0CAE  
              __CFG_PBADEN$OFF 000000                  ___rparam_used 000001                 __pcstackCOMRAM 0001  
                __end_of_myIsr 098C             __size_of_lcd_clear 002E             __size_of_lcd_print 0054  
           __size_of_lcd_start 0042                        ??_myIsr 0005                    ?_OpenTimer0 0001  
               lcd_raw_send@RS 0014                 lcd_raw_send@in 0017                        ?_Window 0001  
        lcd_display_value@tens 001D                ??i2_WriteTimer0 0003               WriteTimer0@timer 0016  
                ??_WriteTimer0 0016                     _lcd_cursor 0D6A                        i2u62_40 0938  
                      i2u62_46 093A            i2WriteTimer0@timer0 0001                        _Initial 0D1E  
                   _count_test 002A                        __Hparam 0000                        __Lparam 0000  
            __end_of_lcd_clear 0D1E    Find_Button_Press@Temp_Press 0028                __size_of_Window 0066  
            __end_of_lcd_print 0C42              __end_of_lcd_start 0C84                 lcd_print_ch@in 0018  
                      ___awdiv 0A16                        ___awmod 0B18                   __psmallconst 0600  
                      __pcinit 0C84                        _delay_s 0CBC                        __ramtop 0600  
          __size_of_OpenTimer0 0020                        __ptext0 06BC                        __ptext1 0C42  
                      __ptext2 098C                        __ptext3 0B18                        __ptext4 0A16  
                      __ptext5 0B88                        __ptext6 0BEE                        __ptext7 0DA8  
                      __ptext8 0D6A                        __ptext9 0CF0                      _T0CONbits 000FD5  
        __size_of_lcd_raw_send 00FC               ___awmod@dividend 0014                        _msg_ary 0606  
          __end_of_WriteTimer0 0D96          __size_of_lcd_print_ch 000E                        _problem 002B  
                      _startup 002D                 __pintcode_body 08DC           end_of_initialization 0CAE  
                __Lmediumconst 0000                        int_func 08DC              _Find_Button_Press 0A9A  
           ?_Find_Button_Press 0001                        postdec1 000FE5                        postinc0 000FEE  
                 _lcd_raw_send 07E0            ??_Find_Button_Press 0001                   _lcd_print_ch 0DA8  
                    _PORTCbits 000F82                    ?_lcd_cursor 0019      __end_of_Find_Button_Press 0B18  
                ??_lcd_command 0018                     lcd_print@i 001D                     lcd_start@i 001B  
            _lcd_display_value 098C                 __end_of_Window 0BEE             ?_lcd_display_value 0001  
                __pidataCOMRAM 0DC4                    _WriteTimer0 0D84            ??_lcd_display_value 001C  
          start_initialization 0C84                   _Button_Press 0029                   ??_OpenTimer0 0014  
    __end_of_lcd_display_value 0A16                       ??_Window 001E            __size_of_lcd_cursor 001A  
          __end_of_lcd_command 0DC4               __CFG_LPT1OSC$OFF 000000             __end_of_OpenTimer0 0D6A  
                  __pbssCOMRAM 0026                      Window@num 0020     __size_of_Find_Button_Press 007E  
                     ?_Initial 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awdiv 0014                       ?___awmod 0014                      _lcd_clear 0CF0  
                     ?_delay_s 0001          __end_ofi2_WriteTimer0 0DA8                      _lcd_print 0BEE  
       lcd_display_value@hunds 001C                      _lcd_start 0C42         lcd_display_value@value 001F  
       lcd_display_value@units 001E                    __smallconst 0600              WriteTimer0@timer0 0014  
           i2WriteTimer0@timer 0003                 __size_of_myIsr 0984                       _LATDbits 000F8C  
                  _lcd_command 0DB6     __size_of_lcd_display_value 008A               main@my_mch_state 0024  
             __CFG_WDTPS$32768 000000                     ?_lcd_clear 0001                     ?_lcd_print 0019  
                   ?_lcd_start 0001                   ??_lcd_cursor 001A                      copy_data0 0CA2  
                     __Hrparam 0000               __size_of_Initial 002C                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 0D84               __size_of___awdiv 0084  
             __size_of___awmod 0070                   ?_WriteTimer0 0014               __size_of_delay_s 0034  
                     __ptext10 0DB6                       __ptext11 07E0                       __ptext12 0D1E  
                     __ptext13 0CBC                       __ptext14 0D84                       __ptext15 0D4A  
                     __ptext17 0D96                       __ptext18 0A9A                       _lcd_init 0601  
                __size_of_main 0124                       delay_s@i 0017                       delay_s@j 0016  
                     int$flags 002F                    ??_lcd_clear 0019                    delay_s@secs 0015  
                  ??_lcd_print 001B                    ??_lcd_start 001A                     _INTCONbits 000FF2  
                     intlevel2 0000                     _OSCCONbits 000FD3  Find_Button_Press@Button_Count 0026  
Find_Button_Press@Button_State 0027                   ?_lcd_command 0001  
